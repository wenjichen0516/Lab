{"ast":null,"code":"var _jsxFileName = \"/Users/mengyisong/Documents/cwj/lab/client/src/views/Inventory/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport Modal from 'react-modal';\nimport appConfig from '../../config/app.config';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nModal.setAppElement('#root');\n\nfunction PageInventory() {\n  const [inventoryList, setInventoryList] = useState([]);\n  const [antibodyList, setAntibodyList] = useState([]);\n  const [assayTypeList, setAssayTypeList] = useState([]);\n  const [barcodeList, setBarcodeList] = useState([]);\n  const [cellLineList, setCellLineList] = useState([]);\n  const [conditionList, setConditionList] = useState([]);\n  const [factoryList, setFactoryList] = useState([]);\n  const [labList, setLabList] = useState([]);\n  const [sexList, setSexList] = useState([]);\n  const [individualList, setIndividualList] = useState([]);\n  const [speciesList, setSpeciesList] = useState([]);\n  const [strainList, setStrainList] = useState([]);\n  const [tissueList, setTissueList] = useState([]);\n  const [tissueProcessingList, setTissueProcessingList] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [modal, setModal] = useState({});\n  const [labID, setlabID] = useState(\"\");\n  const [sampleID, setSampleID] = useState(\"\");\n  const [assayTypeID, setAssayTypeID] = useState(\"\");\n  const [experiment, setExperiment] = useState(\"\");\n  const [speciesID, setSpeciesID] = useState(\"\");\n  const [strainID, setStrainID] = useState(\"\");\n  const [tissueID, setTissueID] = useState(\"\");\n  const [cellLineID, setCellLineID] = useState(\"\");\n  const [tissueProID, setTissueProID] = useState(\"\");\n  const [individualID, setIndividualID] = useState(\"\");\n  const [sexID, setSexID] = useState(\"\");\n  const [factoryID, setFactoryID] = useState(\"\");\n  const [antibodyID, setAntibodyID] = useState(\"\");\n  const [conditionID, setConditionID] = useState(\"\");\n  const [barcodeID, setBarcodeID] = useState(\"\");\n  const [editFlag, setEditFlag] = useState(false);\n  const url = `${appConfig.baseURL}/api/`;\n  const customStyles = {\n    content: {\n      top: '40%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      width: '60%'\n    }\n  };\n\n  const clearInput = () => {\n    setlabID(\"\");\n    setSampleID(\"\");\n    setAssayTypeID(\"\");\n    setExperiment(\"\");\n    setSpeciesID(\"\");\n    setStrainID(\"\");\n    setTissueID(\"\");\n    setCellLineID(\"\");\n    setTissueProID(\"\");\n    setIndividualID(\"\");\n    setSexID(\"\");\n    setFactoryID(\"\");\n    setAntibodyID(\"\");\n    setConditionID(\"\");\n    setBarcodeID(\"\");\n  };\n\n  const setInput = item => {\n    setlabID(item.LabID);\n    setSampleID(item.sampleID);\n    setAssayTypeID(item.assayTypeID);\n    setExperiment(item.experiment);\n    setSpeciesID(item.speciesID);\n    setStrainID(item.strainID);\n    setTissueID(item.tissueID);\n    setCellLineID(item.cellLineID);\n    setTissueProID(item.tissueProcessingID);\n    setIndividualID(item.individualID);\n    setSexID(item.sexID);\n    setFactoryID(item.factoryID);\n    setAntibodyID(item.antibodyID);\n    setConditionID(item.conditionID);\n    setBarcodeID(item.barcodeID);\n  };\n\n  const closeModal = () => {\n    setModalShow(false);\n    setEditFlag(false);\n  };\n\n  const addModal = () => {\n    setModalShow(true);\n    setModal({\n      inventory: \"\",\n      type: \"\"\n    });\n    clearInput();\n  };\n\n  const deleteModal = item => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        let deleteURL = url + \"/\" + item.id;\n        axios.delete(deleteURL).then(resp => {\n          Swal.fire('Deleted!', 'Your record has been deleted.', 'success');\n          fetchInventory();\n        }).catch(error => {\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          });\n          console.log(`error: ${error.message}`);\n        });\n      }\n    });\n  };\n\n  const save = () => {\n    let editURL = url;\n\n    if (editFlag) {\n      editURL = editURL + \"/\" + modal.id;\n      axios.put(editURL, {\n        labID: labID,\n        sampleID: sampleID,\n        assayTypeID: assayTypeID,\n        experiment: experiment,\n        speciesID: speciesID,\n        strainID: strainID,\n        tissueID: tissueID,\n        cellLineID: cellLineID,\n        tissueProID: tissueProID,\n        individualID: individualID,\n        sexID: sexID,\n        factoryID: factoryID,\n        antibodyID: antibodyID,\n        conditionID: conditionID,\n        barcodeID: barcodeID\n      }).then(resp => {\n        Swal.fire('Updated!', '', 'success');\n        fetchInventory();\n        closeModal();\n      }).catch(error => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        });\n        console.log(`error: ${error.message}`);\n      });\n    } else {\n      axios.post(editURL, {\n        labID: labID,\n        sampleID: sampleID,\n        assayTypeID: assayTypeID,\n        experiment: experiment,\n        speciesID: speciesID,\n        strainID: strainID,\n        tissueID: tissueID,\n        cellLineID: cellLineID,\n        tissueProID: tissueProID,\n        individualID: individualID,\n        sexID: sexID,\n        factoryID: factoryID,\n        antibodyID: antibodyID,\n        conditionID: conditionID,\n        barcodeID: barcodeID\n      }).then(resp => {\n        Swal.fire('Saved!', '', 'success');\n        fetchInventory();\n        closeModal();\n      }).catch(error => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: 'Something went wrong!'\n        });\n        console.log(`error: ${error.message}`);\n      });\n    }\n  };\n\n  const columns = [{\n    name: \"Lab\",\n    selector: 'lab.code'\n  }, {\n    name: \"Sample ID\",\n    selector: 'sampleID'\n  }, {\n    name: \"Assay Type\",\n    selector: 'assayType.assayType'\n  }, {\n    name: \"Experiment\",\n    selector: 'experiment'\n  }, {\n    name: \"Species\",\n    selector: 'species.name'\n  }, {\n    name: \"Strain\",\n    selector: 'strain.strain'\n  }, {\n    name: \"Tissue\",\n    selector: 'tissue.tissue'\n  }, {\n    name: \"Cell Line\",\n    selector: 'cellLine.cellLine'\n  }, {\n    name: \"Tissue Processing\",\n    selector: 'tissueProcessing.tissueProcessing'\n  }, {\n    name: \"Individual\",\n    selector: 'individual.individual'\n  }, {\n    name: \"Sex\",\n    selector: 'sex.sex'\n  }, {\n    name: \"Factory\",\n    selector: 'factory.factory'\n  }, {\n    name: \"Antibody\",\n    selector: 'antibody.antibody'\n  }, {\n    name: \"Condition\",\n    selector: 'condition.conditionName'\n  }, {\n    name: \"Barcode Type\",\n    selector: 'barcode.type'\n  }, {\n    name: \"Barcode\",\n    selector: 'barcode.barcode'\n  }, {\n    name: '',\n    cell: c => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          setModalShow(true);\n          setEditFlag(true);\n          setModal(c);\n          setInput(c);\n        },\n        className: \"btn btn-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          deleteModal(c);\n        },\n        className: \"btn btn-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }\n      }, \"Delete\"));\n    }\n  }];\n  const [filter, setFilter] = useState(\"\");\n\n  const InventoryTable = props => {\n    const filteredItems = props.inventoryList.filter(item => item.lab.code && item.lab.code.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.sampleID && item.sampleID.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.assayType.assayType && item.assayType.assayType.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.experiment && item.experiment.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.species.name && item.species.name.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.strain.strain && item.strain.strain.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.tissue.tissue && item.tissue.tissue.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.cellLine.cellLine && item.cellLine.cellLine.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.tissueProcessing.tissueProcessing && item.tissueProcessing.tissueProcessing.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.individual.individual && item.individual.individual.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.sex.sex && item.sex.sex.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.factory.factory && item.factory.factory.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.antibody.antibody && item.antibody.antibody.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.condition.conditionName && item.condition.conditionName.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.barcode.type && item.barcode.type.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.barcode.barcode && item.barcode.barcode.toLowerCase().includes(props.searchFilter.toLowerCase()));\n    return props.inventoryList.length > 0 && /*#__PURE__*/React.createElement(DataTable, {\n      className: \"table table-bordered table-primary no-footer\",\n      noHeader: true,\n      columns: props.columns,\n      data: props.searchFilter.trim().length > 0 ? filteredItems : props.inventoryList,\n      highlightOnHover: true,\n      pagination: true,\n      wrap: true,\n      paginationRowsPerPageOptions: [10, 20, 40, 50, 100, 200, 1000],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const fetchData = url => {\n    return axios(url);\n  };\n\n  const fetchInventory = async () => {\n    var res = await fetchData(url + \"inventory\");\n    setInventoryList(res.data);\n  };\n\n  const fetchAntibody = async () => {\n    var res = await fetchData(url + \"antibody\");\n    setAntibodyList(res.data);\n  };\n\n  const fetchAssayType = async () => {\n    var res = await fetchData(url + \"assayType\");\n    setAssayTypeList(res.data);\n  };\n\n  const fetchBarcode = async () => {\n    var res = await fetchData(url + \"barcode\");\n    setBarcodeList(res.data);\n  };\n\n  const fetchCellLine = async () => {\n    var res = await fetchData(url + \"cellLine\");\n    setCellLineList(res.data);\n  };\n\n  const fetchCondition = async () => {\n    var res = await fetchData(url + \"condition\");\n    setConditionList(res.data);\n  };\n\n  const fetchFactory = async () => {\n    var res = await fetchData(url + \"factory\");\n    setFactoryList(res.data);\n  };\n\n  const fetchIndividual = async () => {\n    var res = await fetchData(url + \"individual\");\n    setIndividualList(res.data);\n  };\n\n  const fetchLab = async () => {\n    var res = await fetchData(url + \"lab\");\n    setLabList(res.data);\n  };\n\n  const fetchSex = async () => {\n    var res = await fetchData(url + \"sex\");\n    setSexList(res.data);\n  };\n\n  const fetchSpecies = async () => {\n    var res = await fetchData(url + \"species\");\n    setSpeciesList(res.data);\n  };\n\n  const fetchStrain = async () => {\n    var res = await fetchData(url + \"strain\");\n    setStrainList(res.data);\n  };\n\n  const fetchTissue = async () => {\n    var res = await fetchData(url + \"tissue\");\n    setTissueList(res.data);\n  };\n\n  const fetchTissuePro = async () => {\n    var res = await fetchData(url + \"tissueProcessing\");\n    setTissueProcessingList(res.data);\n  };\n\n  useEffect(() => {\n    fetchInventory();\n    fetchAntibody();\n    fetchAssayType();\n    fetchBarcode();\n    fetchCellLine();\n    fetchCondition();\n    fetchFactory();\n    fetchIndividual();\n    fetchLab();\n    fetchSex();\n    fetchSpecies();\n    fetchStrain();\n    fetchTissue();\n    fetchTissuePro();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainpanel\",\n    style: {\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pageheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"QC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 21\n    }\n  }, \"Inventory Table\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentpanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      margin: '20px 0px 35px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 42\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    \"data-ng-init\": \"Show()\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    style: {\n      marginLeft: '5px'\n    },\n    placeholder: \"Search\",\n    onKeyUp: e => {\n      setFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-default\",\n    onClick: addModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 41\n    }\n  }, \"Add\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      margin: '10px 0px 35px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InventoryTable, {\n    columns: columns,\n    inventoryList: inventoryList,\n    searchFilter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalShow,\n    style: customStyles,\n    contentLabel: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: closeModal,\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 45\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 45\n    }\n  }, \"Modal\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 53\n    }\n  }, \"Sample ID\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onKeyUp: e => {\n      setSampleID(e.target.value);\n    },\n    placeholder: \"Sample ID\",\n    defaultValue: modal.sampleID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 53\n    }\n  }, \"Experiment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onKeyUp: e => {\n      setExperiment(e.target.value);\n    },\n    placeholder: \"Experiment\",\n    defaultValue: modal.experiment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-lg-offset-9 col-md-4 col-md-offset-8 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 57\n    }\n  }, editFlag ? \"Edit\" : \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-default\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 57\n    }\n  }, \"Cancel\")))))))))))));\n}\n\nexport default React.memo(PageInventory);","map":{"version":3,"sources":["/Users/mengyisong/Documents/cwj/lab/client/src/views/Inventory/index.js"],"names":["React","useState","useEffect","DataTable","Modal","appConfig","axios","Swal","setAppElement","PageInventory","inventoryList","setInventoryList","antibodyList","setAntibodyList","assayTypeList","setAssayTypeList","barcodeList","setBarcodeList","cellLineList","setCellLineList","conditionList","setConditionList","factoryList","setFactoryList","labList","setLabList","sexList","setSexList","individualList","setIndividualList","speciesList","setSpeciesList","strainList","setStrainList","tissueList","setTissueList","tissueProcessingList","setTissueProcessingList","modalShow","setModalShow","modal","setModal","labID","setlabID","sampleID","setSampleID","assayTypeID","setAssayTypeID","experiment","setExperiment","speciesID","setSpeciesID","strainID","setStrainID","tissueID","setTissueID","cellLineID","setCellLineID","tissueProID","setTissueProID","individualID","setIndividualID","sexID","setSexID","factoryID","setFactoryID","antibodyID","setAntibodyID","conditionID","setConditionID","barcodeID","setBarcodeID","editFlag","setEditFlag","url","baseURL","customStyles","content","top","left","right","bottom","transform","width","clearInput","setInput","item","LabID","tissueProcessingID","closeModal","addModal","inventory","type","deleteModal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteURL","id","delete","resp","fetchInventory","catch","error","console","log","message","save","editURL","put","post","columns","name","selector","cell","c","filter","setFilter","InventoryTable","props","filteredItems","lab","code","toLowerCase","includes","searchFilter","assayType","species","strain","tissue","cellLine","tissueProcessing","individual","sex","factory","antibody","condition","conditionName","barcode","length","trim","fetchData","res","data","fetchAntibody","fetchAssayType","fetchBarcode","fetchCellLine","fetchCondition","fetchFactory","fetchIndividual","fetchLab","fetchSex","fetchSpecies","fetchStrain","fetchTissue","fetchTissuePro","marginLeft","margin","e","target","value","textAlign","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEAH,KAAK,CAACI,aAAN,CAAoB,OAApB;;AAEA,SAASC,aAAT,GAA0B;AACtB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwB1B,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAAC2B,cAAD,EAAiBC,iBAAjB,IAAsC5B,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC+B,UAAD,EAAaC,aAAb,IAA8BhC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiC,UAAD,EAAaC,aAAb,IAA8BlC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmC,oBAAD,EAAuBC,uBAAvB,IAAkDpC,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACqC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACuC,KAAD,EAAQC,QAAR,IAAoBxC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACyC,KAAD,EAAQC,QAAR,IAAoB1C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2C,QAAD,EAAWC,WAAX,IAA0B5C,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6C,WAAD,EAAcC,cAAd,IAAgC9C,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC+C,UAAD,EAAaC,aAAb,IAA8BhD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiD,SAAD,EAAYC,YAAZ,IAA4BlD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmD,QAAD,EAAWC,WAAX,IAA0BpD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqD,QAAD,EAAWC,WAAX,IAA0BtD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuD,UAAD,EAAaC,aAAb,IAA8BxD,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACyD,WAAD,EAAcC,cAAd,IAAgC1D,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC2D,YAAD,EAAeC,eAAf,IAAkC5D,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC6D,KAAD,EAAQC,QAAR,IAAoB9D,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC+D,SAAD,EAAYC,YAAZ,IAA4BhE,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiE,UAAD,EAAaC,aAAb,IAA8BlE,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACmE,WAAD,EAAcC,cAAd,IAAgCpE,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACqE,SAAD,EAAYC,YAAZ,IAA4BtE,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuE,QAAD,EAAWC,WAAX,IAA0BxE,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAMyE,GAAG,GAAI,GAAErE,SAAS,CAACsE,OAAQ,OAAjC;AAEA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,GAAG,EAAE,KADA;AAELC,MAAAA,IAAI,EAAE,KAFD;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,MAAM,EAAE,MAJH;AAKLC,MAAAA,SAAS,EAAE,uBALN;AAMLC,MAAAA,KAAK,EAAE;AANF;AADQ,GAArB;;AAWA,QAAMC,UAAU,GAAG,MAAM;AACrBzC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GAhBD;;AAkBA,QAAMc,QAAQ,GAAIC,IAAD,IAAU;AACvB3C,IAAAA,QAAQ,CAAC2C,IAAI,CAACC,KAAN,CAAR;AACA1C,IAAAA,WAAW,CAACyC,IAAI,CAAC1C,QAAN,CAAX;AACAG,IAAAA,cAAc,CAACuC,IAAI,CAACxC,WAAN,CAAd;AACAG,IAAAA,aAAa,CAACqC,IAAI,CAACtC,UAAN,CAAb;AACAG,IAAAA,YAAY,CAACmC,IAAI,CAACpC,SAAN,CAAZ;AACAG,IAAAA,WAAW,CAACiC,IAAI,CAAClC,QAAN,CAAX;AACAG,IAAAA,WAAW,CAAC+B,IAAI,CAAChC,QAAN,CAAX;AACAG,IAAAA,aAAa,CAAC6B,IAAI,CAAC9B,UAAN,CAAb;AACAG,IAAAA,cAAc,CAAC2B,IAAI,CAACE,kBAAN,CAAd;AACA3B,IAAAA,eAAe,CAACyB,IAAI,CAAC1B,YAAN,CAAf;AACAG,IAAAA,QAAQ,CAACuB,IAAI,CAACxB,KAAN,CAAR;AACAG,IAAAA,YAAY,CAACqB,IAAI,CAACtB,SAAN,CAAZ;AACAG,IAAAA,aAAa,CAACmB,IAAI,CAACpB,UAAN,CAAb;AACAG,IAAAA,cAAc,CAACiB,IAAI,CAAClB,WAAN,CAAd;AACAG,IAAAA,YAAY,CAACe,IAAI,CAAChB,SAAN,CAAZ;AACH,GAhBD;;AAkBA,QAAMmB,UAAU,GAAG,MAAM;AACrBlD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAkC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAHD;;AAKA,QAAMiB,QAAQ,GAAG,MAAM;AACnBnD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,QAAQ,CAAC;AAAEkD,MAAAA,SAAS,EAAE,EAAb;AAAiBC,MAAAA,IAAI,EAAE;AAAvB,KAAD,CAAR;AACAR,IAAAA,UAAU;AACb,GAJD;;AAMA,QAAMS,WAAW,GAAIP,IAAD,IAAU;AAC1B/E,IAAAA,IAAI,CAACuF,IAAL,CAAU;AACNC,MAAAA,KAAK,EAAE,eADD;AAENC,MAAAA,IAAI,EAAE,mCAFA;AAGNC,MAAAA,IAAI,EAAE,SAHA;AAINC,MAAAA,gBAAgB,EAAE,IAJZ;AAKNC,MAAAA,kBAAkB,EAAE,SALd;AAMNC,MAAAA,iBAAiB,EAAE,MANb;AAONC,MAAAA,iBAAiB,EAAE;AAPb,KAAV,EAQOC,IARP,CAQaC,MAAD,IAAY;AACpB,UAAIA,MAAM,CAACC,WAAX,EAAwB;AACpB,YAAIC,SAAS,GAAG/B,GAAG,GAAG,GAAN,GAAYY,IAAI,CAACoB,EAAjC;AAEApG,QAAAA,KAAK,CAACqG,MAAN,CAAaF,SAAb,EACKH,IADL,CACWM,IAAD,IAAU;AACZrG,UAAAA,IAAI,CAACuF,IAAL,CACI,UADJ,EAEI,+BAFJ,EAGI,SAHJ;AAKAe,UAAAA,cAAc;AACjB,SARL,EAQOC,KARP,CAQcC,KAAD,IAAW;AAChBxG,UAAAA,IAAI,CAACuF,IAAL,CAAU;AACNG,YAAAA,IAAI,EAAE,OADA;AAENF,YAAAA,KAAK,EAAE,SAFD;AAGNC,YAAAA,IAAI,EAAE;AAHA,WAAV;AAKAgB,UAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,KAAK,CAACG,OAAQ,EAApC;AACH,SAfL;AAgBH;AACJ,KA7BD;AA8BH,GA/BD;;AAiCA,QAAMC,IAAI,GAAG,MAAM;AACf,QAAIC,OAAO,GAAG1C,GAAd;;AAEA,QAAIF,QAAJ,EAAc;AACV4C,MAAAA,OAAO,GAAGA,OAAO,GAAG,GAAV,GAAgB5E,KAAK,CAACkE,EAAhC;AAEApG,MAAAA,KAAK,CAAC+G,GAAN,CAAUD,OAAV,EAAmB;AACf1E,QAAAA,KAAK,EAAEA,KADQ;AAEfE,QAAAA,QAAQ,EAAEA,QAFK;AAGfE,QAAAA,WAAW,EAAEA,WAHE;AAIfE,QAAAA,UAAU,EAAEA,UAJG;AAKfE,QAAAA,SAAS,EAAEA,SALI;AAMfE,QAAAA,QAAQ,EAAEA,QANK;AAOfE,QAAAA,QAAQ,EAAEA,QAPK;AAQfE,QAAAA,UAAU,EAAEA,UARG;AASfE,QAAAA,WAAW,EAAEA,WATE;AAUfE,QAAAA,YAAY,EAAEA,YAVC;AAWfE,QAAAA,KAAK,EAAEA,KAXQ;AAYfE,QAAAA,SAAS,EAAEA,SAZI;AAafE,QAAAA,UAAU,EAAEA,UAbG;AAcfE,QAAAA,WAAW,EAAEA,WAdE;AAefE,QAAAA,SAAS,EAAEA;AAfI,OAAnB,EAiBKgC,IAjBL,CAiBWM,IAAD,IAAU;AACZrG,QAAAA,IAAI,CAACuF,IAAL,CAAU,UAAV,EAAsB,EAAtB,EAA0B,SAA1B;AACAe,QAAAA,cAAc;AACdpB,QAAAA,UAAU;AACb,OArBL,EAqBOqB,KArBP,CAqBcC,KAAD,IAAW;AAChBxG,QAAAA,IAAI,CAACuF,IAAL,CAAU;AACFG,UAAAA,IAAI,EAAE,OADJ;AAEFF,UAAAA,KAAK,EAAE,SAFL;AAGFC,UAAAA,IAAI,EAAE;AAHJ,SAAV;AAKAgB,QAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,KAAK,CAACG,OAAQ,EAApC;AACH,OA5BL;AA6BH,KAhCD,MAiCI;AACA5G,MAAAA,KAAK,CAACgH,IAAN,CAAWF,OAAX,EAAoB;AAChB1E,QAAAA,KAAK,EAAEA,KADS;AAEhBE,QAAAA,QAAQ,EAAEA,QAFM;AAGhBE,QAAAA,WAAW,EAAEA,WAHG;AAIhBE,QAAAA,UAAU,EAAEA,UAJI;AAKhBE,QAAAA,SAAS,EAAEA,SALK;AAMhBE,QAAAA,QAAQ,EAAEA,QANM;AAOhBE,QAAAA,QAAQ,EAAEA,QAPM;AAQhBE,QAAAA,UAAU,EAAEA,UARI;AAShBE,QAAAA,WAAW,EAAEA,WATG;AAUhBE,QAAAA,YAAY,EAAEA,YAVE;AAWhBE,QAAAA,KAAK,EAAEA,KAXS;AAYhBE,QAAAA,SAAS,EAAEA,SAZK;AAahBE,QAAAA,UAAU,EAAEA,UAbI;AAchBE,QAAAA,WAAW,EAAEA,WAdG;AAehBE,QAAAA,SAAS,EAAEA;AAfK,OAApB,EAiBKgC,IAjBL,CAiBWM,IAAD,IAAU;AACZrG,QAAAA,IAAI,CAACuF,IAAL,CAAU,QAAV,EAAoB,EAApB,EAAwB,SAAxB;AACAe,QAAAA,cAAc;AACdpB,QAAAA,UAAU;AACb,OArBL,EAqBOqB,KArBP,CAqBcC,KAAD,IAAW;AAChBxG,QAAAA,IAAI,CAACuF,IAAL,CAAU;AACFG,UAAAA,IAAI,EAAE,OADJ;AAEFF,UAAAA,KAAK,EAAE,SAFL;AAGFC,UAAAA,IAAI,EAAE;AAHJ,SAAV;AAKAgB,QAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,KAAK,CAACG,OAAQ,EAApC;AACH,OA5BL;AA6BH;AACJ,GAnED;;AAqEA,QAAMK,OAAO,GAAG,CACZ;AACIC,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GADY,EAKZ;AACID,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GALY,EASZ;AACID,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GATY,EAaZ;AACID,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAbY,EAiBZ;AACID,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAjBY,EAqBZ;AACID,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GArBY,EAyBZ;AACID,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAzBY,EA6BZ;AACID,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GA7BY,EAiCZ;AACID,IAAAA,IAAI,EAAE,mBADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAjCY,EAqCZ;AACID,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GArCY,EAyCZ;AACID,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAzCY,EA6CZ;AACID,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GA7CY,EAiDZ;AACID,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAjDY,EAqDZ;AACID,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GArDY,EAyDZ;AACID,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GAzDY,EA6DZ;AACID,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,QAAQ,EAAE;AAFd,GA7DY,EAiEX;AACGD,IAAAA,IAAI,EAAE,EADT;AAEGE,IAAAA,IAAI,EAAGC,CAAD,IAAO;AACV,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACK;AAAQ,QAAA,OAAO,EAAG,MAAM;AACpBpF,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAkC,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAhC,UAAAA,QAAQ,CAACkF,CAAD,CAAR;AACAtC,UAAAA,QAAQ,CAACsC,CAAD,CAAR;AACC,SALL;AAMI,QAAA,SAAS,EAAC,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADL,eASK;AAAQ,QAAA,OAAO,EAAG,MAAM;AAAE9B,UAAAA,WAAW,CAAC8B,CAAD,CAAX;AAAgB,SAA1C;AACI,QAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATL,CADJ;AAeA;AAlBN,GAjEW,CAAhB;AAuFA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB5H,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAM6H,cAAc,GAAIC,KAAD,IAAW;AAC9B,UAAMC,aAAa,GAAGD,KAAK,CAACrH,aAAN,CAAoBkH,MAApB,CAA2BtC,IAAI,IAE5CA,IAAI,CAAC2C,GAAL,CAASC,IAAT,IAAiB5C,IAAI,CAAC2C,GAAL,CAASC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAArC,CAAlB,IACI7C,IAAI,CAAC1C,QAAL,IAAiB0C,IAAI,CAAC1C,QAAL,CAAcuF,WAAd,GAA4BC,QAA5B,CAAqCL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAArC,CADrB,IAEI7C,IAAI,CAACgD,SAAL,CAAeA,SAAf,IAA4BhD,IAAI,CAACgD,SAAL,CAAeA,SAAf,CAAyBH,WAAzB,GAAuCC,QAAvC,CAAgDL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAAhD,CAFhC,IAGI7C,IAAI,CAACtC,UAAL,IAAmBsC,IAAI,CAACtC,UAAL,CAAgBmF,WAAhB,GAA8BC,QAA9B,CAAuCL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAAvC,CAHvB,IAII7C,IAAI,CAACiD,OAAL,CAAaf,IAAb,IAAqBlC,IAAI,CAACiD,OAAL,CAAaf,IAAb,CAAkBW,WAAlB,GAAgCC,QAAhC,CAAyCL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAAzC,CAJzB,IAKI7C,IAAI,CAACkD,MAAL,CAAYA,MAAZ,IAAsBlD,IAAI,CAACkD,MAAL,CAAYA,MAAZ,CAAmBL,WAAnB,GAAiCC,QAAjC,CAA0CL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAA1C,CAL1B,IAMI7C,IAAI,CAACmD,MAAL,CAAYA,MAAZ,IAAsBnD,IAAI,CAACmD,MAAL,CAAYA,MAAZ,CAAmBN,WAAnB,GAAiCC,QAAjC,CAA0CL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAA1C,CAN1B,IAOI7C,IAAI,CAACoD,QAAL,CAAcA,QAAd,IAA0BpD,IAAI,CAACoD,QAAL,CAAcA,QAAd,CAAuBP,WAAvB,GAAqCC,QAArC,CAA8CL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAA9C,CAP9B,IAQI7C,IAAI,CAACqD,gBAAL,CAAsBA,gBAAtB,IAA0CrD,IAAI,CAACqD,gBAAL,CAAsBA,gBAAtB,CAAuCR,WAAvC,GAAqDC,QAArD,CAA8DL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAA9D,CAR9C,IASI7C,IAAI,CAACsD,UAAL,CAAgBA,UAAhB,IAA8BtD,IAAI,CAACsD,UAAL,CAAgBA,UAAhB,CAA2BT,WAA3B,GAAyCC,QAAzC,CAAkDL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAAlD,CATlC,IAUI7C,IAAI,CAACuD,GAAL,CAASA,GAAT,IAAgBvD,IAAI,CAACuD,GAAL,CAASA,GAAT,CAAaV,WAAb,GAA2BC,QAA3B,CAAoCL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAApC,CAVpB,IAWI7C,IAAI,CAACwD,OAAL,CAAaA,OAAb,IAAwBxD,IAAI,CAACwD,OAAL,CAAaA,OAAb,CAAqBX,WAArB,GAAmCC,QAAnC,CAA4CL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAA5C,CAX5B,IAYI7C,IAAI,CAACyD,QAAL,CAAcA,QAAd,IAA0BzD,IAAI,CAACyD,QAAL,CAAcA,QAAd,CAAuBZ,WAAvB,GAAqCC,QAArC,CAA8CL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAA9C,CAZ9B,IAaI7C,IAAI,CAAC0D,SAAL,CAAeC,aAAf,IAAgC3D,IAAI,CAAC0D,SAAL,CAAeC,aAAf,CAA6Bd,WAA7B,GAA2CC,QAA3C,CAAoDL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAApD,CAbpC,IAcI7C,IAAI,CAAC4D,OAAL,CAAatD,IAAb,IAAqBN,IAAI,CAAC4D,OAAL,CAAatD,IAAb,CAAkBuC,WAAlB,GAAgCC,QAAhC,CAAyCL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAAzC,CAdzB,IAeI7C,IAAI,CAAC4D,OAAL,CAAaA,OAAb,IAAwB5D,IAAI,CAAC4D,OAAL,CAAaA,OAAb,CAAqBf,WAArB,GAAmCC,QAAnC,CAA4CL,KAAK,CAACM,YAAN,CAAmBF,WAAnB,EAA5C,CAjBd,CAAtB;AAqBA,WACIJ,KAAK,CAACrH,aAAN,CAAoByI,MAApB,GAA6B,CAA7B,iBACA,oBAAC,SAAD;AACI,MAAA,SAAS,EAAC,8CADd;AAEI,MAAA,QAAQ,EAAE,IAFd;AAGI,MAAA,OAAO,EAAEpB,KAAK,CAACR,OAHnB;AAII,MAAA,IAAI,EAAGQ,KAAK,CAACM,YAAN,CAAmBe,IAAnB,GAA0BD,MAA1B,GAAmC,CAAnC,GAAuCnB,aAAvC,GAAuDD,KAAK,CAACrH,aAJxE;AAKI,MAAA,gBAAgB,MALpB;AAMI,MAAA,UAAU,EAAE,IANhB;AAOI,MAAA,IAAI,EAAE,IAPV;AAQI,MAAA,4BAA4B,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,CARlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAaH,GAnCD;;AAqCA,QAAM2I,SAAS,GAAI3E,GAAD,IAAS;AACvB,WAAOpE,KAAK,CAACoE,GAAD,CAAZ;AACH,GAFD;;AAIA,QAAMmC,cAAc,GAAG,YAAY;AAC/B,QAAIyC,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,WAAP,CAAzB;AACA/D,IAAAA,gBAAgB,CAAC2I,GAAG,CAACC,IAAL,CAAhB;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAG,YAAY;AAC9B,QAAIF,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,UAAP,CAAzB;AACA7D,IAAAA,eAAe,CAACyI,GAAG,CAACC,IAAL,CAAf;AACH,GAHD;;AAKA,QAAME,cAAc,GAAG,YAAY;AAC/B,QAAIH,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,WAAP,CAAzB;AACA3D,IAAAA,gBAAgB,CAACuI,GAAG,CAACC,IAAL,CAAhB;AACH,GAHD;;AAKA,QAAMG,YAAY,GAAG,YAAY;AAC7B,QAAIJ,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,SAAP,CAAzB;AACAzD,IAAAA,cAAc,CAACqI,GAAG,CAACC,IAAL,CAAd;AACH,GAHD;;AAKA,QAAMI,aAAa,GAAG,YAAY;AAC9B,QAAIL,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,UAAP,CAAzB;AACAvD,IAAAA,eAAe,CAACmI,GAAG,CAACC,IAAL,CAAf;AACH,GAHD;;AAKA,QAAMK,cAAc,GAAG,YAAY;AAC/B,QAAIN,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,WAAP,CAAzB;AACArD,IAAAA,gBAAgB,CAACiI,GAAG,CAACC,IAAL,CAAhB;AACH,GAHD;;AAKA,QAAMM,YAAY,GAAG,YAAY;AAC7B,QAAIP,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,SAAP,CAAzB;AACAnD,IAAAA,cAAc,CAAC+H,GAAG,CAACC,IAAL,CAAd;AACH,GAHD;;AAKA,QAAMO,eAAe,GAAG,YAAY;AAChC,QAAIR,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,YAAP,CAAzB;AACA7C,IAAAA,iBAAiB,CAACyH,GAAG,CAACC,IAAL,CAAjB;AACH,GAHD;;AAKA,QAAMQ,QAAQ,GAAG,YAAY;AACzB,QAAIT,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,KAAP,CAAzB;AACAjD,IAAAA,UAAU,CAAC6H,GAAG,CAACC,IAAL,CAAV;AACH,GAHD;;AAKA,QAAMS,QAAQ,GAAG,YAAY;AACzB,QAAIV,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,KAAP,CAAzB;AACA/C,IAAAA,UAAU,CAAC2H,GAAG,CAACC,IAAL,CAAV;AACH,GAHD;;AAKA,QAAMU,YAAY,GAAG,YAAY;AAC7B,QAAIX,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,SAAP,CAAzB;AACA3C,IAAAA,cAAc,CAACuH,GAAG,CAACC,IAAL,CAAd;AACH,GAHD;;AAKA,QAAMW,WAAW,GAAG,YAAY;AAC5B,QAAIZ,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,QAAP,CAAzB;AACAzC,IAAAA,aAAa,CAACqH,GAAG,CAACC,IAAL,CAAb;AACH,GAHD;;AAKA,QAAMY,WAAW,GAAG,YAAY;AAC5B,QAAIb,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,QAAP,CAAzB;AACAvC,IAAAA,aAAa,CAACmH,GAAG,CAACC,IAAL,CAAb;AACH,GAHD;;AAKA,QAAMa,cAAc,GAAG,YAAY;AAC/B,QAAId,GAAG,GAAG,MAAMD,SAAS,CAAC3E,GAAG,GAAG,kBAAP,CAAzB;AACArC,IAAAA,uBAAuB,CAACiH,GAAG,CAACC,IAAL,CAAvB;AACH,GAHD;;AAKArJ,EAAAA,SAAS,CAAC,MAAM;AACZ2G,IAAAA,cAAc;AACd2C,IAAAA,aAAa;AACbC,IAAAA,cAAc;AACdC,IAAAA,YAAY;AACZC,IAAAA,aAAa;AACbC,IAAAA,cAAc;AACdC,IAAAA,YAAY;AACZC,IAAAA,eAAe;AACfC,IAAAA,QAAQ;AACRC,IAAAA,QAAQ;AACRC,IAAAA,YAAY;AACZC,IAAAA,WAAW;AACXC,IAAAA,WAAW;AACXC,IAAAA,cAAc;AACjB,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADJ,CADJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,oBAAa,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,KAAK,EAAE;AAACD,MAAAA,UAAU,EAAC;AAAZ,KAAnD;AAAuE,IAAA,WAAW,EAAC,QAAnF;AAA4F,IAAA,OAAO,EAAGE,CAAD,IAAO;AAAC1C,MAAAA,SAAS,CAAC0C,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAA0B,KAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAE/E,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ,CADJ,CANJ,CADJ,CADJ,CADJ,eAoBI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAC4E,MAAAA,MAAM,EAAC;AAAR,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,OAAO,EAAE/C,OADb;AAEI,IAAA,aAAa,EAAE7G,aAFnB;AAGI,IAAA,YAAY,EAAEkH,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEtF,SADZ;AAEI,IAAA,KAAK,EAAEsC,YAFX;AAGI,IAAA,YAAY,EAAC,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEa,UAA/B;AAA2C,IAAA,SAAS,EAAC,OAArD;AAA6D,oBAAa,OAA1E;AAAkF,kBAAW,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAJJ,eAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,OAAO,EAAG8E,CAAD,IAAO;AAAE1H,MAAAA,WAAW,CAAC0H,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA8B,KAA5F;AAA8F,IAAA,WAAW,EAAC,WAA1G;AAAsH,IAAA,YAAY,EAAEjI,KAAK,CAACI,QAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,eAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,OAAO,EAAG2H,CAAD,IAAO;AAAEtH,MAAAA,aAAa,CAACsH,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAAgC,KAA9F;AAAgG,IAAA,WAAW,EAAC,YAA5G;AAAyH,IAAA,YAAY,EAAEjI,KAAK,CAACQ,UAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAPJ,CADJ,CAPJ,eAuBI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAAC0H,MAAAA,SAAS,EAAE;AAAZ,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEvD,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsD3C,QAAQ,GAAG,MAAH,GAAY,MAA1E,CADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAEiB,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ,CADJ,CAvBJ,CALJ,CANJ,CADJ,CADJ,CADJ,CApBJ,CANJ,CADJ;AAoFH;;AAED,eAAezF,KAAK,CAAC2K,IAAN,CAAWlK,aAAX,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport Modal from 'react-modal';\nimport appConfig from '../../config/app.config';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nModal.setAppElement('#root')\n\nfunction PageInventory () {\n    const [inventoryList, setInventoryList] = useState([]);\n    const [antibodyList, setAntibodyList] = useState([]);\n    const [assayTypeList, setAssayTypeList] = useState([]);\n    const [barcodeList, setBarcodeList] = useState([]);\n    const [cellLineList, setCellLineList] = useState([]);\n    const [conditionList, setConditionList] = useState([]);\n    const [factoryList, setFactoryList] = useState([]);\n    const [labList, setLabList] = useState([]);\n    const [sexList, setSexList] = useState([]);\n    const [individualList, setIndividualList] = useState([]);\n    const [speciesList, setSpeciesList] = useState([]);\n    const [strainList, setStrainList] = useState([]);\n    const [tissueList, setTissueList] = useState([]);\n    const [tissueProcessingList, setTissueProcessingList] = useState([]);\n    const [modalShow, setModalShow] = useState(false);\n    const [modal, setModal] = useState({});\n    const [labID, setlabID] = useState(\"\");\n    const [sampleID, setSampleID] = useState(\"\");\n    const [assayTypeID, setAssayTypeID] = useState(\"\");\n    const [experiment, setExperiment] = useState(\"\");\n    const [speciesID, setSpeciesID] = useState(\"\");\n    const [strainID, setStrainID] = useState(\"\");\n    const [tissueID, setTissueID] = useState(\"\");\n    const [cellLineID, setCellLineID] = useState(\"\");\n    const [tissueProID, setTissueProID] = useState(\"\");\n    const [individualID, setIndividualID] = useState(\"\");\n    const [sexID, setSexID] = useState(\"\");\n    const [factoryID, setFactoryID] = useState(\"\");\n    const [antibodyID, setAntibodyID] = useState(\"\");\n    const [conditionID, setConditionID] = useState(\"\");\n    const [barcodeID, setBarcodeID] = useState(\"\");\n    const [editFlag, setEditFlag] = useState(false);\n    const url = `${appConfig.baseURL}/api/`;\n\n    const customStyles = {\n        content: {\n            top: '40%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            transform: 'translate(-50%, -50%)',\n            width: '60%'\n        }\n    };\n\n    const clearInput = () => {\n        setlabID(\"\");\n        setSampleID(\"\");\n        setAssayTypeID(\"\");\n        setExperiment(\"\");\n        setSpeciesID(\"\");\n        setStrainID(\"\");\n        setTissueID(\"\");\n        setCellLineID(\"\");\n        setTissueProID(\"\");\n        setIndividualID(\"\");\n        setSexID(\"\");\n        setFactoryID(\"\");\n        setAntibodyID(\"\");\n        setConditionID(\"\");\n        setBarcodeID(\"\");\n    };\n\n    const setInput = (item) => {\n        setlabID(item.LabID);\n        setSampleID(item.sampleID);\n        setAssayTypeID(item.assayTypeID);\n        setExperiment(item.experiment);\n        setSpeciesID(item.speciesID);\n        setStrainID(item.strainID);\n        setTissueID(item.tissueID);\n        setCellLineID(item.cellLineID);\n        setTissueProID(item.tissueProcessingID);\n        setIndividualID(item.individualID);\n        setSexID(item.sexID);\n        setFactoryID(item.factoryID);\n        setAntibodyID(item.antibodyID);\n        setConditionID(item.conditionID);\n        setBarcodeID(item.barcodeID);\n    };\n\n    const closeModal = () => {\n        setModalShow(false);\n        setEditFlag(false);\n    };\n\n    const addModal = () => {\n        setModalShow(true);\n        setModal({ inventory: \"\", type: \"\" });\n        clearInput();\n    };\n\n    const deleteModal = (item) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n            }).then((result) => {\n            if (result.isConfirmed) {\n                let deleteURL = url + \"/\" + item.id;\n\n                axios.delete(deleteURL)\n                    .then((resp) => {\n                        Swal.fire(\n                            'Deleted!',\n                            'Your record has been deleted.',\n                            'success'\n                        );\n                        fetchInventory();\n                    }).catch((error) => {\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: 'Something went wrong!'\n                        })\n                        console.log(`error: ${error.message}`);\n                    })\n            }\n        });\n    };\n\n    const save = () => {\n        let editURL = url;\n\n        if (editFlag) {\n            editURL = editURL + \"/\" + modal.id;\n\n            axios.put(editURL, { \n                labID: labID, \n                sampleID: sampleID,\n                assayTypeID: assayTypeID,\n                experiment: experiment,\n                speciesID: speciesID,\n                strainID: strainID,\n                tissueID: tissueID,\n                cellLineID: cellLineID,\n                tissueProID: tissueProID,\n                individualID: individualID,\n                sexID: sexID,\n                factoryID: factoryID,\n                antibodyID: antibodyID,\n                conditionID: conditionID,\n                barcodeID: barcodeID \n            })\n                .then((resp) => {\n                    Swal.fire('Updated!', '', 'success')\n                    fetchInventory();\n                    closeModal();\n                }).catch((error) => {\n                    Swal.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: 'Something went wrong!'\n                        });\n                    console.log(`error: ${error.message}`);\n                })\n        }\n        else{\n            axios.post(editURL, { \n                labID: labID, \n                sampleID: sampleID,\n                assayTypeID: assayTypeID,\n                experiment: experiment,\n                speciesID: speciesID,\n                strainID: strainID,\n                tissueID: tissueID,\n                cellLineID: cellLineID,\n                tissueProID: tissueProID,\n                individualID: individualID,\n                sexID: sexID,\n                factoryID: factoryID,\n                antibodyID: antibodyID,\n                conditionID: conditionID,\n                barcodeID: barcodeID \n             })\n                .then((resp) => {\n                    Swal.fire('Saved!', '', 'success');\n                    fetchInventory();\n                    closeModal();\n                }).catch((error) => {\n                    Swal.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: 'Something went wrong!'\n                        });\n                    console.log(`error: ${error.message}`);\n                })\n        }\n    };\n\n    const columns = [\n        {\n            name: \"Lab\",\n            selector: 'lab.code'\n        },\n        {\n            name: \"Sample ID\",\n            selector: 'sampleID'\n        },\n        {\n            name: \"Assay Type\",\n            selector: 'assayType.assayType'\n        },\n        {\n            name: \"Experiment\",\n            selector: 'experiment'\n        },\n        {\n            name: \"Species\",\n            selector: 'species.name'\n        },\n        {\n            name: \"Strain\",\n            selector: 'strain.strain'\n        },\n        {\n            name: \"Tissue\",\n            selector: 'tissue.tissue'\n        },\n        {\n            name: \"Cell Line\",\n            selector: 'cellLine.cellLine'\n        },\n        {\n            name: \"Tissue Processing\",\n            selector: 'tissueProcessing.tissueProcessing'\n        },\n        {\n            name: \"Individual\",\n            selector: 'individual.individual'\n        },\n        {\n            name: \"Sex\",\n            selector: 'sex.sex'\n        },\n        {\n            name: \"Factory\",\n            selector: 'factory.factory'\n        },\n        {\n            name: \"Antibody\",\n            selector: 'antibody.antibody'\n        },\n        {\n            name: \"Condition\",\n            selector: 'condition.conditionName'\n        },\n        {\n            name: \"Barcode Type\",\n            selector: 'barcode.type'\n        },\n        {\n            name: \"Barcode\",\n            selector: 'barcode.barcode'\n        },\n         {\n            name: '',\n            cell: (c) => {\n               return (\n                   <div className=\"form-group\">\n                        <button onClick={ () => { \n                            setModalShow(true);\n                            setEditFlag(true);\n                            setModal(c);\n                            setInput(c);\n                            }}\n                            className=\"btn btn-default\">Edit\n                        </button>\n                        <button onClick={ () => { deleteModal(c) }}\n                            className=\"btn btn-default\">Delete\n                        </button>\n                   </div>\n                 )\n              }\n         }\n    ]\n\n    const [filter, setFilter] = useState(\"\");\n\n    const InventoryTable = (props) => {\n        const filteredItems = props.inventoryList.filter(item =>\n            (\n                (item.lab.code && item.lab.code.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.sampleID && item.sampleID.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.assayType.assayType && item.assayType.assayType.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.experiment && item.experiment.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.species.name && item.species.name.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.strain.strain && item.strain.strain.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.tissue.tissue && item.tissue.tissue.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.cellLine.cellLine && item.cellLine.cellLine.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.tissueProcessing.tissueProcessing && item.tissueProcessing.tissueProcessing.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.individual.individual && item.individual.individual.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.sex.sex && item.sex.sex.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.factory.factory && item.factory.factory.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.antibody.antibody && item.antibody.antibody.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.condition.conditionName && item.condition.conditionName.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.barcode.type && item.barcode.type.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.barcode.barcode && item.barcode.barcode.toLowerCase().includes(props.searchFilter.toLowerCase()))\n            )    \n        )\n\n        return(\n            props.inventoryList.length > 0 &&\n            <DataTable \n                className=\"table table-bordered table-primary no-footer\"\n                noHeader={true}\n                columns={props.columns}\n                data={ props.searchFilter.trim().length > 0 ? filteredItems : props.inventoryList }\n                highlightOnHover\n                pagination={true}\n                wrap={true}\n                paginationRowsPerPageOptions={[10, 20, 40, 50, 100, 200, 1000]}\n            />\n        )\n    };\n\n    const fetchData = (url) => {\n        return axios(url);\n    };\n\n    const fetchInventory = async () => {\n        var res = await fetchData(url + \"inventory\");\n        setInventoryList(res.data);\n    };\n\n    const fetchAntibody = async () => {\n        var res = await fetchData(url + \"antibody\");\n        setAntibodyList(res.data);\n    };\n\n    const fetchAssayType = async () => {\n        var res = await fetchData(url + \"assayType\");\n        setAssayTypeList(res.data);\n    };\n\n    const fetchBarcode = async () => {\n        var res = await fetchData(url + \"barcode\");\n        setBarcodeList(res.data);\n    };\n\n    const fetchCellLine = async () => {\n        var res = await fetchData(url + \"cellLine\");\n        setCellLineList(res.data);\n    };\n\n    const fetchCondition = async () => {\n        var res = await fetchData(url + \"condition\");\n        setConditionList(res.data);\n    };\n\n    const fetchFactory = async () => {\n        var res = await fetchData(url + \"factory\");\n        setFactoryList(res.data);\n    };\n\n    const fetchIndividual = async () => {\n        var res = await fetchData(url + \"individual\");\n        setIndividualList(res.data);\n    };\n\n    const fetchLab = async () => {\n        var res = await fetchData(url + \"lab\");\n        setLabList(res.data);\n    };\n\n    const fetchSex = async () => {\n        var res = await fetchData(url + \"sex\");\n        setSexList(res.data);\n    };\n\n    const fetchSpecies = async () => {\n        var res = await fetchData(url + \"species\");\n        setSpeciesList(res.data);\n    };\n\n    const fetchStrain = async () => {\n        var res = await fetchData(url + \"strain\");\n        setStrainList(res.data);\n    };\n\n    const fetchTissue = async () => {\n        var res = await fetchData(url + \"tissue\");\n        setTissueList(res.data);\n    };\n\n    const fetchTissuePro = async () => {\n        var res = await fetchData(url + \"tissueProcessing\");\n        setTissueProcessingList(res.data);\n    };\n\n    useEffect(() => {\n        fetchInventory();\n        fetchAntibody();\n        fetchAssayType();\n        fetchBarcode();\n        fetchCellLine();\n        fetchCondition();\n        fetchFactory();\n        fetchIndividual();\n        fetchLab();\n        fetchSex();\n        fetchSpecies();\n        fetchStrain();\n        fetchTissue();\n        fetchTissuePro();\n    }, []);\n\n    return (\n        <div className=\"mainpanel\" style={{ marginLeft: '5px' }}>\n            <div className=\"row\">\n                <div className=\"pageheader\">\n                    <h1 className=\"QC\">Inventory Table</h1>\n                </div>\n            </div>\n            <div className=\"contentpanel\">\n                <div className=\"row\" style={{margin:'20px 0px 35px 0px'}}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-primary\">\n                            <div className=\"panel-heading\">\n                                <div className=\"panel-title\">\n                                    <div><span></span></div>\n                                </div>\n                            </div>\n                            <div className=\"panel-body\" data-ng-init=\"Show()\">\n                                <form className=\"form-inline\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" style={{marginLeft:'5px'}} placeholder=\"Search\" onKeyUp={(e) => {setFilter(e.target.value)}}/>\n                                        <button type=\"button\" className=\"btn btn-default\" onClick={addModal} >Add</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\" style={{margin:'10px 0px 35px 0px'}}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-body table-responsive\">\n                                <InventoryTable \n                                    columns={columns}\n                                    inventoryList={inventoryList}\n                                    searchFilter={filter}\n                                />\n                                <Modal\n                                    isOpen={modalShow}\n                                    style={customStyles}\n                                    contentLabel=\"\"       \n                                >\n                                    <div className=\"panel\">\n                                        <button type=\"button\" onClick={closeModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                        <div className=\"panel-heading\">\n                                            <label>Modal</label>\n                                        </div>\n                                        <div className=\"panel-body\">\n                                            <div className=\"form-horizontal\">\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Sample ID</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <input type=\"text\" className=\"form-control\" onKeyUp={(e) => { setSampleID(e.target.value); }} placeholder=\"Sample ID\" defaultValue={modal.sampleID} />\n                                                    </div>\n                                                </div>  \n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Experiment</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <input type=\"text\" className=\"form-control\" onKeyUp={(e) => { setExperiment(e.target.value); }} placeholder=\"Experiment\" defaultValue={modal.experiment} />\n                                                    </div>\n                                                </div>  \n                                            </div>\n                                        </div>\n                                        <div className=\"panel-footer\">\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-3 col-lg-offset-9 col-md-4 col-md-offset-8 col-sm-12\">\n                                                    <div className=\"form-group\" style={{textAlign: \"right\"}}>\n                                                        <button className=\"btn btn-primary\" onClick={save} >{ editFlag ? \"Edit\" : \"Save\"}</button>\n                                                        <button type=\"button\" className=\"btn btn-default\" onClick={closeModal} >Cancel</button>\n                                                    </div>   \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Modal>\n                            </div>\n                        </div>\n                    </div>           \n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default React.memo(PageInventory)"]},"metadata":{},"sourceType":"module"}