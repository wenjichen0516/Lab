{"ast":null,"code":"var _jsxFileName = \"/Users/mengyisong/Documents/cwj/lab/client/src/views/Inventory/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport Modal from 'react-modal';\nimport appConfig from '../../config/app.config';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport Select from \"react-select\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nModal.setAppElement('#root');\n\nfunction PageInventory() {\n  const [showPreLoader, setShowPreLoader] = useState(true);\n  const [reUpload, setReUpload] = useState(false);\n  const [existIdList, setExistIdList] = useState([]);\n  const [replaceId, setReplaceId] = useState([]);\n  const [inventoryList, setInventoryList] = useState([]);\n  const [antibodyList, setAntibodyList] = useState([]);\n  const [assayTypeList, setAssayTypeList] = useState([]);\n  const [barcodeList, setBarcodeList] = useState([]);\n  const [cellLineList, setCellLineList] = useState([]);\n  const [conditionList, setConditionList] = useState([]);\n  const [factoryList, setFactoryList] = useState([]);\n  const [labList, setLabList] = useState([]);\n  const [sexList, setSexList] = useState([]);\n  const [individualList, setIndividualList] = useState([]);\n  const [speciesList, setSpeciesList] = useState([]);\n  const [strainList, setStrainList] = useState([]);\n  const [tissueList, setTissueList] = useState([]);\n  const [tissueProcessingList, setTissueProcessingList] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [fileModalShow, setFileModalShow] = useState(false);\n  const [modal, setModal] = useState({});\n  const [labID, setlabID] = useState(\"\");\n  const [sampleID, setSampleID] = useState(\"\");\n  const [assayTypeID, setAssayTypeID] = useState(\"\");\n  const [experiment, setExperiment] = useState(\"\");\n  const [speciesID, setSpeciesID] = useState(\"\");\n  const [strainID, setStrainID] = useState(\"\");\n  const [tissueID, setTissueID] = useState(\"\");\n  const [cellLineID, setCellLineID] = useState(\"\");\n  const [tissueProID, setTissueProID] = useState(\"\");\n  const [individualID, setIndividualID] = useState(\"\");\n  const [sexID, setSexID] = useState(\"\");\n  const [factoryID, setFactoryID] = useState(\"\");\n  const [antibodyID, setAntibodyID] = useState(\"\");\n  const [conditionID, setConditionID] = useState(\"\");\n  const [barcodeID, setBarcodeID] = useState(\"\");\n  const [barcode, setBarcode] = useState(\"\");\n  const [editFlag, setEditFlag] = useState(false);\n  const [file, setFile] = useState([]);\n  const url = `${appConfig.baseURL}/api/`;\n  const customStyles = {\n    content: {\n      top: '40%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      width: '60%'\n    }\n  };\n\n  const clearInput = () => {\n    setlabID(null);\n    setSampleID(null);\n    setAssayTypeID(null);\n    setExperiment(null);\n    setSpeciesID(null);\n    setStrainID(null);\n    setTissueID(null);\n    setCellLineID(null);\n    setTissueProID(null);\n    setIndividualID(null);\n    setSexID(null);\n    setFactoryID(null);\n    setAntibodyID(null);\n    setConditionID(null);\n    setBarcodeID(null);\n    setBarcode(\"\");\n  };\n\n  const setInput = item => {\n    setlabID(findItem(labList, item.labID));\n    setSampleID(item.sampleID);\n    setAssayTypeID(findItem(assayTypeList, item.assayTypeID));\n    setExperiment(item.experiment);\n    setSpeciesID(findItem(speciesList, item.speciesID));\n    setStrainID(findItem(strainList, item.strainID));\n    setTissueID(findItem(tissueList, item.tissueID));\n    setCellLineID(findItem(cellLineList, item.cellLineID));\n    setTissueProID(findItem(tissueProcessingList, item.tissueProcessingID));\n    setIndividualID(findItem(individualList, item.individualID));\n    setSexID(findItem(sexList, item.sexID));\n    setFactoryID(findItem(factoryList, item.factoryID));\n    setAntibodyID(findItem(antibodyList, item.antibodyID));\n    setConditionID(findItem(conditionList, item.conditionID));\n    let barcode = findItem(barcodeList, item.barcodeID);\n    setBarcodeID(barcode);\n    setBarcode(barcode.barcode);\n  };\n\n  const closeModal = () => {\n    setModalShow(false);\n    setEditFlag(false);\n    clearInput();\n  };\n\n  const closeFileModal = () => {\n    setFileModalShow(false);\n    setFile(null);\n    setReUpload(false);\n    setExistIdList([]);\n    setReplaceId();\n  };\n\n  const addModal = () => {\n    setModalShow(true);\n    setModal({\n      inventory: \"\"\n    });\n    clearInput();\n  };\n\n  const deleteModal = item => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        setShowPreLoader(true);\n        let deleteURL = url + \"inventory\" + \"/\" + item.id;\n        axios.delete(deleteURL).then(resp => {\n          setShowPreLoader(false);\n          Swal.fire('Deleted!', 'Your record has been deleted.', 'success');\n          fetchInventory();\n        }).catch(error => {\n          setShowPreLoader(false);\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong! It could be used in the QC table.'\n          });\n\n          if (error.response && error.response.data && error.response.data.message) {\n            console.log(`error: ${error.response.data.message}`);\n          } else {\n            console.log(`error: ${error.message}`);\n          }\n        });\n      }\n    });\n  };\n\n  const save = () => {\n    let editURL = url + \"inventory\";\n    let msg = vaildInput();\n\n    if (msg.length > 0) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: msg + ' could not be empty!'\n      });\n    } else {\n      setShowPreLoader(true);\n\n      if (editFlag) {\n        editURL = editURL + \"/\" + modal.id;\n        axios.put(editURL, {\n          labID: labID ? labID.value : null,\n          sampleID: sampleID ? sampleID : \"\",\n          assayTypeID: assayTypeID ? assayTypeID.value : null,\n          experiment: experiment ? experiment : \"\",\n          speciesID: speciesID ? speciesID.value : null,\n          strainID: strainID ? strainID.value : null,\n          tissueID: tissueID ? tissueID.value : null,\n          cellLineID: cellLineID ? cellLineID.value : null,\n          tissueProID: tissueProID ? tissueProID.value : null,\n          individualID: individualID ? individualID.value : null,\n          sexID: sexID ? sexID.value : null,\n          factoryID: factoryID ? factoryID.value : null,\n          antibodyID: antibodyID ? antibodyID.value : null,\n          conditionID: conditionID ? conditionID.value : null,\n          barcodeID: barcodeID ? barcodeID.value : null\n        }).then(resp => {\n          setShowPreLoader(false);\n          Swal.fire('Updated!', '', 'success');\n          fetchInventory();\n          closeModal();\n        }).catch(error => {\n          setShowPreLoader(false);\n          let errMsg = \"\";\n\n          if (error.response && error.response.data && error.response.data.message) {\n            errMsg = `error: ${error.response.data.message}`;\n            console.log(errMsg);\n          } else {\n            errMsg = `error: ${error.message}`;\n            console.log(errMsg);\n          }\n\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: errMsg\n          });\n        });\n      } else {\n        axios.post(editURL, {\n          labID: labID ? labID.value : null,\n          lab: labID ? labID.label : null,\n          sampleID: sampleID ? sampleID : \"\",\n          assayTypeID: assayTypeID ? assayTypeID.value : null,\n          experiment: experiment ? experiment : \"\",\n          speciesID: speciesID ? speciesID.value : null,\n          strainID: strainID ? strainID.value : null,\n          tissueID: tissueID ? tissueID.value : null,\n          cellLineID: cellLineID ? cellLineID.value : null,\n          tissueProID: tissueProID ? tissueProID.value : null,\n          individualID: individualID ? individualID.value : null,\n          sexID: sexID ? sexID.value : null,\n          factoryID: factoryID ? factoryID.value : null,\n          antibodyID: antibodyID ? antibodyID.value : null,\n          conditionID: conditionID ? conditionID.value : null,\n          barcodeID: barcodeID ? barcodeID.value : null\n        }).then(resp => {\n          setShowPreLoader(false);\n          Swal.fire('Saved!', '', 'success');\n          fetchInventory();\n          closeModal();\n        }).catch(error => {\n          setShowPreLoader(false);\n\n          if (error.response.data.message == \"Validation error\") {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'The combination of Lab and SampleID already exists! Please double check your data!'\n            });\n          } else {\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!'\n            });\n          }\n\n          if (error.response && error.response.data && error.response.data.message) {\n            console.log(`error: ${error.response.data.message}`);\n          } else {\n            console.log(`error: ${error.message}`);\n          }\n        });\n      }\n    }\n  };\n\n  const upload = () => {\n    if (file) {\n      setShowPreLoader(true);\n      let formData = new FormData();\n      formData.append('file', file);\n\n      if (replaceId && replaceId.length > 0) {\n        let replaceIdList = [];\n        replaceId.forEach(item => {\n          replaceIdList.push(item.value);\n        });\n        formData.append('replaceId', replaceIdList);\n      }\n\n      let config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(url + \"inventory/upload\", formData, config).then(resp => {\n        Swal.fire({\n          title: 'Uploaded!',\n          icon: 'success',\n          text: resp.data.message\n        });\n\n        if (resp.data.existId) {\n          setReUpload(true);\n          let existIds = resp.data.existId;\n          let existIdList = existIds.map(item => {\n            return {\n              label: item,\n              value: item\n            };\n          });\n          setExistIdList(existIdList);\n        } else {\n          closeFileModal();\n        }\n\n        fetchInventory();\n        setShowPreLoader(false);\n      }).catch(error => {\n        closeFileModal();\n        setShowPreLoader(false);\n        let errMsg = \"\";\n\n        if (error.response && error.response.data && error.response.data.message) {\n          errMsg = `error: ${error.response.data.message}`;\n          console.log(errMsg);\n        } else {\n          errMsg = `error: ${error.message}`;\n          console.log(errMsg);\n        }\n\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: errMsg\n        });\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: \"Please choose a csv to upload.\"\n      });\n    }\n  };\n\n  const columns = [{\n    name: \"Lab\",\n    selector: 'lab.code',\n    sortable: true\n  }, {\n    name: \"Sample ID\",\n    selector: 'sampleID',\n    sortable: true\n  }, {\n    name: \"Assay Type\",\n    selector: 'assayType.assayType',\n    sortable: true\n  }, {\n    name: \"Experiment\",\n    selector: 'experiment',\n    sortable: true\n  }, {\n    name: \"Species\",\n    selector: 'species.name',\n    sortable: true\n  }, {\n    name: \"Strain\",\n    selector: 'strain.strain',\n    sortable: true\n  }, {\n    name: \"Tissue\",\n    selector: 'tissue.tissue',\n    sortable: true\n  }, {\n    name: \"Cell Line\",\n    selector: 'cellLine.cellLine',\n    sortable: true\n  }, {\n    name: \"Tissue Processing\",\n    selector: 'tissueProcessing.tissueProcessing',\n    sortable: true\n  }, {\n    name: \"Individual\",\n    selector: 'individual.individual',\n    sortable: true\n  }, {\n    name: \"Sex\",\n    selector: 'sex.sex',\n    sortable: true\n  }, {\n    name: \"Factory\",\n    selector: 'factory.factory',\n    sortable: true\n  }, {\n    name: \"Antibody\",\n    selector: 'antibody.antibody',\n    sortable: true\n  }, {\n    name: \"Condition\",\n    selector: 'condition.conditionName',\n    sortable: true\n  }, {\n    name: \"Barcode Type\",\n    selector: 'barcode.type',\n    sortable: true\n  }, {\n    name: \"Barcode\",\n    selector: 'barcode.barcode',\n    sortable: true\n  }, {\n    name: '',\n    cell: c => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          setModalShow(true);\n          setEditFlag(true);\n          setModal(c);\n          setInput(c);\n        },\n        className: \"btn btn-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 25\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          deleteModal(c);\n        },\n        className: \"btn btn-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }\n      }, \"Delete\"));\n    }\n  }];\n  const [filter, setFilter] = useState(\"\");\n\n  const InventoryTable = props => {\n    const filteredItems = props.inventoryList.filter(item => item.lab && item.lab.code && item.lab.code.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.sampleID && item.sampleID.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.assayType && item.assayType.assayType && item.assayType.assayType.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.experiment && item.experiment.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.species && item.species.name && item.species.name.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.strain && item.strain.strain && item.strain.strain.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.tissue && item.tissue.tissue && item.tissue.tissue.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.cellLine && item.cellLine.cellLine && item.cellLine.cellLine.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.tissueProcessing && item.tissueProcessing.tissueProcessing && item.tissueProcessing.tissueProcessing.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.individual && item.individual.individual && item.individual.individual.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.sex && item.sex.sex && item.sex.sex.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.factory && item.factory.factory && item.factory.factory.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.antibody && item.antibody.antibody && item.antibody.antibody.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.condition && item.condition.conditionName && item.condition.conditionName.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.barcode && item.barcode.type && item.barcode.type.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.barcode && item.barcode.barcode && item.barcode.barcode.toLowerCase().includes(props.searchFilter.toLowerCase()));\n    return props.inventoryList.length > 0 && /*#__PURE__*/React.createElement(DataTable, {\n      className: \"table table-bordered table-primary no-footer\",\n      noHeader: true,\n      columns: props.columns,\n      data: props.searchFilter.trim().length > 0 ? filteredItems : props.inventoryList,\n      highlightOnHover: true,\n      pagination: true,\n      wrap: true,\n      sortFunction: sortTable,\n      paginationRowsPerPageOptions: [10, 20, 40, 50, 100, 200, 1000],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const sortTable = (rows, field, direction) => {\n    if (field != null && field != undefined) {\n      console.log(rows);\n      rows.sort(function (a, b) {\n        let arg1, arg2;\n\n        if (field.includes(\".\")) {\n          let fieldList = field.split(\".\");\n          arg1 = a[fieldList[0]][fieldList[1]].toLowerCase();\n          arg2 = b[fieldList[0]][fieldList[1]].toLowerCase();\n        } else if (field == \"sampleID\") {\n          arg1 = a[field];\n          arg2 = b[field];\n        } else {\n          arg1 = a[field].toLowerCase();\n          arg2 = b[field].toLowerCase();\n        }\n\n        return arg1 - arg2;\n      });\n    }\n\n    return rows.slice(0);\n  };\n\n  const vaildInput = () => {\n    let msg = \"\";\n\n    if (labID === null) {\n      msg += \"Lab, \";\n    }\n\n    if (assayTypeID === null) {\n      msg += \"Assay Type, \";\n    }\n\n    if (speciesID === null) {\n      msg += \"Species, \";\n    }\n\n    if (strainID === null) {\n      msg += \"Strain, \";\n    }\n\n    if (tissueID === null) {\n      msg += \"Tissue, \";\n    }\n\n    if (cellLineID === null) {\n      msg += \"Cell Line, \";\n    }\n\n    if (tissueProID === null) {\n      msg += \"Tissue Processing, \";\n    }\n\n    if (individualID === null) {\n      msg += \"Individual, \";\n    }\n\n    if (sexID === null) {\n      msg += \"Sex, \";\n    }\n\n    if (factoryID === null) {\n      msg += \"Factory, \";\n    }\n\n    if (antibodyID === null) {\n      msg += \"Antibody, \";\n    }\n\n    if (conditionID === null) {\n      msg += \"Condition, \";\n    }\n\n    if (barcodeID === null) {\n      msg += \"Barcode, \";\n    }\n\n    if (msg.trim().length > 0) {\n      msg.slice(0, msg.length - 2);\n    }\n\n    return msg;\n  };\n\n  const findItem = (list, id) => {\n    let result = {\n      label: \"\",\n      value: -1\n    };\n    list.map(item => {\n      if (item.value == id) {\n        result = item;\n      }\n    });\n    return result;\n  };\n\n  const fetchData = url => {\n    return axios(url);\n  };\n\n  const fetchInventory = async () => {\n    var res = await fetchData(url + \"inventory\");\n    setInventoryList(res.data);\n    setShowPreLoader(false);\n  };\n\n  const fetchAntibody = async () => {\n    var res = await fetchData(url + \"antibody\");\n    let antibodies = res.data;\n    let antibodyList = antibodies.map(item => {\n      return {\n        label: item.antibody,\n        value: item.id\n      };\n    });\n    setAntibodyList(antibodyList);\n  };\n\n  const fetchAssayType = async () => {\n    var res = await fetchData(url + \"assayType\");\n    let assayTypes = res.data;\n    let assayTypesList = assayTypes.map(item => {\n      return {\n        label: item.assayType,\n        value: item.id\n      };\n    });\n    setAssayTypeList(assayTypesList);\n  };\n\n  const fetchBarcode = async () => {\n    var res = await fetchData(url + \"barcode\");\n    let barcodes = res.data;\n    let barcodeList = barcodes.map(item => {\n      return {\n        label: item.type,\n        value: item.id,\n        barcode: item.barcode\n      };\n    });\n    setBarcodeList(barcodeList);\n  };\n\n  const fetchCellLine = async () => {\n    var res = await fetchData(url + \"cellLine\");\n    let cellLines = res.data;\n    let cellLinesList = cellLines.map(item => {\n      return {\n        label: item.cellLine,\n        value: item.id\n      };\n    });\n    setCellLineList(cellLinesList);\n  };\n\n  const fetchCondition = async () => {\n    var res = await fetchData(url + \"condition\");\n    let conditions = res.data;\n    let conditionList = conditions.map(item => {\n      return {\n        label: item.conditionName,\n        value: item.id\n      };\n    });\n    setConditionList(conditionList);\n  };\n\n  const fetchFactory = async () => {\n    var res = await fetchData(url + \"factory\");\n    let factorys = res.data;\n    let factoryList = factorys.map(item => {\n      return {\n        label: item.factory,\n        value: item.id\n      };\n    });\n    setFactoryList(factoryList);\n  };\n\n  const fetchIndividual = async () => {\n    var res = await fetchData(url + \"individual\");\n    let individuals = res.data;\n    let individualList = individuals.map(item => {\n      return {\n        label: item.individual,\n        value: item.id\n      };\n    });\n    setIndividualList(individualList);\n  };\n\n  const fetchLab = async () => {\n    var res = await fetchData(url + \"lab\");\n    let labs = res.data;\n    let labList = labs.map(item => {\n      return {\n        label: item.code,\n        value: item.id\n      };\n    });\n    setLabList(labList);\n  };\n\n  const fetchSex = async () => {\n    var res = await fetchData(url + \"sex\");\n    let sexes = res.data;\n    let sexList = sexes.map(item => {\n      return {\n        label: item.sex,\n        value: item.id\n      };\n    });\n    setSexList(sexList);\n  };\n\n  const fetchSpecies = async () => {\n    var res = await fetchData(url + \"species\");\n    let species = res.data;\n    let speciesList = species.map(item => {\n      return {\n        label: item.code,\n        value: item.id\n      };\n    });\n    setSpeciesList(speciesList);\n  };\n\n  const fetchStrain = async () => {\n    var res = await fetchData(url + \"strain\");\n    let strains = res.data;\n    let strainList = strains.map(item => {\n      return {\n        label: item.strain,\n        value: item.id\n      };\n    });\n    setStrainList(strainList);\n  };\n\n  const fetchTissue = async () => {\n    var res = await fetchData(url + \"tissue\");\n    let tissues = res.data;\n    let tissueList = tissues.map(item => {\n      return {\n        label: item.tissue,\n        value: item.id\n      };\n    });\n    setTissueList(tissueList);\n  };\n\n  const fetchTissuePro = async () => {\n    var res = await fetchData(url + \"tissueProcessing\");\n    let tissueProcessings = res.data;\n    let tissueProcessingList = tissueProcessings.map(item => {\n      return {\n        label: item.tissueProcessing,\n        value: item.id\n      };\n    });\n    setTissueProcessingList(tissueProcessingList);\n  };\n\n  useEffect(() => {\n    fetchInventory();\n    fetchAntibody();\n    fetchAssayType();\n    fetchBarcode();\n    fetchCellLine();\n    fetchCondition();\n    fetchFactory();\n    fetchIndividual();\n    fetchLab();\n    fetchSex();\n    fetchSpecies();\n    fetchStrain();\n    fetchTissue();\n    fetchTissuePro();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"preloader\",\n    style: showPreLoader ? {\n      opacity: \"0.6\"\n    } : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCog,\n    className: \"fa-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainpanel\",\n    style: {\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 730,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pageheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"QC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 21\n    }\n  }, \"Inventory Table\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentpanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      margin: '20px 0px 35px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 42\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    \"data-ng-init\": \"Show()\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 747,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    style: {\n      marginLeft: '5px'\n    },\n    placeholder: \"Search\",\n    onKeyUp: e => {\n      setFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-default\",\n    onClick: addModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 41\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-default\",\n    onClick: () => {\n      setFileModalShow(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 41\n    }\n  }, \"Upload CSV\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      margin: '10px 0px 35px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InventoryTable, {\n    columns: columns,\n    inventoryList: inventoryList,\n    searchFilter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: fileModalShow,\n    style: customStyles,\n    contentLabel: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 766,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: closeFileModal,\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 45\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 45\n    }\n  }, \"Upload File \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 64\n    }\n  }, \"*Only accept csv file\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 45\n    }\n  }, reUpload ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 57\n    }\n  }, \"Replace Ids: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: existIdList,\n    isMulti: true,\n    value: replaceId,\n    onChange: e => {\n      setReplaceId(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 61\n    }\n  }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"csvFile\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 53\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control-file\",\n    accept: \"text/csv\",\n    id: \"csvFile\",\n    onChange: e => {\n      setFile(e.target.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-lg-offset-9 col-md-4 col-md-offset-8 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 57\n    }\n  }, reUpload ? \"Re-Upload\" : \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-default\",\n    onClick: closeFileModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 57\n    }\n  }, \"Cancel\"))))))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalShow,\n    contentLabel: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: closeModal,\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 45\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 45\n    }\n  }, \"Modal\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 53\n    }\n  }, \"Lab Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: labList,\n    value: labID,\n    onChange: e => {\n      setlabID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 53\n    }\n  }, \"Sample ID\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 53\n    }\n  }, editFlag ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    disabled: true,\n    placeholder: \"Sample ID\",\n    defaultValue: modal.sampleID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 61\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onKeyUp: e => {\n      setSampleID(e.target.value);\n    },\n    placeholder: \"Sample ID\",\n    defaultValue: modal.sampleID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 61\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 53\n    }\n  }, \"Assay Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: assayTypeList,\n    value: assayTypeID,\n    onChange: e => {\n      setAssayTypeID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 53\n    }\n  }, \"Experiment\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onKeyUp: e => {\n      setExperiment(e.target.value);\n    },\n    placeholder: \"Experiment\",\n    defaultValue: modal.experiment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 53\n    }\n  }, \"Species Code\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 870,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: speciesList,\n    value: speciesID,\n    onChange: e => {\n      setSpeciesID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 53\n    }\n  }, \"Strain\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: strainList,\n    value: strainID,\n    onChange: e => {\n      setStrainID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 53\n    }\n  }, \"Tissue\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: tissueList,\n    value: tissueID,\n    onChange: e => {\n      setTissueID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 53\n    }\n  }, \"CellLine\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: cellLineList,\n    value: cellLineID,\n    onChange: e => {\n      setCellLineID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 53\n    }\n  }, \"Tissue Processing\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: tissueProcessingList,\n    value: tissueProID,\n    onChange: e => {\n      setTissueProID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 919,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 53\n    }\n  }, \"Individual\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: individualList,\n    value: individualID,\n    onChange: e => {\n      setIndividualID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 53\n    }\n  }, \"Sex\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: sexList,\n    value: sexID,\n    onChange: e => {\n      setSexID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 53\n    }\n  }, \"Factory\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: factoryList,\n    value: factoryID,\n    onChange: e => {\n      setFactoryID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 53\n    }\n  }, \"Antibody\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: antibodyList,\n    value: antibodyID,\n    onChange: e => {\n      setAntibodyID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 976,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 53\n    }\n  }, \"Condition\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: conditionList,\n    value: conditionID,\n    onChange: e => {\n      setConditionID(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 53\n    }\n  }, \"Barcode Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: barcodeList,\n    value: barcodeID,\n    onChange: e => {\n      setBarcodeID(e);\n      setBarcode(e.barcode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1002,\n      columnNumber: 53\n    }\n  }, \"Barcode\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Barcode\",\n    value: barcode,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 57\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-lg-offset-9 col-md-4 col-md-offset-8 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1012,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: save,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 57\n    }\n  }, editFlag ? \"Edit\" : \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-default\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 57\n    }\n  }, \"Cancel\"))))))))))))));\n}\n\nexport default React.memo(PageInventory);","map":{"version":3,"sources":["/Users/mengyisong/Documents/cwj/lab/client/src/views/Inventory/index.js"],"names":["React","useState","useEffect","DataTable","Modal","appConfig","axios","Swal","Select","FontAwesomeIcon","faCog","setAppElement","PageInventory","showPreLoader","setShowPreLoader","reUpload","setReUpload","existIdList","setExistIdList","replaceId","setReplaceId","inventoryList","setInventoryList","antibodyList","setAntibodyList","assayTypeList","setAssayTypeList","barcodeList","setBarcodeList","cellLineList","setCellLineList","conditionList","setConditionList","factoryList","setFactoryList","labList","setLabList","sexList","setSexList","individualList","setIndividualList","speciesList","setSpeciesList","strainList","setStrainList","tissueList","setTissueList","tissueProcessingList","setTissueProcessingList","modalShow","setModalShow","fileModalShow","setFileModalShow","modal","setModal","labID","setlabID","sampleID","setSampleID","assayTypeID","setAssayTypeID","experiment","setExperiment","speciesID","setSpeciesID","strainID","setStrainID","tissueID","setTissueID","cellLineID","setCellLineID","tissueProID","setTissueProID","individualID","setIndividualID","sexID","setSexID","factoryID","setFactoryID","antibodyID","setAntibodyID","conditionID","setConditionID","barcodeID","setBarcodeID","barcode","setBarcode","editFlag","setEditFlag","file","setFile","url","baseURL","customStyles","content","top","left","right","bottom","transform","width","clearInput","setInput","item","findItem","tissueProcessingID","closeModal","closeFileModal","addModal","inventory","deleteModal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteURL","id","delete","resp","fetchInventory","catch","error","response","data","message","console","log","save","editURL","msg","vaildInput","length","put","value","errMsg","post","lab","label","upload","formData","FormData","append","replaceIdList","forEach","push","config","headers","existId","existIds","map","columns","name","selector","sortable","cell","c","filter","setFilter","InventoryTable","props","filteredItems","code","toLowerCase","includes","searchFilter","assayType","species","strain","tissue","cellLine","tissueProcessing","individual","sex","factory","antibody","condition","conditionName","type","trim","sortTable","rows","field","direction","undefined","sort","a","b","arg1","arg2","fieldList","split","slice","list","fetchData","res","fetchAntibody","antibodies","fetchAssayType","assayTypes","assayTypesList","fetchBarcode","barcodes","fetchCellLine","cellLines","cellLinesList","fetchCondition","conditions","fetchFactory","factorys","fetchIndividual","individuals","fetchLab","labs","fetchSex","sexes","fetchSpecies","fetchStrain","strains","fetchTissue","tissues","fetchTissuePro","tissueProcessings","opacity","display","marginLeft","margin","e","target","files","textAlign","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,KAAT,QAAsB,mCAAtB;AAEAN,KAAK,CAACO,aAAN,CAAoB,OAApB;;AAEA,SAASC,aAAT,GAAyB;AACrB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,aAAD,EAAgBC,gBAAhB,IAAoCrB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACsB,YAAD,EAAeC,eAAf,IAAkCvB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4B,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC8B,aAAD,EAAgBC,gBAAhB,IAAoC/B,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkC,OAAD,EAAUC,UAAV,IAAwBnC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACoC,OAAD,EAAUC,UAAV,IAAwBrC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsC,cAAD,EAAiBC,iBAAjB,IAAsCvC,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACwC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0C,UAAD,EAAaC,aAAb,IAA8B3C,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B7C,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC8C,oBAAD,EAAuBC,uBAAvB,IAAkD/C,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACgD,SAAD,EAAYC,YAAZ,IAA4BjD,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACkD,aAAD,EAAgBC,gBAAhB,IAAoCnD,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACoD,KAAD,EAAQC,QAAR,IAAoBrD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsD,KAAD,EAAQC,QAAR,IAAoBvD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACwD,QAAD,EAAWC,WAAX,IAA0BzD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC0D,WAAD,EAAcC,cAAd,IAAgC3D,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC4D,UAAD,EAAaC,aAAb,IAA8B7D,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC8D,SAAD,EAAYC,YAAZ,IAA4B/D,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACgE,QAAD,EAAWC,WAAX,IAA0BjE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkE,QAAD,EAAWC,WAAX,IAA0BnE,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACoE,UAAD,EAAaC,aAAb,IAA8BrE,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsE,WAAD,EAAcC,cAAd,IAAgCvE,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACwE,YAAD,EAAeC,eAAf,IAAkCzE,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC0E,KAAD,EAAQC,QAAR,IAAoB3E,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC4E,SAAD,EAAYC,YAAZ,IAA4B7E,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAC8E,UAAD,EAAaC,aAAb,IAA8B/E,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgF,WAAD,EAAcC,cAAd,IAAgCjF,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACkF,SAAD,EAAYC,YAAZ,IAA4BnF,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoF,OAAD,EAAUC,UAAV,IAAwBrF,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsF,QAAD,EAAWC,WAAX,IAA0BvF,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACwF,IAAD,EAAOC,OAAP,IAAkBzF,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM0F,GAAG,GAAI,GAAEtF,SAAS,CAACuF,OAAQ,OAAjC;AACA,QAAMC,YAAY,GAAG;AACjBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,GAAG,EAAE,KADA;AAELC,MAAAA,IAAI,EAAE,KAFD;AAGLC,MAAAA,KAAK,EAAE,MAHF;AAILC,MAAAA,MAAM,EAAE,MAJH;AAKLC,MAAAA,SAAS,EAAE,uBALN;AAMLC,MAAAA,KAAK,EAAE;AANF;AADQ,GAArB;;AAWA,QAAMC,UAAU,GAAG,MAAM;AACrB7C,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAjBD;;AAmBA,QAAMgB,QAAQ,GAAIC,IAAD,IAAU;AACvB/C,IAAAA,QAAQ,CAACgD,QAAQ,CAACrE,OAAD,EAAUoE,IAAI,CAAChD,KAAf,CAAT,CAAR;AACAG,IAAAA,WAAW,CAAC6C,IAAI,CAAC9C,QAAN,CAAX;AACAG,IAAAA,cAAc,CAAC4C,QAAQ,CAAC/E,aAAD,EAAgB8E,IAAI,CAAC5C,WAArB,CAAT,CAAd;AACAG,IAAAA,aAAa,CAACyC,IAAI,CAAC1C,UAAN,CAAb;AACAG,IAAAA,YAAY,CAACwC,QAAQ,CAAC/D,WAAD,EAAc8D,IAAI,CAACxC,SAAnB,CAAT,CAAZ;AACAG,IAAAA,WAAW,CAACsC,QAAQ,CAAC7D,UAAD,EAAa4D,IAAI,CAACtC,QAAlB,CAAT,CAAX;AACAG,IAAAA,WAAW,CAACoC,QAAQ,CAAC3D,UAAD,EAAa0D,IAAI,CAACpC,QAAlB,CAAT,CAAX;AACAG,IAAAA,aAAa,CAACkC,QAAQ,CAAC3E,YAAD,EAAe0E,IAAI,CAAClC,UAApB,CAAT,CAAb;AACAG,IAAAA,cAAc,CAACgC,QAAQ,CAACzD,oBAAD,EAAuBwD,IAAI,CAACE,kBAA5B,CAAT,CAAd;AACA/B,IAAAA,eAAe,CAAC8B,QAAQ,CAACjE,cAAD,EAAiBgE,IAAI,CAAC9B,YAAtB,CAAT,CAAf;AACAG,IAAAA,QAAQ,CAAC4B,QAAQ,CAACnE,OAAD,EAAUkE,IAAI,CAAC5B,KAAf,CAAT,CAAR;AACAG,IAAAA,YAAY,CAAC0B,QAAQ,CAACvE,WAAD,EAAcsE,IAAI,CAAC1B,SAAnB,CAAT,CAAZ;AACAG,IAAAA,aAAa,CAACwB,QAAQ,CAACjF,YAAD,EAAegF,IAAI,CAACxB,UAApB,CAAT,CAAb;AACAG,IAAAA,cAAc,CAACsB,QAAQ,CAACzE,aAAD,EAAgBwE,IAAI,CAACtB,WAArB,CAAT,CAAd;AAEA,QAAII,OAAO,GAAGmB,QAAQ,CAAC7E,WAAD,EAAc4E,IAAI,CAACpB,SAAnB,CAAtB;AACAC,IAAAA,YAAY,CAACC,OAAD,CAAZ;AACAC,IAAAA,UAAU,CAACD,OAAO,CAACA,OAAT,CAAV;AACH,GAnBD;;AAqBA,QAAMqB,UAAU,GAAG,MAAM;AACrBxD,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAsC,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAa,IAAAA,UAAU;AACb,GAJD;;AAMA,QAAMM,cAAc,GAAG,MAAM;AACzBvD,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAsC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA1E,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,YAAY;AACf,GAND;;AAQA,QAAMwF,QAAQ,GAAG,MAAM;AACnB1D,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAI,IAAAA,QAAQ,CAAC;AAAEuD,MAAAA,SAAS,EAAE;AAAb,KAAD,CAAR;AACAR,IAAAA,UAAU;AACb,GAJD;;AAMA,QAAMS,WAAW,GAAIP,IAAD,IAAU;AAC1BhG,IAAAA,IAAI,CAACwG,IAAL,CAAU;AACNC,MAAAA,KAAK,EAAE,eADD;AAENC,MAAAA,IAAI,EAAE,mCAFA;AAGNC,MAAAA,IAAI,EAAE,SAHA;AAINC,MAAAA,gBAAgB,EAAE,IAJZ;AAKNC,MAAAA,kBAAkB,EAAE,SALd;AAMNC,MAAAA,iBAAiB,EAAE,MANb;AAONC,MAAAA,iBAAiB,EAAE;AAPb,KAAV,EAQGC,IARH,CAQSC,MAAD,IAAY;AAChB,UAAIA,MAAM,CAACC,WAAX,EAAwB;AACpB3G,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,YAAI4G,SAAS,GAAG/B,GAAG,GAAG,WAAN,GAAoB,GAApB,GAA0BY,IAAI,CAACoB,EAA/C;AAEArH,QAAAA,KAAK,CAACsH,MAAN,CAAaF,SAAb,EACKH,IADL,CACWM,IAAD,IAAU;AACZ/G,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAP,UAAAA,IAAI,CAACwG,IAAL,CACI,UADJ,EAEI,+BAFJ,EAGI,SAHJ;AAKAe,UAAAA,cAAc;AACjB,SATL,EASOC,KATP,CAScC,KAAD,IAAW;AAChBlH,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAP,UAAAA,IAAI,CAACwG,IAAL,CAAU;AACNG,YAAAA,IAAI,EAAE,OADA;AAENF,YAAAA,KAAK,EAAE,SAFD;AAGNC,YAAAA,IAAI,EAAE;AAHA,WAAV;;AAKA,cAAIe,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAjC,IAAyCF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAjE,EAA0E;AACtEC,YAAAA,OAAO,CAACC,GAAR,CAAa,UAASL,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAQ,EAAlD;AACH,WAFD,MAGK;AACDC,YAAAA,OAAO,CAACC,GAAR,CAAa,UAASL,KAAK,CAACG,OAAQ,EAApC;AACH;AACJ,SAtBL;AAuBH;AACJ,KArCD;AAsCH,GAvCD;;AAyCA,QAAMG,IAAI,GAAG,MAAM;AACf,QAAIC,OAAO,GAAG5C,GAAG,GAAG,WAApB;AACA,QAAI6C,GAAG,GAAGC,UAAU,EAApB;;AAEA,QAAID,GAAG,CAACE,MAAJ,GAAa,CAAjB,EAAoB;AAChBnI,MAAAA,IAAI,CAACwG,IAAL,CAAU;AACNG,QAAAA,IAAI,EAAE,OADA;AAENF,QAAAA,KAAK,EAAE,SAFD;AAGNC,QAAAA,IAAI,EAAEuB,GAAG,GAAG;AAHN,OAAV;AAKH,KAND,MAOK;AACD1H,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;;AACA,UAAIyE,QAAJ,EAAc;AACVgD,QAAAA,OAAO,GAAGA,OAAO,GAAG,GAAV,GAAgBlF,KAAK,CAACsE,EAAhC;AAEArH,QAAAA,KAAK,CAACqI,GAAN,CAAUJ,OAAV,EAAmB;AACfhF,UAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACqF,KAAT,GAAiB,IADd;AAEfnF,UAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAc,EAFjB;AAGfE,UAAAA,WAAW,EAAEA,WAAW,GAAGA,WAAW,CAACiF,KAAf,GAAuB,IAHhC;AAIf/E,UAAAA,UAAU,EAAEA,UAAU,GAAGA,UAAH,GAAgB,EAJvB;AAKfE,UAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAAC6E,KAAb,GAAqB,IAL1B;AAMf3E,UAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,CAAC2E,KAAZ,GAAoB,IANvB;AAOfzE,UAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,CAACyE,KAAZ,GAAoB,IAPvB;AAQfvE,UAAAA,UAAU,EAAEA,UAAU,GAAGA,UAAU,CAACuE,KAAd,GAAsB,IAR7B;AASfrE,UAAAA,WAAW,EAAEA,WAAW,GAAGA,WAAW,CAACqE,KAAf,GAAuB,IAThC;AAUfnE,UAAAA,YAAY,EAAEA,YAAY,GAAGA,YAAY,CAACmE,KAAhB,GAAwB,IAVnC;AAWfjE,UAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACiE,KAAT,GAAiB,IAXd;AAYf/D,UAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAAC+D,KAAb,GAAqB,IAZ1B;AAaf7D,UAAAA,UAAU,EAAEA,UAAU,GAAGA,UAAU,CAAC6D,KAAd,GAAsB,IAb7B;AAcf3D,UAAAA,WAAW,EAAEA,WAAW,GAAGA,WAAW,CAAC2D,KAAf,GAAuB,IAdhC;AAefzD,UAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAACyD,KAAb,GAAqB;AAf1B,SAAnB,EAiBKrB,IAjBL,CAiBWM,IAAD,IAAU;AACZ/G,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAP,UAAAA,IAAI,CAACwG,IAAL,CAAU,UAAV,EAAsB,EAAtB,EAA0B,SAA1B;AACAe,UAAAA,cAAc;AACdpB,UAAAA,UAAU;AACb,SAtBL,EAsBOqB,KAtBP,CAsBcC,KAAD,IAAW;AAChBlH,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,cAAI+H,MAAM,GAAG,EAAb;;AAEA,cAAIb,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAjC,IAAyCF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAjE,EAA0E;AACtEU,YAAAA,MAAM,GAAI,UAASb,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAQ,EAA/C;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH,WAHD,MAIK;AACDA,YAAAA,MAAM,GAAI,UAASb,KAAK,CAACG,OAAQ,EAAjC;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH;;AAEDtI,UAAAA,IAAI,CAACwG,IAAL,CAAU;AACNG,YAAAA,IAAI,EAAE,OADA;AAENF,YAAAA,KAAK,EAAE,SAFD;AAGNC,YAAAA,IAAI,EAAE4B;AAHA,WAAV;AAKH,SAxCL;AAyCH,OA5CD,MA6CK;AACDvI,QAAAA,KAAK,CAACwI,IAAN,CAAWP,OAAX,EAAoB;AAChBhF,UAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACqF,KAAT,GAAiB,IADb;AAEhBG,UAAAA,GAAG,EAAExF,KAAK,GAAGA,KAAK,CAACyF,KAAT,GAAiB,IAFX;AAGhBvF,UAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAc,EAHhB;AAIhBE,UAAAA,WAAW,EAAEA,WAAW,GAAGA,WAAW,CAACiF,KAAf,GAAuB,IAJ/B;AAKhB/E,UAAAA,UAAU,EAAEA,UAAU,GAAGA,UAAH,GAAgB,EALtB;AAMhBE,UAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAAC6E,KAAb,GAAqB,IANzB;AAOhB3E,UAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,CAAC2E,KAAZ,GAAoB,IAPtB;AAQhBzE,UAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAQ,CAACyE,KAAZ,GAAoB,IARtB;AAShBvE,UAAAA,UAAU,EAAEA,UAAU,GAAGA,UAAU,CAACuE,KAAd,GAAsB,IAT5B;AAUhBrE,UAAAA,WAAW,EAAEA,WAAW,GAAGA,WAAW,CAACqE,KAAf,GAAuB,IAV/B;AAWhBnE,UAAAA,YAAY,EAAEA,YAAY,GAAGA,YAAY,CAACmE,KAAhB,GAAwB,IAXlC;AAYhBjE,UAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,CAACiE,KAAT,GAAiB,IAZb;AAahB/D,UAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAAC+D,KAAb,GAAqB,IAbzB;AAchB7D,UAAAA,UAAU,EAAEA,UAAU,GAAGA,UAAU,CAAC6D,KAAd,GAAsB,IAd5B;AAehB3D,UAAAA,WAAW,EAAEA,WAAW,GAAGA,WAAW,CAAC2D,KAAf,GAAuB,IAf/B;AAgBhBzD,UAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,CAACyD,KAAb,GAAqB;AAhBzB,SAApB,EAkBKrB,IAlBL,CAkBWM,IAAD,IAAU;AACZ/G,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAP,UAAAA,IAAI,CAACwG,IAAL,CAAU,QAAV,EAAoB,EAApB,EAAwB,SAAxB;AACAe,UAAAA,cAAc;AACdpB,UAAAA,UAAU;AACb,SAvBL,EAuBOqB,KAvBP,CAuBcC,KAAD,IAAW;AAChBlH,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;;AACA,cAAIkH,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAApB,IAA+B,kBAAnC,EAAuD;AACnD5H,YAAAA,IAAI,CAACwG,IAAL,CAAU;AACNG,cAAAA,IAAI,EAAE,OADA;AAENF,cAAAA,KAAK,EAAE,SAFD;AAGNC,cAAAA,IAAI,EAAE;AAHA,aAAV;AAKH,WAND,MAOK;AACD1G,YAAAA,IAAI,CAACwG,IAAL,CAAU;AACNG,cAAAA,IAAI,EAAE,OADA;AAENF,cAAAA,KAAK,EAAE,SAFD;AAGNC,cAAAA,IAAI,EAAE;AAHA,aAAV;AAKH;;AAED,cAAIe,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAjC,IAAyCF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAjE,EAA0E;AACtEC,YAAAA,OAAO,CAACC,GAAR,CAAa,UAASL,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAQ,EAAlD;AACH,WAFD,MAGK;AACDC,YAAAA,OAAO,CAACC,GAAR,CAAa,UAASL,KAAK,CAACG,OAAQ,EAApC;AACH;AACJ,SA9CL;AA+CH;AACJ;AACJ,GA5GD;;AA8GA,QAAMc,MAAM,GAAG,MAAM;AACjB,QAAIxD,IAAJ,EAAU;AACN3E,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAEA,UAAIoI,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB3D,IAAxB;;AAEA,UAAItE,SAAS,IAAIA,SAAS,CAACuH,MAAV,GAAmB,CAApC,EAAuC;AACnC,YAAIW,aAAa,GAAG,EAApB;AAEAlI,QAAAA,SAAS,CAACmI,OAAV,CAAmB/C,IAAD,IAAU;AACxB8C,UAAAA,aAAa,CAACE,IAAd,CAAmBhD,IAAI,CAACqC,KAAxB;AACH,SAFD;AAIAM,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BC,aAA7B;AACH;;AAED,UAAIG,MAAM,GAAG;AACTC,QAAAA,OAAO,EAAC;AAAC,0BAAe;AAAhB;AADC,OAAb;AAIAnJ,MAAAA,KAAK,CAACwI,IAAN,CAAWnD,GAAG,GAAG,kBAAjB,EAAqCuD,QAArC,EAA+CM,MAA/C,EACKjC,IADL,CACWM,IAAD,IAAU;AACZtH,QAAAA,IAAI,CAACwG,IAAL,CAAU;AACNC,UAAAA,KAAK,EAAE,WADD;AAELE,UAAAA,IAAI,EAAE,SAFD;AAGLD,UAAAA,IAAI,EAAEY,IAAI,CAACK,IAAL,CAAUC;AAHX,SAAV;;AAMA,YAAIN,IAAI,CAACK,IAAL,CAAUwB,OAAd,EAAuB;AACnB1I,UAAAA,WAAW,CAAC,IAAD,CAAX;AAEA,cAAI2I,QAAQ,GAAG9B,IAAI,CAACK,IAAL,CAAUwB,OAAzB;AACA,cAAIzI,WAAW,GAAG0I,QAAQ,CAACC,GAAT,CAAcrD,IAAD,IAAU;AACrC,mBAAO;AAAEyC,cAAAA,KAAK,EAAEzC,IAAT;AAAeqC,cAAAA,KAAK,EAAErC;AAAtB,aAAP;AACH,WAFiB,CAAlB;AAGArF,UAAAA,cAAc,CAACD,WAAD,CAAd;AACH,SARD,MASK;AACD0F,UAAAA,cAAc;AACjB;;AAEDmB,QAAAA,cAAc;AACdhH,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,OAvBL,EAuBOiH,KAvBP,CAuBcC,KAAD,IAAW;AAChBrB,QAAAA,cAAc;AACd7F,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA,YAAI+H,MAAM,GAAG,EAAb;;AAEA,YAAIb,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAjC,IAAyCF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAjE,EAA0E;AACtEU,UAAAA,MAAM,GAAI,UAASb,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAQ,EAA/C;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH,SAHD,MAIK;AACDA,UAAAA,MAAM,GAAI,UAASb,KAAK,CAACG,OAAQ,EAAjC;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH;;AAEDtI,QAAAA,IAAI,CAACwG,IAAL,CAAU;AACNG,UAAAA,IAAI,EAAE,OADA;AAENF,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAE4B;AAHA,SAAV;AAKH,OA1CL;AA2CH,KA/DD,MAgEK;AACDtI,MAAAA,IAAI,CAACwG,IAAL,CAAU;AACNG,QAAAA,IAAI,EAAE,OADA;AAENF,QAAAA,KAAK,EAAE,SAFD;AAGNC,QAAAA,IAAI,EAAE;AAHA,OAAV;AAKH;AACJ,GAxED;;AA0EA,QAAM4C,OAAO,GAAG,CACZ;AACIC,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,QAAQ,EAAE,UAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GADY,EAMZ;AACIF,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,QAAQ,EAAE,UAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GANY,EAWZ;AACIF,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,QAAQ,EAAE,qBAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GAXY,EAgBZ;AACIF,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,QAAQ,EAAE,YAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GAhBY,EAqBZ;AACIF,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,QAAQ,EAAE,cAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GArBY,EA0BZ;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,QAAQ,EAAE,eAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GA1BY,EA+BZ;AACIF,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,QAAQ,EAAE,eAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GA/BY,EAoCZ;AACIF,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,QAAQ,EAAE,mBAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GApCY,EAyCZ;AACIF,IAAAA,IAAI,EAAE,mBADV;AAEIC,IAAAA,QAAQ,EAAE,mCAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GAzCY,EA8CZ;AACIF,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,QAAQ,EAAE,uBAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GA9CY,EAmDZ;AACIF,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,QAAQ,EAAE,SAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GAnDY,EAwDZ;AACIF,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,QAAQ,EAAE,iBAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GAxDY,EA6DZ;AACIF,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,QAAQ,EAAE,mBAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GA7DY,EAkEZ;AACIF,IAAAA,IAAI,EAAE,WADV;AAEIC,IAAAA,QAAQ,EAAE,yBAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GAlEY,EAuEZ;AACIF,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,QAAQ,EAAE,cAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GAvEY,EA4EZ;AACIF,IAAAA,IAAI,EAAE,SADV;AAEIC,IAAAA,QAAQ,EAAE,iBAFd;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GA5EY,EAiFZ;AACIF,IAAAA,IAAI,EAAE,EADV;AAEIG,IAAAA,IAAI,EAAGC,CAAD,IAAO;AACT,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,OAAO,EAAE,MAAM;AACnBhH,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACAsC,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAlC,UAAAA,QAAQ,CAAC4G,CAAD,CAAR;AACA5D,UAAAA,QAAQ,CAAC4D,CAAD,CAAR;AACH,SALD;AAMI,QAAA,SAAS,EAAC,iBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEpD,UAAAA,WAAW,CAACoD,CAAD,CAAX;AAAgB,SAAzC;AACI,QAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,CADJ;AAeH;AAlBL,GAjFY,CAAhB;AAuGA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnK,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMoK,cAAc,GAAIC,KAAD,IAAW;AAC9B,UAAMC,aAAa,GAAGD,KAAK,CAACjJ,aAAN,CAAoB8I,MAApB,CAA2B5D,IAAI,IAE5CA,IAAI,CAACwC,GAAL,IAAYxC,IAAI,CAACwC,GAAL,CAASyB,IAArB,IAA6BjE,IAAI,CAACwC,GAAL,CAASyB,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAArC,CAA9B,IACIlE,IAAI,CAAC9C,QAAL,IAAiB8C,IAAI,CAAC9C,QAAL,CAAcgH,WAAd,GAA4BC,QAA5B,CAAqCJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAArC,CADrB,IAEIlE,IAAI,CAACqE,SAAL,IAAkBrE,IAAI,CAACqE,SAAL,CAAeA,SAAjC,IAA8CrE,IAAI,CAACqE,SAAL,CAAeA,SAAf,CAAyBH,WAAzB,GAAuCC,QAAvC,CAAgDJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAAhD,CAFlD,IAGIlE,IAAI,CAAC1C,UAAL,IAAmB0C,IAAI,CAAC1C,UAAL,CAAgB4G,WAAhB,GAA8BC,QAA9B,CAAuCJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAAvC,CAHvB,IAIIlE,IAAI,CAACsE,OAAL,IAAgBtE,IAAI,CAACsE,OAAL,CAAaf,IAA7B,IAAqCvD,IAAI,CAACsE,OAAL,CAAaf,IAAb,CAAkBW,WAAlB,GAAgCC,QAAhC,CAAyCJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAAzC,CAJzC,IAKIlE,IAAI,CAACuE,MAAL,IAAevE,IAAI,CAACuE,MAAL,CAAYA,MAA3B,IAAqCvE,IAAI,CAACuE,MAAL,CAAYA,MAAZ,CAAmBL,WAAnB,GAAiCC,QAAjC,CAA0CJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAA1C,CALzC,IAMIlE,IAAI,CAACwE,MAAL,IAAexE,IAAI,CAACwE,MAAL,CAAYA,MAA3B,IAAqCxE,IAAI,CAACwE,MAAL,CAAYA,MAAZ,CAAmBN,WAAnB,GAAiCC,QAAjC,CAA0CJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAA1C,CANzC,IAOIlE,IAAI,CAACyE,QAAL,IAAiBzE,IAAI,CAACyE,QAAL,CAAcA,QAA/B,IAA2CzE,IAAI,CAACyE,QAAL,CAAcA,QAAd,CAAuBP,WAAvB,GAAqCC,QAArC,CAA8CJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAA9C,CAP/C,IAQIlE,IAAI,CAAC0E,gBAAL,IAAyB1E,IAAI,CAAC0E,gBAAL,CAAsBA,gBAA/C,IAAmE1E,IAAI,CAAC0E,gBAAL,CAAsBA,gBAAtB,CAAuCR,WAAvC,GAAqDC,QAArD,CAA8DJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAA9D,CARvE,IASIlE,IAAI,CAAC2E,UAAL,IAAmB3E,IAAI,CAAC2E,UAAL,CAAgBA,UAAnC,IAAiD3E,IAAI,CAAC2E,UAAL,CAAgBA,UAAhB,CAA2BT,WAA3B,GAAyCC,QAAzC,CAAkDJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAAlD,CATrD,IAUIlE,IAAI,CAAC4E,GAAL,IAAY5E,IAAI,CAAC4E,GAAL,CAASA,GAArB,IAA4B5E,IAAI,CAAC4E,GAAL,CAASA,GAAT,CAAaV,WAAb,GAA2BC,QAA3B,CAAoCJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAApC,CAVhC,IAWIlE,IAAI,CAAC6E,OAAL,IAAgB7E,IAAI,CAAC6E,OAAL,CAAaA,OAA7B,IAAwC7E,IAAI,CAAC6E,OAAL,CAAaA,OAAb,CAAqBX,WAArB,GAAmCC,QAAnC,CAA4CJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAA5C,CAX5C,IAYIlE,IAAI,CAAC8E,QAAL,IAAiB9E,IAAI,CAAC8E,QAAL,CAAcA,QAA/B,IAA2C9E,IAAI,CAAC8E,QAAL,CAAcA,QAAd,CAAuBZ,WAAvB,GAAqCC,QAArC,CAA8CJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAA9C,CAZ/C,IAaIlE,IAAI,CAAC+E,SAAL,IAAkB/E,IAAI,CAAC+E,SAAL,CAAeC,aAAjC,IAAkDhF,IAAI,CAAC+E,SAAL,CAAeC,aAAf,CAA6Bd,WAA7B,GAA2CC,QAA3C,CAAoDJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAApD,CAbtD,IAcIlE,IAAI,CAAClB,OAAL,IAAgBkB,IAAI,CAAClB,OAAL,CAAamG,IAA7B,IAAqCjF,IAAI,CAAClB,OAAL,CAAamG,IAAb,CAAkBf,WAAlB,GAAgCC,QAAhC,CAAyCJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAAzC,CAdzC,IAeIlE,IAAI,CAAClB,OAAL,IAAgBkB,IAAI,CAAClB,OAAL,CAAaA,OAA7B,IAAwCkB,IAAI,CAAClB,OAAL,CAAaA,OAAb,CAAqBoF,WAArB,GAAmCC,QAAnC,CAA4CJ,KAAK,CAACK,YAAN,CAAmBF,WAAnB,EAA5C,CAjB9B,CAAtB;AAqBA,WACIH,KAAK,CAACjJ,aAAN,CAAoBqH,MAApB,GAA6B,CAA7B,iBACA,oBAAC,SAAD;AACI,MAAA,SAAS,EAAC,8CADd;AAEI,MAAA,QAAQ,EAAE,IAFd;AAGI,MAAA,OAAO,EAAE4B,KAAK,CAACT,OAHnB;AAII,MAAA,IAAI,EAAES,KAAK,CAACK,YAAN,CAAmBc,IAAnB,GAA0B/C,MAA1B,GAAmC,CAAnC,GAAuC6B,aAAvC,GAAuDD,KAAK,CAACjJ,aAJvE;AAKI,MAAA,gBAAgB,MALpB;AAMI,MAAA,UAAU,EAAE,IANhB;AAOI,MAAA,IAAI,EAAE,IAPV;AAQI,MAAA,YAAY,EAAEqK,SARlB;AASI,MAAA,4BAA4B,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,IAA3B,CATlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAcH,GApCD;;AAsCA,QAAMA,SAAS,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,SAAd,KAA4B;AAC1C,QAAID,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAIE,SAA9B,EAAyC;AACrC1D,MAAAA,OAAO,CAACC,GAAR,CAAYsD,IAAZ;AACAA,MAAAA,IAAI,CAACI,IAAL,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,YAAIC,IAAJ,EAASC,IAAT;;AACA,YAAIP,KAAK,CAAClB,QAAN,CAAe,GAAf,CAAJ,EAAyB;AACrB,cAAI0B,SAAS,GAAGR,KAAK,CAACS,KAAN,CAAY,GAAZ,CAAhB;AACAH,UAAAA,IAAI,GAAGF,CAAC,CAACI,SAAS,CAAC,CAAD,CAAV,CAAD,CAAgBA,SAAS,CAAC,CAAD,CAAzB,EAA8B3B,WAA9B,EAAP;AACA0B,UAAAA,IAAI,GAAGF,CAAC,CAACG,SAAS,CAAC,CAAD,CAAV,CAAD,CAAgBA,SAAS,CAAC,CAAD,CAAzB,EAA8B3B,WAA9B,EAAP;AACH,SAJD,MAKK,IAAKmB,KAAK,IAAI,UAAd,EAA0B;AAC3BM,UAAAA,IAAI,GAAGF,CAAC,CAACJ,KAAD,CAAR;AACAO,UAAAA,IAAI,GAAGF,CAAC,CAACL,KAAD,CAAR;AACH,SAHI,MAIA;AACDM,UAAAA,IAAI,GAAGF,CAAC,CAACJ,KAAD,CAAD,CAASnB,WAAT,EAAP;AACA0B,UAAAA,IAAI,GAAGF,CAAC,CAACL,KAAD,CAAD,CAASnB,WAAT,EAAP;AACH;;AAED,eAAOyB,IAAI,GAAGC,IAAd;AACH,OAjBD;AAkBH;;AACD,WAAOR,IAAI,CAACW,KAAL,CAAW,CAAX,CAAP;AACH,GAvBD;;AAyBA,QAAM7D,UAAU,GAAG,MAAM;AACrB,QAAID,GAAG,GAAG,EAAV;;AAEA,QAAIjF,KAAK,KAAK,IAAd,EAAoB;AAChBiF,MAAAA,GAAG,IAAI,OAAP;AACH;;AACD,QAAI7E,WAAW,KAAK,IAApB,EAA0B;AACtB6E,MAAAA,GAAG,IAAI,cAAP;AACH;;AACD,QAAIzE,SAAS,KAAK,IAAlB,EAAwB;AACpByE,MAAAA,GAAG,IAAI,WAAP;AACH;;AACD,QAAIvE,QAAQ,KAAK,IAAjB,EAAuB;AACnBuE,MAAAA,GAAG,IAAI,UAAP;AACH;;AACD,QAAIrE,QAAQ,KAAK,IAAjB,EAAuB;AACnBqE,MAAAA,GAAG,IAAI,UAAP;AACH;;AACD,QAAInE,UAAU,KAAK,IAAnB,EAAyB;AACrBmE,MAAAA,GAAG,IAAI,aAAP;AACH;;AACD,QAAIjE,WAAW,KAAK,IAApB,EAA0B;AACtBiE,MAAAA,GAAG,IAAI,qBAAP;AACH;;AACD,QAAI/D,YAAY,KAAK,IAArB,EAA2B;AACvB+D,MAAAA,GAAG,IAAI,cAAP;AACH;;AACD,QAAI7D,KAAK,KAAK,IAAd,EAAoB;AAChB6D,MAAAA,GAAG,IAAI,OAAP;AACH;;AACD,QAAI3D,SAAS,KAAK,IAAlB,EAAwB;AACpB2D,MAAAA,GAAG,IAAI,WAAP;AACH;;AACD,QAAIzD,UAAU,KAAK,IAAnB,EAAyB;AACrByD,MAAAA,GAAG,IAAI,YAAP;AACH;;AACD,QAAIvD,WAAW,KAAK,IAApB,EAA0B;AACtBuD,MAAAA,GAAG,IAAI,aAAP;AACH;;AACD,QAAIrD,SAAS,KAAK,IAAlB,EAAwB;AACpBqD,MAAAA,GAAG,IAAI,WAAP;AACH;;AAED,QAAIA,GAAG,CAACiD,IAAJ,GAAW/C,MAAX,GAAoB,CAAxB,EAA2B;AACvBF,MAAAA,GAAG,CAAC8D,KAAJ,CAAU,CAAV,EAAa9D,GAAG,CAACE,MAAJ,GAAa,CAA1B;AACH;;AAED,WAAOF,GAAP;AACH,GAhDD;;AAkDA,QAAMhC,QAAQ,GAAG,CAAC+F,IAAD,EAAO5E,EAAP,KAAc;AAC3B,QAAIH,MAAM,GAAG;AAAEwB,MAAAA,KAAK,EAAE,EAAT;AAAaJ,MAAAA,KAAK,EAAE,CAAC;AAArB,KAAb;AAEA2D,IAAAA,IAAI,CAAC3C,GAAL,CAAUrD,IAAD,IAAU;AACf,UAAIA,IAAI,CAACqC,KAAL,IAAcjB,EAAlB,EAAsB;AAClBH,QAAAA,MAAM,GAAGjB,IAAT;AACH;AACJ,KAJD;AAMA,WAAOiB,MAAP;AACH,GAVD;;AAYA,QAAMgF,SAAS,GAAI7G,GAAD,IAAS;AACvB,WAAOrF,KAAK,CAACqF,GAAD,CAAZ;AACH,GAFD;;AAIA,QAAMmC,cAAc,GAAG,YAAY;AAC/B,QAAI2E,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,WAAP,CAAzB;AACArE,IAAAA,gBAAgB,CAACmL,GAAG,CAACvE,IAAL,CAAhB;AACApH,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,GAJD;;AAMA,QAAM4L,aAAa,GAAG,YAAY;AAC9B,QAAID,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,UAAP,CAAzB;AACA,QAAIgH,UAAU,GAAGF,GAAG,CAACvE,IAArB;AACA,QAAI3G,YAAY,GAAGoL,UAAU,CAAC/C,GAAX,CAAgBrD,IAAD,IAAU;AACxC,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAAC8E,QAAd;AAAwBzC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAApC,OAAP;AACH,KAFkB,CAAnB;AAGAnG,IAAAA,eAAe,CAACD,YAAD,CAAf;AACH,GAPD;;AASA,QAAMqL,cAAc,GAAG,YAAY;AAC/B,QAAIH,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,WAAP,CAAzB;AACA,QAAIkH,UAAU,GAAGJ,GAAG,CAACvE,IAArB;AACA,QAAI4E,cAAc,GAAGD,UAAU,CAACjD,GAAX,CAAgBrD,IAAD,IAAU;AAC1C,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAACqE,SAAd;AAAyBhC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAArC,OAAP;AACH,KAFoB,CAArB;AAGAjG,IAAAA,gBAAgB,CAACoL,cAAD,CAAhB;AACH,GAPD;;AASA,QAAMC,YAAY,GAAG,YAAY;AAC7B,QAAIN,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,SAAP,CAAzB;AACA,QAAIqH,QAAQ,GAAGP,GAAG,CAACvE,IAAnB;AACA,QAAIvG,WAAW,GAAGqL,QAAQ,CAACpD,GAAT,CAAcrD,IAAD,IAAU;AACrC,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAACiF,IAAd;AAAoB5C,QAAAA,KAAK,EAAErC,IAAI,CAACoB,EAAhC;AAAoCtC,QAAAA,OAAO,EAAEkB,IAAI,CAAClB;AAAlD,OAAP;AACH,KAFiB,CAAlB;AAGAzD,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAPD;;AASA,QAAMsL,aAAa,GAAG,YAAY;AAC9B,QAAIR,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,UAAP,CAAzB;AACA,QAAIuH,SAAS,GAAGT,GAAG,CAACvE,IAApB;AACA,QAAIiF,aAAa,GAAGD,SAAS,CAACtD,GAAV,CAAerD,IAAD,IAAU;AACxC,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAACyE,QAAd;AAAwBpC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAApC,OAAP;AACH,KAFmB,CAApB;AAGA7F,IAAAA,eAAe,CAACqL,aAAD,CAAf;AACH,GAPD;;AASA,QAAMC,cAAc,GAAG,YAAY;AAC/B,QAAIX,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,WAAP,CAAzB;AACA,QAAI0H,UAAU,GAAGZ,GAAG,CAACvE,IAArB;AACA,QAAInG,aAAa,GAAGsL,UAAU,CAACzD,GAAX,CAAgBrD,IAAD,IAAU;AACzC,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAACgF,aAAd;AAA6B3C,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAAzC,OAAP;AACH,KAFmB,CAApB;AAGA3F,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACH,GAPD;;AASA,QAAMuL,YAAY,GAAG,YAAY;AAC7B,QAAIb,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,SAAP,CAAzB;AACA,QAAI4H,QAAQ,GAAGd,GAAG,CAACvE,IAAnB;AACA,QAAIjG,WAAW,GAAGsL,QAAQ,CAAC3D,GAAT,CAAcrD,IAAD,IAAU;AACrC,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAAC6E,OAAd;AAAuBxC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAAnC,OAAP;AACH,KAFiB,CAAlB;AAGAzF,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAPD;;AASA,QAAMuL,eAAe,GAAG,YAAY;AAChC,QAAIf,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,YAAP,CAAzB;AACA,QAAI8H,WAAW,GAAGhB,GAAG,CAACvE,IAAtB;AACA,QAAI3F,cAAc,GAAGkL,WAAW,CAAC7D,GAAZ,CAAiBrD,IAAD,IAAU;AAC3C,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAAC2E,UAAd;AAA0BtC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAAtC,OAAP;AACH,KAFoB,CAArB;AAGAnF,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACH,GAPD;;AASA,QAAMmL,QAAQ,GAAG,YAAY;AACzB,QAAIjB,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,KAAP,CAAzB;AACA,QAAIgI,IAAI,GAAGlB,GAAG,CAACvE,IAAf;AACA,QAAI/F,OAAO,GAAGwL,IAAI,CAAC/D,GAAL,CAAUrD,IAAD,IAAU;AAC7B,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAACiE,IAAd;AAAoB5B,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAAhC,OAAP;AACH,KAFa,CAAd;AAGAvF,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH,GAPD;;AASA,QAAMyL,QAAQ,GAAG,YAAY;AACzB,QAAInB,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,KAAP,CAAzB;AACA,QAAIkI,KAAK,GAAGpB,GAAG,CAACvE,IAAhB;AACA,QAAI7F,OAAO,GAAGwL,KAAK,CAACjE,GAAN,CAAWrD,IAAD,IAAU;AAC9B,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAAC4E,GAAd;AAAmBvC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAA/B,OAAP;AACH,KAFa,CAAd;AAGArF,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH,GAPD;;AASA,QAAMyL,YAAY,GAAG,YAAY;AAC7B,QAAIrB,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,SAAP,CAAzB;AACA,QAAIkF,OAAO,GAAG4B,GAAG,CAACvE,IAAlB;AACA,QAAIzF,WAAW,GAAGoI,OAAO,CAACjB,GAAR,CAAarD,IAAD,IAAU;AACpC,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAACiE,IAAd;AAAoB5B,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAAhC,OAAP;AACH,KAFiB,CAAlB;AAGAjF,IAAAA,cAAc,CAACD,WAAD,CAAd;AACH,GAPD;;AASA,QAAMsL,WAAW,GAAG,YAAY;AAC5B,QAAItB,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,QAAP,CAAzB;AACA,QAAIqI,OAAO,GAAGvB,GAAG,CAACvE,IAAlB;AACA,QAAIvF,UAAU,GAAGqL,OAAO,CAACpE,GAAR,CAAarD,IAAD,IAAU;AACnC,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAACuE,MAAd;AAAsBlC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAAlC,OAAP;AACH,KAFgB,CAAjB;AAGA/E,IAAAA,aAAa,CAACD,UAAD,CAAb;AACH,GAPD;;AASA,QAAMsL,WAAW,GAAG,YAAY;AAC5B,QAAIxB,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,QAAP,CAAzB;AACA,QAAIuI,OAAO,GAAGzB,GAAG,CAACvE,IAAlB;AACA,QAAIrF,UAAU,GAAGqL,OAAO,CAACtE,GAAR,CAAarD,IAAD,IAAU;AACnC,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAACwE,MAAd;AAAsBnC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAAlC,OAAP;AACH,KAFgB,CAAjB;AAGA7E,IAAAA,aAAa,CAACD,UAAD,CAAb;AACH,GAPD;;AASA,QAAMsL,cAAc,GAAG,YAAY;AAC/B,QAAI1B,GAAG,GAAG,MAAMD,SAAS,CAAC7G,GAAG,GAAG,kBAAP,CAAzB;AACA,QAAIyI,iBAAiB,GAAG3B,GAAG,CAACvE,IAA5B;AACA,QAAInF,oBAAoB,GAAGqL,iBAAiB,CAACxE,GAAlB,CAAuBrD,IAAD,IAAU;AACvD,aAAO;AAAEyC,QAAAA,KAAK,EAAEzC,IAAI,CAAC0E,gBAAd;AAAgCrC,QAAAA,KAAK,EAAErC,IAAI,CAACoB;AAA5C,OAAP;AACH,KAF0B,CAA3B;AAGA3E,IAAAA,uBAAuB,CAACD,oBAAD,CAAvB;AACH,GAPD;;AASA7C,EAAAA,SAAS,CAAC,MAAM;AACZ4H,IAAAA,cAAc;AACd4E,IAAAA,aAAa;AACbE,IAAAA,cAAc;AACdG,IAAAA,YAAY;AACZE,IAAAA,aAAa;AACbG,IAAAA,cAAc;AACdE,IAAAA,YAAY;AACZE,IAAAA,eAAe;AACfE,IAAAA,QAAQ;AACRE,IAAAA,QAAQ;AACRE,IAAAA,YAAY;AACZC,IAAAA,WAAW;AACXE,IAAAA,WAAW;AACXE,IAAAA,cAAc;AACjB,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBAAQ,uDACJ;AAAK,IAAA,EAAE,EAAC,WAAR;AAAoB,IAAA,KAAK,EAAEtN,aAAa,GAAG;AAAEwN,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAwB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE5N,KAAvB;AAA8B,IAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADI,eAMJ;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAE6N,MAAAA,UAAU,EAAE;AAAd,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CADJ,CADJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,oBAAa,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,KAAK,EAAE;AAAED,MAAAA,UAAU,EAAE;AAAd,KAAnD;AAA0E,IAAA,WAAW,EAAC,QAAtF;AAA+F,IAAA,OAAO,EAAGE,CAAD,IAAO;AAAErE,MAAAA,SAAS,CAACqE,CAAC,CAACC,MAAF,CAAS9F,KAAV,CAAT;AAA2B,KAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAEhC,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAG,MAAM;AAACxD,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAAyB,KAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ,CADJ,CANJ,CADJ,CADJ,CADJ,eAqBI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,KAAK,EAAE;AAAEoL,MAAAA,MAAM,EAAE;AAAV,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AACI,IAAA,OAAO,EAAE3E,OADb;AAEI,IAAA,aAAa,EAAExI,aAFnB;AAGI,IAAA,YAAY,EAAE8I,MAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAMI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEhH,aADZ;AAEI,IAAA,KAAK,EAAE0C,YAFX;AAGI,IAAA,YAAY,EAAC,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEc,cAA/B;AAA+C,IAAA,SAAS,EAAC,OAAzD;AAAiE,oBAAa,OAA9E;AAAsF,kBAAW,OAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAnB,CADJ,CAJJ,eAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM5F,QAAQ,gBACN;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEE,WADb;AAEI,IAAA,OAAO,MAFX;AAGI,IAAA,KAAK,EAAEE,SAHX;AAII,IAAA,QAAQ,EAAGsN,CAAD,IAAO;AACbrN,MAAAA,YAAY,CAACqN,CAAD,CAAZ;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADM,GAaG,IAdjB,eAgBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAyB,IAAA,SAAS,EAAC,wBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,mBAA7B;AAAiD,IAAA,MAAM,EAAC,UAAxD;AAAmE,IAAA,EAAE,EAAC,SAAtE;AAAgF,IAAA,QAAQ,EAAGA,CAAD,IAAO;AAAE/I,MAAAA,OAAO,CAAC+I,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAP;AAA6B,KAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAhBJ,CADJ,CAPJ,eA8BI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAE3F,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDlI,QAAQ,GAAG,WAAH,GAAiB,QAAjF,CADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAE4F,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ,CADJ,CA9BJ,CALJ,CANJ,eAqDI,oBAAC,KAAD;AACI,IAAA,MAAM,EAAE1D,SADZ;AAEI,IAAA,YAAY,EAAC,EAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAII;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEyD,UAA/B;AAA2C,IAAA,SAAS,EAAC,OAArD;AAA6D,oBAAa,OAA1E;AAAkF,kBAAW,OAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,mBAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,eAII;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAJJ,eAOI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEvE,OADb;AAEI,IAAA,KAAK,EAAEoB,KAFX;AAGI,IAAA,QAAQ,EAAGkL,CAAD,IAAO;AACbjL,MAAAA,QAAQ,CAACiL,CAAD,CAAR;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CADJ,eAaI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlJ,QAAQ,gBACL;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,QAAQ,MAApD;AACI,IAAA,WAAW,EAAC,WADhB;AAC4B,IAAA,YAAY,EAAElC,KAAK,CAACI,QADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,gBAIL;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,OAAO,EAAGgL,CAAD,IAAO;AAAE/K,MAAAA,WAAW,CAAC+K,CAAC,CAACC,MAAF,CAAS9F,KAAV,CAAX;AAA8B,KAA5F;AACI,IAAA,WAAW,EAAC,WADhB;AAC4B,IAAA,YAAY,EAAEvF,KAAK,CAACI,QADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALR,CAFJ,CAbJ,eAyBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEhC,aADb;AAEI,IAAA,KAAK,EAAEkC,WAFX;AAGI,IAAA,QAAQ,EAAG8K,CAAD,IAAO;AACb7K,MAAAA,cAAc,CAAC6K,CAAD,CAAd;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAzBJ,eAqCI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,OAAO,EAAGA,CAAD,IAAO;AAAE3K,MAAAA,aAAa,CAAC2K,CAAC,CAACC,MAAF,CAAS9F,KAAV,CAAb;AAAgC,KAA9F;AAAgG,IAAA,WAAW,EAAC,YAA5G;AAAyH,IAAA,YAAY,EAAEvF,KAAK,CAACQ,UAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CArCJ,eA2CI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEpB,WADb;AAEI,IAAA,KAAK,EAAEsB,SAFX;AAGI,IAAA,QAAQ,EAAG0K,CAAD,IAAO;AACbzK,MAAAA,YAAY,CAACyK,CAAD,CAAZ;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CA3CJ,eAuDI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE9L,UADb;AAEI,IAAA,KAAK,EAAEsB,QAFX;AAGI,IAAA,QAAQ,EAAGwK,CAAD,IAAO;AACbvK,MAAAA,WAAW,CAACuK,CAAD,CAAX;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAvDJ,eAmEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE5L,UADb;AAEI,IAAA,KAAK,EAAEsB,QAFX;AAGI,IAAA,QAAQ,EAAGsK,CAAD,IAAO;AACbrK,MAAAA,WAAW,CAACqK,CAAD,CAAX;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAnEJ,eA+EI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE5M,YADb;AAEI,IAAA,KAAK,EAAEwC,UAFX;AAGI,IAAA,QAAQ,EAAGoK,CAAD,IAAO;AACbnK,MAAAA,aAAa,CAACmK,CAAD,CAAb;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CA/EJ,eA2FI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE1L,oBADb;AAEI,IAAA,KAAK,EAAEwB,WAFX;AAGI,IAAA,QAAQ,EAAGkK,CAAD,IAAO;AACbjK,MAAAA,cAAc,CAACiK,CAAD,CAAd;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CA3FJ,eAuGI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAElM,cADb;AAEI,IAAA,KAAK,EAAEkC,YAFX;AAGI,IAAA,QAAQ,EAAGgK,CAAD,IAAO;AACb/J,MAAAA,eAAe,CAAC+J,CAAD,CAAf;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAvGJ,eAmHI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEpM,OADb;AAEI,IAAA,KAAK,EAAEsC,KAFX;AAGI,IAAA,QAAQ,EAAG8J,CAAD,IAAO;AACb7J,MAAAA,QAAQ,CAAC6J,CAAD,CAAR;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAnHJ,eA+HI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAExM,WADb;AAEI,IAAA,KAAK,EAAE4C,SAFX;AAGI,IAAA,QAAQ,EAAG4J,CAAD,IAAO;AACb3J,MAAAA,YAAY,CAAC2J,CAAD,CAAZ;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CA/HJ,eA2II;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAElN,YADb;AAEI,IAAA,KAAK,EAAEwD,UAFX;AAGI,IAAA,QAAQ,EAAG0J,CAAD,IAAO;AACbzJ,MAAAA,aAAa,CAACyJ,CAAD,CAAb;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CA3IJ,eAuJI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE1M,aADb;AAEI,IAAA,KAAK,EAAEkD,WAFX;AAGI,IAAA,QAAQ,EAAGwJ,CAAD,IAAO;AACbvJ,MAAAA,cAAc,CAACuJ,CAAD,CAAd;AACH,KALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAvJJ,eAmKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE9M,WADb;AAEI,IAAA,KAAK,EAAEwD,SAFX;AAGI,IAAA,QAAQ,EAAGsJ,CAAD,IAAO;AACbrJ,MAAAA,YAAY,CAACqJ,CAAD,CAAZ;AACAnJ,MAAAA,UAAU,CAACmJ,CAAC,CAACpJ,OAAH,CAAV;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAnKJ,eAgLI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,OAAO,EAAC,QAAf;AAAwB,IAAA,SAAS,EAAC,wBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,WAAW,EAAC,SAAxD;AAAkE,IAAA,KAAK,EAAEA,OAAzE;AAAkF,IAAA,QAAQ,MAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAhLJ,CADJ,CAPJ,eAgMI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,KAAK,EAAE;AAAEuJ,MAAAA,SAAS,EAAE;AAAb,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAEtG,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqD/C,QAAQ,GAAG,MAAH,GAAY,MAAzE,CADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EAAEmB,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ,CADJ,CAhMJ,CAJJ,CArDJ,CADJ,CADJ,CADJ,CArBJ,CANJ,CANI,CAAR;AAgTH;;AAED,eAAe1G,KAAK,CAAC6O,IAAN,CAAWjO,aAAX,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport Modal from 'react-modal';\nimport appConfig from '../../config/app.config';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport Select from \"react-select\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\n\nModal.setAppElement('#root')\n\nfunction PageInventory() {\n    const [showPreLoader, setShowPreLoader] = useState(true);\n    const [reUpload, setReUpload] = useState(false);\n    const [existIdList, setExistIdList] = useState([]);\n    const [replaceId, setReplaceId] = useState([]);\n    const [inventoryList, setInventoryList] = useState([]);\n    const [antibodyList, setAntibodyList] = useState([]);\n    const [assayTypeList, setAssayTypeList] = useState([]);\n    const [barcodeList, setBarcodeList] = useState([]);\n    const [cellLineList, setCellLineList] = useState([]);\n    const [conditionList, setConditionList] = useState([]);\n    const [factoryList, setFactoryList] = useState([]);\n    const [labList, setLabList] = useState([]);\n    const [sexList, setSexList] = useState([]);\n    const [individualList, setIndividualList] = useState([]);\n    const [speciesList, setSpeciesList] = useState([]);\n    const [strainList, setStrainList] = useState([]);\n    const [tissueList, setTissueList] = useState([]);\n    const [tissueProcessingList, setTissueProcessingList] = useState([]);\n    const [modalShow, setModalShow] = useState(false);\n    const [fileModalShow, setFileModalShow] = useState(false);\n    const [modal, setModal] = useState({});\n    const [labID, setlabID] = useState(\"\");\n    const [sampleID, setSampleID] = useState(\"\");\n    const [assayTypeID, setAssayTypeID] = useState(\"\");\n    const [experiment, setExperiment] = useState(\"\");\n    const [speciesID, setSpeciesID] = useState(\"\");\n    const [strainID, setStrainID] = useState(\"\");\n    const [tissueID, setTissueID] = useState(\"\");\n    const [cellLineID, setCellLineID] = useState(\"\");\n    const [tissueProID, setTissueProID] = useState(\"\");\n    const [individualID, setIndividualID] = useState(\"\");\n    const [sexID, setSexID] = useState(\"\");\n    const [factoryID, setFactoryID] = useState(\"\");\n    const [antibodyID, setAntibodyID] = useState(\"\");\n    const [conditionID, setConditionID] = useState(\"\");\n    const [barcodeID, setBarcodeID] = useState(\"\");\n    const [barcode, setBarcode] = useState(\"\");\n    const [editFlag, setEditFlag] = useState(false);\n    const [file, setFile] = useState([]);\n    const url = `${appConfig.baseURL}/api/`;\n    const customStyles = {\n        content: {\n            top: '40%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            transform: 'translate(-50%, -50%)',\n            width: '60%'\n        }\n    };\n\n    const clearInput = () => {\n        setlabID(null);\n        setSampleID(null);\n        setAssayTypeID(null);\n        setExperiment(null);\n        setSpeciesID(null);\n        setStrainID(null);\n        setTissueID(null);\n        setCellLineID(null);\n        setTissueProID(null);\n        setIndividualID(null);\n        setSexID(null);\n        setFactoryID(null);\n        setAntibodyID(null);\n        setConditionID(null);\n        setBarcodeID(null);\n        setBarcode(\"\");\n    };\n\n    const setInput = (item) => {\n        setlabID(findItem(labList, item.labID));\n        setSampleID(item.sampleID);\n        setAssayTypeID(findItem(assayTypeList, item.assayTypeID));\n        setExperiment(item.experiment);\n        setSpeciesID(findItem(speciesList, item.speciesID));\n        setStrainID(findItem(strainList, item.strainID));\n        setTissueID(findItem(tissueList, item.tissueID));\n        setCellLineID(findItem(cellLineList, item.cellLineID));\n        setTissueProID(findItem(tissueProcessingList, item.tissueProcessingID));\n        setIndividualID(findItem(individualList, item.individualID));\n        setSexID(findItem(sexList, item.sexID));\n        setFactoryID(findItem(factoryList, item.factoryID));\n        setAntibodyID(findItem(antibodyList, item.antibodyID));\n        setConditionID(findItem(conditionList, item.conditionID));\n\n        let barcode = findItem(barcodeList, item.barcodeID);\n        setBarcodeID(barcode);\n        setBarcode(barcode.barcode);\n    };\n\n    const closeModal = () => {\n        setModalShow(false);\n        setEditFlag(false);\n        clearInput();\n    };\n\n    const closeFileModal = () => {\n        setFileModalShow(false);\n        setFile(null);\n        setReUpload(false);\n        setExistIdList([]);\n        setReplaceId();\n    };\n\n    const addModal = () => {\n        setModalShow(true);\n        setModal({ inventory: \"\" });\n        clearInput();\n    };\n\n    const deleteModal = (item) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                setShowPreLoader(true);\n                let deleteURL = url + \"inventory\" + \"/\" + item.id;\n\n                axios.delete(deleteURL)\n                    .then((resp) => {\n                        setShowPreLoader(false);\n                        Swal.fire(\n                            'Deleted!',\n                            'Your record has been deleted.',\n                            'success'\n                        );\n                        fetchInventory();\n                    }).catch((error) => {\n                        setShowPreLoader(false);\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: 'Something went wrong! It could be used in the QC table.'\n                        })\n                        if (error.response && error.response.data && error.response.data.message) {\n                            console.log(`error: ${error.response.data.message}`);\n                        }\n                        else {\n                            console.log(`error: ${error.message}`);\n                        }\n                    })\n            }\n        });\n    };\n\n    const save = () => {\n        let editURL = url + \"inventory\";\n        let msg = vaildInput();\n\n        if (msg.length > 0) {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: msg + ' could not be empty!'\n            });\n        }\n        else {\n            setShowPreLoader(true);\n            if (editFlag) {\n                editURL = editURL + \"/\" + modal.id;\n\n                axios.put(editURL, {\n                    labID: labID ? labID.value : null,\n                    sampleID: sampleID ? sampleID : \"\",\n                    assayTypeID: assayTypeID ? assayTypeID.value : null,\n                    experiment: experiment ? experiment : \"\",\n                    speciesID: speciesID ? speciesID.value : null,\n                    strainID: strainID ? strainID.value : null,\n                    tissueID: tissueID ? tissueID.value : null,\n                    cellLineID: cellLineID ? cellLineID.value : null,\n                    tissueProID: tissueProID ? tissueProID.value : null,\n                    individualID: individualID ? individualID.value : null,\n                    sexID: sexID ? sexID.value : null,\n                    factoryID: factoryID ? factoryID.value : null,\n                    antibodyID: antibodyID ? antibodyID.value : null,\n                    conditionID: conditionID ? conditionID.value : null,\n                    barcodeID: barcodeID ? barcodeID.value : null\n                })\n                    .then((resp) => {\n                        setShowPreLoader(false);\n                        Swal.fire('Updated!', '', 'success')\n                        fetchInventory();\n                        closeModal();\n                    }).catch((error) => {\n                        setShowPreLoader(false);\n                        let errMsg = \"\";\n\n                        if (error.response && error.response.data && error.response.data.message) {\n                            errMsg = `error: ${error.response.data.message}`;\n                            console.log(errMsg);\n                        }\n                        else {\n                            errMsg = `error: ${error.message}`;\n                            console.log(errMsg);\n                        }\n\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: errMsg\n                        });\n                    })\n            }\n            else {\n                axios.post(editURL, {\n                    labID: labID ? labID.value : null,\n                    lab: labID ? labID.label : null,\n                    sampleID: sampleID ? sampleID : \"\",\n                    assayTypeID: assayTypeID ? assayTypeID.value : null,\n                    experiment: experiment ? experiment : \"\",\n                    speciesID: speciesID ? speciesID.value : null,\n                    strainID: strainID ? strainID.value : null,\n                    tissueID: tissueID ? tissueID.value : null,\n                    cellLineID: cellLineID ? cellLineID.value : null,\n                    tissueProID: tissueProID ? tissueProID.value : null,\n                    individualID: individualID ? individualID.value : null,\n                    sexID: sexID ? sexID.value : null,\n                    factoryID: factoryID ? factoryID.value : null,\n                    antibodyID: antibodyID ? antibodyID.value : null,\n                    conditionID: conditionID ? conditionID.value : null,\n                    barcodeID: barcodeID ? barcodeID.value : null\n                })\n                    .then((resp) => {\n                        setShowPreLoader(false);\n                        Swal.fire('Saved!', '', 'success');\n                        fetchInventory();\n                        closeModal();\n                    }).catch((error) => {\n                        setShowPreLoader(false);\n                        if (error.response.data.message == \"Validation error\") {\n                            Swal.fire({\n                                icon: 'error',\n                                title: 'Oops...',\n                                text: 'The combination of Lab and SampleID already exists! Please double check your data!'\n                            });\n                        }\n                        else {\n                            Swal.fire({\n                                icon: 'error',\n                                title: 'Oops...',\n                                text: 'Something went wrong!'\n                            });\n                        }\n\n                        if (error.response && error.response.data && error.response.data.message) {\n                            console.log(`error: ${error.response.data.message}`);\n                        }\n                        else {\n                            console.log(`error: ${error.message}`);\n                        }\n                    })\n            }\n        }\n    };\n\n    const upload = () => {\n        if (file) {\n            setShowPreLoader(true);\n\n            let formData = new FormData();\n            formData.append('file', file);\n\n            if (replaceId && replaceId.length > 0) {\n                let replaceIdList = [];\n\n                replaceId.forEach((item) => {\n                    replaceIdList.push(item.value);\n                })\n\n                formData.append('replaceId', replaceIdList);\n            }\n\n            let config = {\n                headers:{'Content-Type':'multipart/form-data'},\n              }; \n            \n            axios.post(url + \"inventory/upload\", formData, config)\n                .then((resp) => {\n                    Swal.fire({\n                        title: 'Uploaded!',\n                         icon: 'success',\n                         text: resp.data.message\n                    });\n\n                    if (resp.data.existId) {\n                        setReUpload(true);\n\n                        let existIds = resp.data.existId;\n                        let existIdList = existIds.map((item) => {\n                            return { label: item, value: item }\n                        });\n                        setExistIdList(existIdList);\n                    }\n                    else {\n                        closeFileModal();\n                    }\n\n                    fetchInventory();\n                    setShowPreLoader(false);\n                }).catch((error) => {\n                    closeFileModal();\n                    setShowPreLoader(false);\n                    let errMsg = \"\";\n    \n                    if (error.response && error.response.data && error.response.data.message) {\n                        errMsg = `error: ${error.response.data.message}`;\n                        console.log(errMsg);\n                    }\n                    else {\n                        errMsg = `error: ${error.message}`;\n                        console.log(errMsg);\n                    }\n    \n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: errMsg\n                    });\n                })\n        }\n        else {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: \"Please choose a csv to upload.\"\n            });\n        }\n    };\n\n    const columns = [\n        {\n            name: \"Lab\",\n            selector: 'lab.code',\n            sortable: true\n        },\n        {\n            name: \"Sample ID\",\n            selector: 'sampleID',\n            sortable: true\n        },\n        {\n            name: \"Assay Type\",\n            selector: 'assayType.assayType',\n            sortable: true\n        },\n        {\n            name: \"Experiment\",\n            selector: 'experiment',\n            sortable: true\n        },\n        {\n            name: \"Species\",\n            selector: 'species.name',\n            sortable: true\n        },\n        {\n            name: \"Strain\",\n            selector: 'strain.strain',\n            sortable: true\n        },\n        {\n            name: \"Tissue\",\n            selector: 'tissue.tissue',\n            sortable: true\n        },\n        {\n            name: \"Cell Line\",\n            selector: 'cellLine.cellLine',\n            sortable: true\n        },\n        {\n            name: \"Tissue Processing\",\n            selector: 'tissueProcessing.tissueProcessing',\n            sortable: true\n        },\n        {\n            name: \"Individual\",\n            selector: 'individual.individual',\n            sortable: true\n        },\n        {\n            name: \"Sex\",\n            selector: 'sex.sex',\n            sortable: true\n        },\n        {\n            name: \"Factory\",\n            selector: 'factory.factory',\n            sortable: true\n        },\n        {\n            name: \"Antibody\",\n            selector: 'antibody.antibody',\n            sortable: true\n        },\n        {\n            name: \"Condition\",\n            selector: 'condition.conditionName',\n            sortable: true\n        },\n        {\n            name: \"Barcode Type\",\n            selector: 'barcode.type',\n            sortable: true\n        },\n        {\n            name: \"Barcode\",\n            selector: 'barcode.barcode',\n            sortable: true\n        },\n        {\n            name: '',\n            cell: (c) => {\n                return (\n                    <div className=\"form-group\">\n                        <button onClick={() => {\n                            setModalShow(true);\n                            setEditFlag(true);\n                            setModal(c);\n                            setInput(c);\n                        }}\n                            className=\"btn btn-default\">Edit\n                        </button>\n                        <button onClick={() => { deleteModal(c) }}\n                            className=\"btn btn-default\">Delete\n                        </button>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const [filter, setFilter] = useState(\"\");\n\n    const InventoryTable = (props) => {\n        const filteredItems = props.inventoryList.filter(item =>\n            (\n                (item.lab && item.lab.code && item.lab.code.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.sampleID && item.sampleID.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.assayType && item.assayType.assayType && item.assayType.assayType.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.experiment && item.experiment.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.species && item.species.name && item.species.name.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.strain && item.strain.strain && item.strain.strain.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.tissue && item.tissue.tissue && item.tissue.tissue.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.cellLine && item.cellLine.cellLine && item.cellLine.cellLine.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.tissueProcessing && item.tissueProcessing.tissueProcessing && item.tissueProcessing.tissueProcessing.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.individual && item.individual.individual && item.individual.individual.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.sex && item.sex.sex && item.sex.sex.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.factory && item.factory.factory && item.factory.factory.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.antibody && item.antibody.antibody && item.antibody.antibody.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.condition && item.condition.conditionName && item.condition.conditionName.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.barcode && item.barcode.type && item.barcode.type.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.barcode && item.barcode.barcode && item.barcode.barcode.toLowerCase().includes(props.searchFilter.toLowerCase()))\n            )\n        )\n\n        return (\n            props.inventoryList.length > 0 &&\n            <DataTable\n                className=\"table table-bordered table-primary no-footer\"\n                noHeader={true}\n                columns={props.columns}\n                data={props.searchFilter.trim().length > 0 ? filteredItems : props.inventoryList}\n                highlightOnHover\n                pagination={true}\n                wrap={true}\n                sortFunction={sortTable}\n                paginationRowsPerPageOptions={[10, 20, 40, 50, 100, 200, 1000]}\n            />\n        )\n    };\n\n    const sortTable = (rows, field, direction) => {\n        if (field != null && field != undefined) {\n            console.log(rows)\n            rows.sort( function(a, b) {\n                let arg1,arg2;\n                if( field.includes(\".\")) {\n                    let fieldList = field.split(\".\");\n                    arg1 = a[fieldList[0]][fieldList[1]].toLowerCase();\n                    arg2 = b[fieldList[0]][fieldList[1]].toLowerCase();\n                }\n                else if ( field == \"sampleID\") {\n                    arg1 = a[field];\n                    arg2 = b[field];\n                }\n                else {\n                    arg1 = a[field].toLowerCase();\n                    arg2 = b[field].toLowerCase();\n                }\n\n                return arg1 - arg2;\n            })\n        }\n        return rows.slice(0);\n    }\n\n    const vaildInput = () => {\n        let msg = \"\";\n\n        if (labID === null) {\n            msg += \"Lab, \";\n        }\n        if (assayTypeID === null) {\n            msg += \"Assay Type, \";\n        }\n        if (speciesID === null) {\n            msg += \"Species, \";\n        }\n        if (strainID === null) {\n            msg += \"Strain, \";\n        }\n        if (tissueID === null) {\n            msg += \"Tissue, \";\n        }\n        if (cellLineID === null) {\n            msg += \"Cell Line, \";\n        }\n        if (tissueProID === null) {\n            msg += \"Tissue Processing, \";\n        }\n        if (individualID === null) {\n            msg += \"Individual, \";\n        }\n        if (sexID === null) {\n            msg += \"Sex, \";\n        }\n        if (factoryID === null) {\n            msg += \"Factory, \";\n        }\n        if (antibodyID === null) {\n            msg += \"Antibody, \";\n        }\n        if (conditionID === null) {\n            msg += \"Condition, \";\n        }\n        if (barcodeID === null) {\n            msg += \"Barcode, \";\n        }\n\n        if (msg.trim().length > 0) {\n            msg.slice(0, msg.length - 2)\n        }\n\n        return msg;\n    };\n\n    const findItem = (list, id) => {\n        let result = { label: \"\", value: -1 };\n\n        list.map((item) => {\n            if (item.value == id) {\n                result = item;\n            }\n        })\n\n        return result\n    }\n\n    const fetchData = (url) => {\n        return axios(url);\n    };\n\n    const fetchInventory = async () => {\n        var res = await fetchData(url + \"inventory\");\n        setInventoryList(res.data);\n        setShowPreLoader(false);\n    };\n\n    const fetchAntibody = async () => {\n        var res = await fetchData(url + \"antibody\");\n        let antibodies = res.data;\n        let antibodyList = antibodies.map((item) => {\n            return { label: item.antibody, value: item.id }\n        });\n        setAntibodyList(antibodyList);\n    };\n\n    const fetchAssayType = async () => {\n        var res = await fetchData(url + \"assayType\");\n        let assayTypes = res.data;\n        let assayTypesList = assayTypes.map((item) => {\n            return { label: item.assayType, value: item.id }\n        });\n        setAssayTypeList(assayTypesList);\n    };\n\n    const fetchBarcode = async () => {\n        var res = await fetchData(url + \"barcode\");\n        let barcodes = res.data;\n        let barcodeList = barcodes.map((item) => {\n            return { label: item.type, value: item.id, barcode: item.barcode }\n        });\n        setBarcodeList(barcodeList);\n    };\n\n    const fetchCellLine = async () => {\n        var res = await fetchData(url + \"cellLine\");\n        let cellLines = res.data;\n        let cellLinesList = cellLines.map((item) => {\n            return { label: item.cellLine, value: item.id }\n        });\n        setCellLineList(cellLinesList);\n    };\n\n    const fetchCondition = async () => {\n        var res = await fetchData(url + \"condition\");\n        let conditions = res.data;\n        let conditionList = conditions.map((item) => {\n            return { label: item.conditionName, value: item.id }\n        });\n        setConditionList(conditionList);\n    };\n\n    const fetchFactory = async () => {\n        var res = await fetchData(url + \"factory\");\n        let factorys = res.data;\n        let factoryList = factorys.map((item) => {\n            return { label: item.factory, value: item.id }\n        });\n        setFactoryList(factoryList);\n    };\n\n    const fetchIndividual = async () => {\n        var res = await fetchData(url + \"individual\");\n        let individuals = res.data;\n        let individualList = individuals.map((item) => {\n            return { label: item.individual, value: item.id }\n        });\n        setIndividualList(individualList);\n    };\n\n    const fetchLab = async () => {\n        var res = await fetchData(url + \"lab\");\n        let labs = res.data;\n        let labList = labs.map((item) => {\n            return { label: item.code, value: item.id }\n        })\n        setLabList(labList);\n    };\n\n    const fetchSex = async () => {\n        var res = await fetchData(url + \"sex\");\n        let sexes = res.data;\n        let sexList = sexes.map((item) => {\n            return { label: item.sex, value: item.id }\n        });\n        setSexList(sexList);\n    };\n\n    const fetchSpecies = async () => {\n        var res = await fetchData(url + \"species\");\n        let species = res.data;\n        let speciesList = species.map((item) => {\n            return { label: item.code, value: item.id }\n        });\n        setSpeciesList(speciesList);\n    };\n\n    const fetchStrain = async () => {\n        var res = await fetchData(url + \"strain\");\n        let strains = res.data;\n        let strainList = strains.map((item) => {\n            return { label: item.strain, value: item.id }\n        });\n        setStrainList(strainList);\n    };\n\n    const fetchTissue = async () => {\n        var res = await fetchData(url + \"tissue\");\n        let tissues = res.data;\n        let tissueList = tissues.map((item) => {\n            return { label: item.tissue, value: item.id }\n        });\n        setTissueList(tissueList);\n    };\n\n    const fetchTissuePro = async () => {\n        var res = await fetchData(url + \"tissueProcessing\");\n        let tissueProcessings = res.data;\n        let tissueProcessingList = tissueProcessings.map((item) => {\n            return { label: item.tissueProcessing, value: item.id }\n        });\n        setTissueProcessingList(tissueProcessingList);\n    };\n\n    useEffect(() => {\n        fetchInventory();\n        fetchAntibody();\n        fetchAssayType();\n        fetchBarcode();\n        fetchCellLine();\n        fetchCondition();\n        fetchFactory();\n        fetchIndividual();\n        fetchLab();\n        fetchSex();\n        fetchSpecies();\n        fetchStrain();\n        fetchTissue();\n        fetchTissuePro();\n    }, []);\n\n    return (<>\n        <div id=\"preloader\" style={showPreLoader ? { opacity: \"0.6\" } : { display: \"none\" }}>\n            <div id=\"status\">\n                <FontAwesomeIcon icon={faCog} className=\"fa-spin\" />\n            </div>\n        </div>\n        <div className=\"mainpanel\" style={{ marginLeft: '5px' }}>\n            <div className=\"row\">\n                <div className=\"pageheader\">\n                    <h1 className=\"QC\">Inventory Table</h1>\n                </div>\n            </div>\n            <div className=\"contentpanel\">\n                <div className=\"row\" style={{ margin: '20px 0px 35px 0px' }}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-primary\">\n                            <div className=\"panel-heading\">\n                                <div className=\"panel-title\">\n                                    <div><span></span></div>\n                                </div>\n                            </div>\n                            <div className=\"panel-body\" data-ng-init=\"Show()\">\n                                <form className=\"form-inline\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" style={{ marginLeft: '5px' }} placeholder=\"Search\" onKeyUp={(e) => { setFilter(e.target.value) }} />\n                                        <button type=\"button\" className=\"btn btn-default\" onClick={addModal} >Add</button>\n                                        <button type=\"button\" className=\"btn btn-default\" onClick={ () => {setFileModalShow(true); }} >Upload CSV</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\" style={{ margin: '10px 0px 35px 0px' }}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-body table-responsive\">\n                                <InventoryTable\n                                    columns={columns}\n                                    inventoryList={inventoryList}\n                                    searchFilter={filter}\n                                />\n                                <Modal\n                                    isOpen={fileModalShow}\n                                    style={customStyles}\n                                    contentLabel=\"\"\n                                >\n                                    <div className=\"panel\">\n                                        <button type=\"button\" onClick={closeFileModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                        <div className=\"panel-heading\">\n                                            <label>Upload File <i>*Only accept csv file</i></label>\n                                        </div>\n                                        <div className=\"panel-body\">\n                                            <div className=\"form-horizontal\">\n                                                { reUpload ? \n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Replace Ids: </label>\n                                                        <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                            <Select\n                                                                options={existIdList}\n                                                                isMulti\n                                                                value={replaceId}\n                                                                onChange={(e) => {\n                                                                    setReplaceId(e);\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    </div> : null\n                                                }\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"csvFile\" className=\"col-sm-4 control-label\" >File</label>\n                                                    <input type=\"file\" className=\"form-control-file\" accept=\"text/csv\" id=\"csvFile\" onChange={(e) => { setFile(e.target.files[0]); }} />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"panel-footer\">\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-3 col-lg-offset-9 col-md-4 col-md-offset-8 col-sm-12\">\n                                                    <div className=\"form-group\" style={{ textAlign: \"right\" }}>\n                                                        <button className=\"btn btn-primary\" onClick={upload} >{ reUpload ? \"Re-Upload\" : \"Upload\" }</button>\n                                                        <button type=\"button\" className=\"btn btn-default\" onClick={closeFileModal} >Cancel</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Modal>\n                                <Modal\n                                    isOpen={modalShow}\n                                    contentLabel=\"\"\n                                >\n                                    <div className=\"panel\">\n                                        <button type=\"button\" onClick={closeModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                        <div className=\"panel-heading\">\n                                            <label>Modal</label>\n                                        </div>\n                                        <div className=\"panel-body\">\n                                            <div className=\"form-horizontal\">\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Lab Code</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={labList}\n                                                            value={labID}\n                                                            onChange={(e) => {\n                                                                setlabID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Sample ID</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        {editFlag ?\n                                                            <input type=\"text\" className=\"form-control\" disabled\n                                                                placeholder=\"Sample ID\" defaultValue={modal.sampleID} />\n                                                            :\n                                                            <input type=\"text\" className=\"form-control\" onKeyUp={(e) => { setSampleID(e.target.value); }}\n                                                                placeholder=\"Sample ID\" defaultValue={modal.sampleID} />\n                                                        }\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Assay Type</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={assayTypeList}\n                                                            value={assayTypeID}\n                                                            onChange={(e) => {\n                                                                setAssayTypeID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Experiment</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <input type=\"text\" className=\"form-control\" onKeyUp={(e) => { setExperiment(e.target.value); }} placeholder=\"Experiment\" defaultValue={modal.experiment} />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Species Code</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={speciesList}\n                                                            value={speciesID}\n                                                            onChange={(e) => {\n                                                                setSpeciesID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Strain</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={strainList}\n                                                            value={strainID}\n                                                            onChange={(e) => {\n                                                                setStrainID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Tissue</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={tissueList}\n                                                            value={tissueID}\n                                                            onChange={(e) => {\n                                                                setTissueID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">CellLine</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={cellLineList}\n                                                            value={cellLineID}\n                                                            onChange={(e) => {\n                                                                setCellLineID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Tissue Processing</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={tissueProcessingList}\n                                                            value={tissueProID}\n                                                            onChange={(e) => {\n                                                                setTissueProID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Individual</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={individualList}\n                                                            value={individualID}\n                                                            onChange={(e) => {\n                                                                setIndividualID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Sex</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={sexList}\n                                                            value={sexID}\n                                                            onChange={(e) => {\n                                                                setSexID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Factory</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={factoryList}\n                                                            value={factoryID}\n                                                            onChange={(e) => {\n                                                                setFactoryID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Antibody</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={antibodyList}\n                                                            value={antibodyID}\n                                                            onChange={(e) => {\n                                                                setAntibodyID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Condition</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={conditionList}\n                                                            value={conditionID}\n                                                            onChange={(e) => {\n                                                                setConditionID(e);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Barcode Type</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <Select\n                                                            options={barcodeList}\n                                                            value={barcodeID}\n                                                            onChange={(e) => {\n                                                                setBarcodeID(e);\n                                                                setBarcode(e.barcode);\n                                                            }}\n                                                        />\n                                                    </div>\n                                                </div>\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Barcode</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <input type=\"text\" className=\"form-control\" placeholder=\"Barcode\" value={barcode} disabled />\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"panel-footer\">\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-3 col-lg-offset-9 col-md-4 col-md-offset-8 col-sm-12\">\n                                                    <div className=\"form-group\" style={{ textAlign: \"right\" }}>\n                                                        <button className=\"btn btn-primary\" onClick={save} >{editFlag ? \"Edit\" : \"Save\"}</button>\n                                                        <button type=\"button\" className=\"btn btn-default\" onClick={closeModal} >Cancel</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Modal>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </>);\n}\n\nexport default React.memo(PageInventory)"]},"metadata":{},"sourceType":"module"}