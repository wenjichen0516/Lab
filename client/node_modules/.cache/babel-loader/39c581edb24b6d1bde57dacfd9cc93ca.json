{"ast":null,"code":"exports.sortTable = (rows, field, direction) => {\n  if (field != null && field != undefined) {\n    rows.sort(function (a, b) {\n      let arg1, arg2;\n\n      if (field.includes(\".\")) {\n        let fieldList = field.split(\".\");\n        console.log(fieldList);\n\n        if (fieldList.length === 3) {\n          if (a[fieldList[0]][fieldList[1]][fieldList[2]] != null) {\n            if (typeof a[fieldList[0]][fieldList[1]][fieldList[2]] === \"number\" || a[fieldList[0]][fieldList[1]][fieldList[2]] === null) {\n              arg1 = a[fieldList[0]][fieldList[1]][fieldList[2]];\n              arg2 = b[fieldList[0]][fieldList[1]][fieldList[2]];\n            } else {\n              arg1 = a[fieldList[0]][fieldList[1]][fieldList[2]].toLowerCase();\n              arg2 = b[fieldList[0]][fieldList[1]][fieldList[2]].toLowerCase();\n            }\n          }\n        } else {\n          if (typeof a[fieldList[0]][fieldList[1]] === \"number\" || a[fieldList[0]][fieldList[1]] === null) {\n            arg1 = a[fieldList[0]][fieldList[1]];\n            arg2 = b[fieldList[0]][fieldList[1]];\n            return arg1 - arg2;\n          } else {\n            arg1 = a[fieldList[0]][fieldList[1]].toLowerCase();\n            arg2 = b[fieldList[0]][fieldList[1]].toLowerCase();\n          }\n        }\n      } else {\n        if (typeof a[field] === \"number\" || a[field] === null) {\n          arg1 = a[field];\n          arg2 = b[field];\n          return arg1 - arg2;\n        } else {\n          arg1 = a[field].toLowerCase();\n          arg2 = b[field].toLowerCase();\n        }\n      }\n\n      if (arg1 < arg2) {\n        return -1;\n      }\n\n      if (arg1 > arg2) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  if (direction === \"desc\") {\n    rows.reverse();\n  }\n\n  return rows.slice(0);\n};","map":{"version":3,"sources":["/Users/mengyisong/Documents/cwj/lab/client/src/lib/common.js"],"names":["exports","sortTable","rows","field","direction","undefined","sort","a","b","arg1","arg2","includes","fieldList","split","console","log","length","toLowerCase","reverse","slice"],"mappings":"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","sourcesContent":["exports.sortTable = (rows, field, direction) => {\n    if (field != null && field != undefined) {\n        rows.sort( function(a, b) {\n            let arg1,arg2;\n            if( field.includes(\".\")) {\n                let fieldList = field.split(\".\");\n                console.log(fieldList)\n                if (fieldList.length === 3) {\n                    if ( a[fieldList[0]][fieldList[1]][fieldList[2]] != null){\n                        if ( typeof a[fieldList[0]][fieldList[1]][fieldList[2]] === \"number\" ||\n                        a[fieldList[0]][fieldList[1]][fieldList[2]] === null) {\n                            arg1 = a[fieldList[0]][fieldList[1]][fieldList[2]];\n                            arg2 = b[fieldList[0]][fieldList[1]][fieldList[2]];\n                        }\n                        else {\n                            arg1 = a[fieldList[0]][fieldList[1]][fieldList[2]].toLowerCase();\n                            arg2 = b[fieldList[0]][fieldList[1]][fieldList[2]].toLowerCase();\n                        }\n                    }\n                }\n                else {\n                    if ( typeof a[fieldList[0]][fieldList[1]] === \"number\" ||\n                        a[fieldList[0]][fieldList[1]] === null) {\n                        arg1 = a[fieldList[0]][fieldList[1]];\n                        arg2 = b[fieldList[0]][fieldList[1]];\n\n                        return arg1 - arg2;\n                    }\n                    else{\n                        arg1 = a[fieldList[0]][fieldList[1]].toLowerCase();\n                        arg2 = b[fieldList[0]][fieldList[1]].toLowerCase();\n                    }\n                }   \n            }\n            else {\n                if ( typeof a[field] === \"number\" ||\n                    a[field] === null) {\n                    arg1 = a[field];\n                    arg2 = b[field];\n\n                    return arg1 - arg2;\n                }\n                else {\n                    arg1 = a[field].toLowerCase();\n                    arg2 = b[field].toLowerCase();\n                }\n            }\n\n            if (arg1 < arg2) { return -1; }\n            if (arg1 > arg2) { return 1; }\n\n            return 0;\n        })\n    }\n\n    if ( direction === \"desc\") {\n        rows.reverse();\n    }\n\n    return rows.slice(0);\n}"]},"metadata":{},"sourceType":"module"}