{"ast":null,"code":"var _jsxFileName = \"/Users/mengyisong/Documents/cwj/lab/client/src/components/Nav/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Dropdown, Menu } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Nav(props) {\n  _s();\n\n  const {\n    titleIcon,\n    titleText,\n    textColor,\n    activeColor,\n    leftMenu,\n    rightMenu\n  } = props.data;\n\n  const getActiveItemByPath = (menus, pathname) => {\n    for (let item of menus) {\n      if (item.subitems && item.subitems.length > 0) {\n        for (let i of item.subitems) {\n          if (i.href === pathname) {\n            return i.key;\n          }\n        }\n      }\n\n      if (item.href === pathname) {\n        return item.key;\n      }\n    }\n\n    return '';\n  };\n\n  const selectActiveItem = () => {\n    const pathname = props.location.pathname;\n    const val = getActiveItemByPath(leftMenu, pathname);\n    return val === '' ? getActiveItemByPath(leftMenu, pathname) : val;\n  };\n\n  const [activeItem, setActiveItem] = useState(selectActiveItem());\n\n  const handleMenuClick = menu => {\n    if (menu.externalLink) {\n      window.open(menu.href);\n    } else {\n      setActiveItem(menu.key);\n      props.history.push(menu.href);\n    }\n  };\n\n  const menuView = menus => {\n    return menus.map(item => {\n      return item.subitems && item.subitems.length ? /*#__PURE__*/_jsxDEV(Dropdown, {\n        item: true,\n        text: item.title,\n        style: {\n          color: textColor\n        },\n        children: /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: item.subitems.map(i => {\n            return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => handleMenuClick(i),\n              children: i.title\n            }, i.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Menu.Item, {\n        active: activeItem === item.key,\n        style: {\n          color: textColor\n        },\n        onClick: () => handleMenuClick(item),\n        children: item.title\n      }, item.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    size: \"huge\",\n    style: {\n      padding: '0 4$%',\n      background: 'black'\n    },\n    color: activeColor,\n    pointing: true,\n    secondary: true,\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      header: true,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          height: '18px',\n          width: '18px'\n        },\n        src: titleIcon,\n        alt: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'white',\n          marginLeft: '10px'\n        },\n        children: titleText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Menu, {\n      position: \"left\",\n      children: menuView(leftMenu)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Menu, {\n      position: \"right\",\n      children: menuView(rightMenu)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Nav, \"/0l5paAxIE/QLTO7QEaRg1hWjUE=\");\n\n_c = Nav;\nexport default _c3 = withRouter(_c2 = /*#__PURE__*/React.memo(Nav));\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Nav\");\n$RefreshReg$(_c2, \"%default%$withRouter\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/mengyisong/Documents/cwj/lab/client/src/components/Nav/index.js"],"names":["React","useState","Dropdown","Menu","withRouter","Nav","props","titleIcon","titleText","textColor","activeColor","leftMenu","rightMenu","data","getActiveItemByPath","menus","pathname","item","subitems","length","i","href","key","selectActiveItem","location","val","activeItem","setActiveItem","handleMenuClick","menu","externalLink","window","open","history","push","menuView","map","title","color","padding","background","height","width","marginLeft","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,mBAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,GAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA,SAAxB;AAAmCC,IAAAA,WAAnC;AAAgDC,IAAAA,QAAhD;AAA0DC,IAAAA;AAA1D,MAAwEN,KAAK,CAACO,IAApF;;AAEA,QAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC7C,SAAK,IAAIC,IAAT,IAAiBF,KAAjB,EAAuB;AACnB,UAAGE,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACC,QAAL,CAAcC,MAAd,GAAuB,CAA3C,EAA6C;AACzC,aAAI,IAAIC,CAAR,IAAaH,IAAI,CAACC,QAAlB,EAA2B;AACvB,cAAGE,CAAC,CAACC,IAAF,KAAWL,QAAd,EAAuB;AACnB,mBAAOI,CAAC,CAACE,GAAT;AACH;AACJ;AACJ;;AACD,UAAGL,IAAI,CAACI,IAAL,KAAcL,QAAjB,EAA0B;AACtB,eAAOC,IAAI,CAACK,GAAZ;AACH;AACJ;;AACD,WAAO,EAAP;AACH,GAdD;;AAgBA,QAAMC,gBAAgB,GAAG,MAAM;AAC3B,UAAMP,QAAQ,GAAGV,KAAK,CAACkB,QAAN,CAAeR,QAAhC;AACA,UAAMS,GAAG,GAAGX,mBAAmB,CAACH,QAAD,EAAWK,QAAX,CAA/B;AACA,WAAOS,GAAG,KAAK,EAAR,GAAaX,mBAAmB,CAACH,QAAD,EAAWK,QAAX,CAAhC,GAAuDS,GAA9D;AACH,GAJD;;AAMA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAACsB,gBAAgB,EAAjB,CAA5C;;AAEA,QAAMK,eAAe,GAAIC,IAAD,IAAU;AAC9B,QAAGA,IAAI,CAACC,YAAR,EAAqB;AACjBC,MAAAA,MAAM,CAACC,IAAP,CAAYH,IAAI,CAACR,IAAjB;AACH,KAFD,MAEK;AACDM,MAAAA,aAAa,CAACE,IAAI,CAACP,GAAN,CAAb;AACAhB,MAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmBL,IAAI,CAACR,IAAxB;AACH;AACJ,GAPD;;AASA,QAAMc,QAAQ,GAAIpB,KAAD,IAAW;AACxB,WAAOA,KAAK,CAACqB,GAAN,CAAWnB,IAAD,IAAU;AACvB,aAAOA,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACC,QAAL,CAAcC,MAA/B,gBAEH,QAAC,QAAD;AAAyB,QAAA,IAAI,MAA7B;AAA8B,QAAA,IAAI,EAAEF,IAAI,CAACoB,KAAzC;AAAgD,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE7B;AAAT,SAAvD;AAAA,+BACI,QAAC,QAAD,CAAU,IAAV;AAAA,oBAEQQ,IAAI,CAACC,QAAL,CAAckB,GAAd,CAAmBhB,CAAD,IAAO;AACrB,gCACI,QAAC,QAAD,CAAU,IAAV;AAAe,cAAA,OAAO,EAAE,MAAMQ,eAAe,CAACR,CAAD,CAA7C;AAAA,wBACKA,CAAC,CAACiB;AADP,eAAuDjB,CAAC,CAACE,GAAzD;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WAND;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ,SAAeL,IAAI,CAACK,GAApB;AAAA;AAAA;AAAA;AAAA,cAFG,gBAiBH,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,MAAM,EAAEI,UAAU,KAAKT,IAAI,CAACK,GADhC;AAEI,QAAA,KAAK,EAAE;AAAEgB,UAAAA,KAAK,EAAE7B;AAAT,SAFX;AAGI,QAAA,OAAO,EAAE,MAAMmB,eAAe,CAACX,IAAD,CAHlC;AAAA,kBAKKA,IAAI,CAACoB;AALV,SAAgBpB,IAAI,CAACK,GAArB;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAyBH,KA1BM,CAAP;AA2BH,GA5BD;;AA8BA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,KAAK,EAAE;AAAEiB,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,UAAU,EAAE;AAAhC,KAAzB;AACI,IAAA,KAAK,EAAG9B,WADZ;AAC0B,IAAA,QAAQ,MADlC;AACmC,IAAA,SAAS,MAD5C;AAAA,4BAGI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,MAAM,MAAjB;AAAA,8BACI;AAAK,QAAA,KAAK,EAAE;AAAE+B,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SAAZ;AAA+C,QAAA,GAAG,EAAEnC,SAApD;AAA+D,QAAA,GAAG,EAAC;AAAnE;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,KAAK,EAAE;AAAE+B,UAAAA,KAAK,EAAE,OAAT;AAAkBK,UAAAA,UAAU,EAAE;AAA9B,SAAb;AAAA,kBACKnC;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eASI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,QAAQ,EAAC,MAApB;AAAA,gBACK2B,QAAQ,CAACxB,QAAD;AADb;AAAA;AAAA;AAAA;AAAA,YATJ,eAYI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,QAAQ,EAAC,OAApB;AAAA,gBACKwB,QAAQ,CAACvB,SAAD;AADb;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GApFQP,G;;KAAAA,G;AAsFT,qBAAeD,UAAU,oBAACJ,KAAK,CAAC4C,IAAN,CAAWvC,GAAX,CAAD,CAAzB","sourcesContent":["import React, { useState } from 'react'\nimport { Dropdown, Menu } from 'semantic-ui-react'\nimport { withRouter } from 'react-router-dom'\n\nfunction Nav (props) {\n    const { titleIcon, titleText, textColor, activeColor, leftMenu, rightMenu } = props.data\n\n    const getActiveItemByPath = (menus, pathname) => {\n        for (let item of menus){\n            if(item.subitems && item.subitems.length > 0){\n                for(let i of item.subitems){\n                    if(i.href === pathname){\n                        return i.key\n                    }\n                }\n            }\n            if(item.href === pathname){\n                return item.key\n            }\n        }\n        return ''\n    }\n\n    const selectActiveItem = () => {\n        const pathname = props.location.pathname\n        const val = getActiveItemByPath(leftMenu, pathname)\n        return val === '' ? getActiveItemByPath(leftMenu, pathname) : val\n    }\n\n    const [activeItem, setActiveItem] = useState(selectActiveItem())\n\n    const handleMenuClick = (menu) => {\n        if(menu.externalLink){\n            window.open(menu.href)\n        }else{\n            setActiveItem(menu.key)\n            props.history.push(menu.href)\n        }\n    }\n\n    const menuView = (menus) => {\n        return menus.map((item) => {\n            return item.subitems && item.subitems.length ?\n            (\n                <Dropdown key={item.key} item text={item.title} style={{ color: textColor }}>\n                    <Dropdown.Menu>\n                        {\n                            item.subitems.map((i) => {\n                                return(\n                                    <Dropdown.Item onClick={() => handleMenuClick(i)} key={i.key} >\n                                        {i.title}\n                                    </Dropdown.Item>\n                                )\n                            })\n                        }\n                    </Dropdown.Menu>\n                </Dropdown>\n            ) :\n            (\n                <Menu.Item key={item.key}\n                    active={activeItem === item.key}\n                    style={{ color: textColor }}\n                    onClick={() => handleMenuClick(item)}\n                >\n                    {item.title}\n                </Menu.Item>\n            )\n        })\n    }\n\n    return (\n        <Menu size='huge' style={{ padding: '0 4$%', background: 'black'}}\n            color={ activeColor } pointing secondary\n        >\n            <Menu.Item header>\n                <img style={{ height: '18px', width: '18px' }} src={titleIcon} alt='icon' />\n                <span style={{ color: 'white', marginLeft: '10px'}} >\n                    {titleText}\n                </span>\n            </Menu.Item>\n            <Menu.Menu position='left' >\n                {menuView(leftMenu)}\n            </Menu.Menu>\n            <Menu.Menu position='right'>\n                {menuView(rightMenu)}\n            </Menu.Menu>\n        </Menu>\n    )\n}\n\nexport default withRouter(React.memo(Nav))"]},"metadata":{},"sourceType":"module"}