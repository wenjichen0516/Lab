{"ast":null,"code":"var _jsxFileName = \"/Users/mengyisong/Documents/cwj/lab/client/src/views/ChipSeq/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport Modal from 'react-modal';\nimport appConfig from '../../config/app.config';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport Select from \"react-select\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\n\nconst common = require(\"../../lib/common\");\n\nModal.setAppElement('#root');\n\nfunction PageChipSeq() {\n  const [showPreLoader, setShowPreLoader] = useState(true);\n  const [chipSeqList, setChipSeqList] = useState([]);\n  const [reUpload, setReUpload] = useState(false);\n  const [existIdList, setExistIdList] = useState([]);\n  const [replaceId, setReplaceId] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  const [file, setFile] = useState([]);\n  const url = `${appConfig.baseURL}/api/chipSeq`;\n  const customStyles = {\n    content: {\n      top: '40%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      transform: 'translate(-50%, -50%)',\n      width: '60%'\n    }\n  };\n\n  const deleteModal = item => {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(result => {\n      if (result.isConfirmed) {\n        setShowPreLoader(true);\n        let deleteURL = url + \"chipSeq\" + \"/\" + item.id;\n        axios.delete(deleteURL).then(resp => {\n          setShowPreLoader(false);\n          Swal.fire('Deleted!', 'Your record has been deleted.', 'success');\n          fetchChipSeq();\n        }).catch(error => {\n          setShowPreLoader(false);\n          Swal.fire({\n            icon: 'error',\n            title: 'Oops...',\n            text: 'Something went wrong!'\n          });\n          console.log(`error: ${error.response.data.message}`);\n        });\n      }\n    });\n  };\n\n  const closeModal = () => {\n    setModalShow(false);\n    setFile(null);\n    setReUpload(false);\n    setExistIdList([]);\n    setReplaceId();\n  };\n\n  const addModal = () => {\n    setModalShow(true);\n    setFile(null);\n  };\n\n  const upload = () => {\n    if (file) {\n      setShowPreLoader(true);\n      let formData = new FormData();\n      formData.append('file', file);\n\n      if (replaceId && replaceId.length > 0) {\n        let replaceIdList = [];\n        replaceId.forEach(item => {\n          replaceIdList.push(item.value);\n        });\n        formData.append('replaceId', replaceIdList);\n      }\n\n      let config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(url + \"/upload\", formData, config).then(resp => {\n        Swal.fire({\n          title: 'Uploaded!',\n          icon: 'success',\n          text: resp.data.message\n        });\n\n        if (resp.data.existId) {\n          setReUpload(true);\n          let existIds = resp.data.existId;\n          let existIdList = existIds.map(item => {\n            return {\n              label: item,\n              value: item\n            };\n          });\n          setExistIdList(existIdList);\n        } else {\n          closeModal();\n        }\n\n        fetchChipSeq();\n        setShowPreLoader(false);\n      }).catch(error => {\n        closeModal();\n        setShowPreLoader(false);\n        let errMsg = \"\";\n\n        if (error.response && error.response.data && error.response.data.message) {\n          errMsg = `error: ${error.response.data.message}`;\n          console.log(errMsg);\n        } else {\n          errMsg = `error: ${error.message}`;\n          console.log(errMsg);\n        }\n\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: errMsg\n        });\n      });\n    } else {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: \"Please choose a csv to upload.\"\n      });\n    }\n  };\n\n  const columns = [{\n    name: \"Lab\",\n    selector: 'inventory.lab.code',\n    sortable: true\n  }, {\n    name: \"Sample ID\",\n    selector: 'inventory.sampleID',\n    sortable: true\n  }, {\n    name: \"Assay Type\",\n    selector: 'inventory.assayType.assayType',\n    sortable: true\n  }, {\n    name: \"Experiment\",\n    selector: 'inventory.experiment',\n    sortable: true\n  }, {\n    name: \"Species\",\n    selector: 'inventory.species.name',\n    sortable: true\n  }, {\n    name: \"Strain\",\n    selector: 'inventory.strain.strain',\n    sortable: true\n  }, {\n    name: \"Tissue\",\n    selector: 'inventory.tissue.tissue',\n    sortable: true\n  }, {\n    name: \"Cell Line\",\n    selector: 'inventory.cellLine.cellLine',\n    sortable: true\n  }, {\n    name: \"Tissue Processing\",\n    selector: 'inventory.tissueProcessing.tissueProcessing',\n    sortable: true\n  }, {\n    name: \"Individual\",\n    selector: 'inventory.individual.individual',\n    sortable: true\n  }, {\n    name: \"Sex\",\n    selector: 'inventory.sex.sex',\n    sortable: true\n  }, {\n    name: \"Factory\",\n    selector: 'inventory.factory.factory',\n    sortable: true\n  }, {\n    name: \"Antibody\",\n    selector: 'inventory.antibody.antibody',\n    sortable: true\n  }, {\n    name: \"Condition\",\n    selector: 'inventory.condition.conditionName',\n    sortable: true\n  }, {\n    name: \"Barcode Type\",\n    selector: 'inventory.barcode.type',\n    sortable: true\n  }, {\n    name: \"Barcode\",\n    selector: 'inventory.barcode.barcode',\n    sortable: true\n  }, {\n    name: \"# Raw Reads\",\n    selector: 'rawRead',\n    sortable: true\n  }, {\n    name: \"# Mapped Reads\",\n    selector: 'mappedValue',\n    sortable: true\n  }, {\n    name: \"% Mapped Reads\",\n    selector: 'mappedPercent',\n    sortable: true\n  }, {\n    name: \"# Uniquely Mapped Reads\",\n    selector: 'uniqueMappedValue',\n    sortable: true\n  }, {\n    name: \"% Uniquely Mapped Reads\",\n    selector: 'uniquePercent',\n    sortable: true\n  }, {\n    name: \"PBC\",\n    selector: 'PBC',\n    sortable: true\n  }, {\n    name: \"NRF\",\n    selector: 'NRF',\n    sortable: true\n  }, {\n    name: \"NSC\",\n    selector: 'NSC',\n    sortable: true\n  }, {\n    name: \"RSC\",\n    selector: 'RSC',\n    sortable: true\n  }, {\n    name: \"# Peaks\",\n    selector: 'peaks',\n    sortable: true\n  }, {\n    name: \"Frip\",\n    selector: 'frip',\n    sortable: true\n  }, {\n    name: \"Technical Replicate\",\n    selector: 'techRep',\n    sortable: true\n  }, {\n    name: \"Color\",\n    cell: c => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        style: {\n          backgroundColor: c.inventory.factory.color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }\n      }, c.inventory.factory.color));\n    }\n  }, {\n    name: '',\n    cell: c => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: () => {\n          deleteModal(c);\n        },\n        className: \"btn btn-default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }\n      }, \"Delete\"));\n    }\n  }];\n  const [filter, setFilter] = useState(\"\");\n\n  const ChipSeqTable = props => {\n    const filteredItems = props.chipSeqList.filter(item => item.inventory.lab && item.inventory.lab.code && item.inventory.lab.code.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.sampleID && item.inventory.sampleID.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.assayType && item.inventory.assayType.assayType && item.inventory.assayType.assayType.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.experiment && item.inventory.experiment.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.species && item.inventory.species.name && item.inventory.species.name.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.strain && item.inventory.strain.strain && item.inventory.strain.strain.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.tissue && item.inventory.tissue.tissue && item.inventory.tissue.tissue.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.cellLine && item.inventory.cellLine.cellLine && item.inventory.cellLine.cellLine.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.tissueProcessing && item.inventory.tissueProcessing.tissueProcessing && item.inventory.tissueProcessing.tissueProcessing.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.individual && item.inventory.individual.individual && item.inventory.individual.individual.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.sex && item.inventory.sex.sex && item.inventory.sex.sex.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.factory && item.inventory.factory.factory && item.inventory.factory.factory.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.antibody && item.inventory.antibody.antibody && item.inventory.antibody.antibody.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.condition && item.inventory.condition.conditionName && item.inventory.condition.conditionName.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.barcode && item.inventory.barcode.type && item.inventory.barcode.type.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.inventory.barcode && item.inventory.barcode.barcode && item.inventory.barcode.barcode.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.rawRead && item.rawRead.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.mappedValue && item.mappedValue.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.mappedPercent && item.mappedPercent.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.uniqueMappedValue && item.uniqueMappedValue.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.uniquePercent && item.uniquePercent.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.PBC && item.PBC.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.NRF && item.NRF.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.NSC && item.NSC.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.RSC && item.RSC.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.peaks && item.peaks.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.frip && item.frip.toLowerCase().includes(props.searchFilter.toLowerCase()) || item.techRep && item.techRep.toLowerCase().includes(props.searchFilter.toLowerCase()));\n    return props.chipSeqList.length > 0 && /*#__PURE__*/React.createElement(DataTable, {\n      className: \"table table-bordered table-primary no-footer\",\n      noHeader: true,\n      columns: props.columns,\n      data: props.searchFilter.trim().length > 0 ? filteredItems : props.chipSeqList,\n      highlightOnHover: true,\n      pagination: true,\n      wrap: true,\n      paginationRowsPerPageOptions: [10, 20, 40, 50, 100, 200, 1000],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    });\n  };\n\n  const fetchChipSeq = async () => {\n    try {\n      var res = await axios(url);\n    } catch (error) {\n      if (error.response && error.response.data && error.response.data.message) {\n        console.log(`error: ${error.response.data.message}`);\n      } else {\n        console.log(`error: ${error.message}`);\n      }\n    }\n\n    setChipSeqList(res.data);\n    setShowPreLoader(false);\n  };\n\n  useEffect(() => {\n    fetchChipSeq();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"preloader\",\n    style: showPreLoader ? {\n      opacity: \"0.6\"\n    } : {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCog,\n    className: \"fa-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mainpanel\",\n    style: {\n      marginLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pageheader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"QC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 21\n    }\n  }, \"Chip-Seq Table\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contentpanel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      margin: '20px 0px 35px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 42\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    \"data-ng-init\": \"Show()\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    style: {\n      marginLeft: '5px'\n    },\n    placeholder: \"Search\",\n    onKeyUp: e => {\n      setFilter(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-default\",\n    onClick: addModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 41\n    }\n  }, \"Upload CSV\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    style: {\n      margin: '10px 0px 35px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel panel-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ChipSeqTable, {\n    columns: columns,\n    chipSeqList: chipSeqList,\n    searchFilter: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalShow,\n    style: customStyles,\n    contentLabel: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: closeModal,\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 45\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 45\n    }\n  }, \"Upload File \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 64\n    }\n  }, \"*Only accept csv file\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 45\n    }\n  }, reUpload ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"status\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 57\n    }\n  }, \"Replace Ids: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-8 col-md-8 col-sm-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: existIdList,\n    isMulti: true,\n    value: replaceId,\n    onChange: e => {\n      setReplaceId(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 61\n    }\n  }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"csvFile\",\n    className: \"col-sm-4 control-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 53\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control-file\",\n    accept: \"text/csv\",\n    id: \"csvFile\",\n    onChange: e => {\n      setFile(e.target.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 53\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"panel-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-lg-3 col-lg-offset-9 col-md-4 col-md-offset-8 col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 57\n    }\n  }, reUpload ? \"Re-Upload\" : \"Upload\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-default\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 57\n    }\n  }, \"Cancel\"))))))))))))));\n}\n\nexport default React.memo(PageChipSeq);","map":{"version":3,"sources":["/Users/mengyisong/Documents/cwj/lab/client/src/views/ChipSeq/index.js"],"names":["React","useState","useEffect","DataTable","Modal","appConfig","axios","Swal","Select","FontAwesomeIcon","faCog","common","require","setAppElement","PageChipSeq","showPreLoader","setShowPreLoader","chipSeqList","setChipSeqList","reUpload","setReUpload","existIdList","setExistIdList","replaceId","setReplaceId","modalShow","setModalShow","file","setFile","url","baseURL","customStyles","content","top","left","right","bottom","transform","width","deleteModal","item","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","deleteURL","id","delete","resp","fetchChipSeq","catch","error","console","log","response","data","message","closeModal","addModal","upload","formData","FormData","append","length","replaceIdList","forEach","push","value","config","headers","post","existId","existIds","map","label","errMsg","columns","name","selector","sortable","cell","c","backgroundColor","inventory","factory","color","filter","setFilter","ChipSeqTable","props","filteredItems","lab","code","toLowerCase","includes","searchFilter","sampleID","assayType","experiment","species","strain","tissue","cellLine","tissueProcessing","individual","sex","antibody","condition","conditionName","barcode","type","rawRead","mappedValue","mappedPercent","uniqueMappedValue","uniquePercent","PBC","NRF","NSC","RSC","peaks","frip","techRep","trim","res","opacity","display","marginLeft","margin","e","target","files","textAlign","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport Modal from 'react-modal';\nimport appConfig from '../../config/app.config';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport Select from \"react-select\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nconst common = require(\"../../lib/common\");\n\nModal.setAppElement('#root')\n\nfunction PageChipSeq() {\n    const [showPreLoader, setShowPreLoader] = useState(true);\n    const [chipSeqList, setChipSeqList] = useState([]);\n    const [reUpload, setReUpload] = useState(false);\n    const [existIdList, setExistIdList] = useState([]);\n    const [replaceId, setReplaceId] = useState([]);\n    const [modalShow, setModalShow] = useState(false);\n    const [file, setFile] = useState([]);\n    const url = `${appConfig.baseURL}/api/chipSeq`;\n\n    const customStyles = {\n        content: {\n            top: '40%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            transform: 'translate(-50%, -50%)',\n            width: '60%'\n        }\n    };\n\n    const deleteModal = (item) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n        }).then((result) => {\n            if (result.isConfirmed) {\n                setShowPreLoader(true);\n                let deleteURL = url + \"chipSeq\" + \"/\" + item.id;\n\n                axios.delete(deleteURL)\n                    .then((resp) => {\n                        setShowPreLoader(false);\n                        Swal.fire(\n                            'Deleted!',\n                            'Your record has been deleted.',\n                            'success'\n                        );\n                        fetchChipSeq();\n                    }).catch((error) => {\n                        setShowPreLoader(false);\n                        Swal.fire({\n                            icon: 'error',\n                            title: 'Oops...',\n                            text: 'Something went wrong!'\n                        })\n                        console.log(`error: ${error.response.data.message}`);\n                    })\n            }\n        });\n    };\n\n    const closeModal = () => {\n        setModalShow(false);\n        setFile(null);\n        setReUpload(false);\n        setExistIdList([]);\n        setReplaceId();\n    };\n\n    const addModal = () => {\n        setModalShow(true);\n        setFile(null);\n    };\n\n    const upload = () => {\n        if (file) {\n            setShowPreLoader(true);\n\n            let formData = new FormData();\n            formData.append('file', file);\n\n            if (replaceId && replaceId.length > 0) {\n                let replaceIdList = [];\n\n                replaceId.forEach((item) => {\n                    replaceIdList.push(item.value);\n                })\n\n                formData.append('replaceId', replaceIdList);\n            }\n\n            let config = {\n                headers:{'Content-Type':'multipart/form-data'},\n              }; \n            \n            axios.post(url + \"/upload\", formData, config)\n                .then((resp) => {\n                    Swal.fire({\n                        title: 'Uploaded!',\n                         icon: 'success',\n                         text: resp.data.message\n                    });\n                    \n                    if (resp.data.existId) {\n                        setReUpload(true);\n\n                        let existIds = resp.data.existId;\n                        let existIdList = existIds.map((item) => {\n                            return { label: item, value: item }\n                        });\n                        setExistIdList(existIdList);\n                    }\n                    else {\n                        closeModal();\n                    }\n\n                    fetchChipSeq();\n                    setShowPreLoader(false);\n                }).catch((error) => {\n                    closeModal();\n                    setShowPreLoader(false);\n                    let errMsg = \"\";\n    \n                    if (error.response && error.response.data && error.response.data.message) {\n                        errMsg = `error: ${error.response.data.message}`;\n                        console.log(errMsg);\n                    }\n                    else {\n                        errMsg = `error: ${error.message}`;\n                        console.log(errMsg);\n                    }\n    \n                    Swal.fire({\n                        icon: 'error',\n                        title: 'Oops...',\n                        text: errMsg\n                    });\n                })\n        }\n        else {\n            Swal.fire({\n                icon: 'error',\n                title: 'Oops...',\n                text: \"Please choose a csv to upload.\"\n            });\n        }\n    };\n\n    const columns = [\n        {\n            name: \"Lab\",\n            selector: 'inventory.lab.code',\n            sortable: true\n        },\n        {\n            name: \"Sample ID\",\n            selector: 'inventory.sampleID',\n            sortable: true\n        },\n        {\n            name: \"Assay Type\",\n            selector: 'inventory.assayType.assayType',\n            sortable: true\n        },\n        {\n            name: \"Experiment\",\n            selector: 'inventory.experiment',\n            sortable: true\n        },\n        {\n            name: \"Species\",\n            selector: 'inventory.species.name',\n            sortable: true\n        },\n        {\n            name: \"Strain\",\n            selector: 'inventory.strain.strain',\n            sortable: true\n        },\n        {\n            name: \"Tissue\",\n            selector: 'inventory.tissue.tissue',\n            sortable: true\n        },\n        {\n            name: \"Cell Line\",\n            selector: 'inventory.cellLine.cellLine',\n            sortable: true\n        },\n        {\n            name: \"Tissue Processing\",\n            selector: 'inventory.tissueProcessing.tissueProcessing',\n            sortable: true\n        },\n        {\n            name: \"Individual\",\n            selector: 'inventory.individual.individual',\n            sortable: true\n        },\n        {\n            name: \"Sex\",\n            selector: 'inventory.sex.sex',\n            sortable: true\n        },\n        {\n            name: \"Factory\",\n            selector: 'inventory.factory.factory',\n            sortable: true\n        },\n        {\n            name: \"Antibody\",\n            selector: 'inventory.antibody.antibody',\n            sortable: true\n        },\n        {\n            name: \"Condition\",\n            selector: 'inventory.condition.conditionName',\n            sortable: true\n        },\n        {\n            name: \"Barcode Type\",\n            selector: 'inventory.barcode.type',\n            sortable: true\n        },\n        {\n            name: \"Barcode\",\n            selector: 'inventory.barcode.barcode',\n            sortable: true\n        },\n        {\n            name: \"# Raw Reads\",\n            selector: 'rawRead',\n            sortable: true\n        },\n        {\n            name: \"# Mapped Reads\",\n            selector: 'mappedValue',\n            sortable: true\n        },\n        {\n            name: \"% Mapped Reads\",\n            selector: 'mappedPercent',\n            sortable: true\n        },\n        {\n            name: \"# Uniquely Mapped Reads\",\n            selector: 'uniqueMappedValue',\n            sortable: true\n        },\n        {\n            name: \"% Uniquely Mapped Reads\",\n            selector: 'uniquePercent',\n            sortable: true\n        },\n        {\n            name: \"PBC\",\n            selector: 'PBC',\n            sortable: true\n        },\n        {\n            name: \"NRF\",\n            selector: 'NRF',\n            sortable: true\n        },\n        {\n            name: \"NSC\",\n            selector: 'NSC',\n            sortable: true\n        },\n        {\n            name: \"RSC\",\n            selector: 'RSC',\n            sortable: true\n        },\n        {\n            name: \"# Peaks\",\n            selector: 'peaks',\n            sortable: true\n        },\n        {\n            name: \"Frip\",\n            selector: 'frip',\n            sortable: true\n        },\n        {\n            name: \"Technical Replicate\",\n            selector: 'techRep',\n            sortable: true\n        },\n        {\n            name: \"Color\",\n            cell: (c) => {\n                return (\n                    <div>\n                        <label style={{ backgroundColor: c.inventory.factory.color }} >{ c.inventory.factory.color }</label>\n                    </div>\n                )\n            }\n        },\n        {\n            name: '',\n            cell: (c) => {\n                return (\n                    <div className=\"form-group\">\n                        <button onClick={() => { deleteModal(c) }}\n                            className=\"btn btn-default\">Delete\n                        </button>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    const [filter, setFilter] = useState(\"\");\n\n    const ChipSeqTable = (props) => {\n        const filteredItems = props.chipSeqList.filter(item =>\n            (\n                (item.inventory.lab && item.inventory.lab.code && item.inventory.lab.code.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.sampleID && item.inventory.sampleID.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.assayType && item.inventory.assayType.assayType && item.inventory.assayType.assayType.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.experiment && item.inventory.experiment.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.species && item.inventory.species.name && item.inventory.species.name.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.strain && item.inventory.strain.strain && item.inventory.strain.strain.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.tissue && item.inventory.tissue.tissue && item.inventory.tissue.tissue.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.cellLine && item.inventory.cellLine.cellLine && item.inventory.cellLine.cellLine.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.tissueProcessing && item.inventory.tissueProcessing.tissueProcessing && item.inventory.tissueProcessing.tissueProcessing.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.individual && item.inventory.individual.individual && item.inventory.individual.individual.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.sex && item.inventory.sex.sex && item.inventory.sex.sex.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.factory && item.inventory.factory.factory && item.inventory.factory.factory.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.antibody && item.inventory.antibody.antibody && item.inventory.antibody.antibody.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.condition && item.inventory.condition.conditionName && item.inventory.condition.conditionName.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.barcode && item.inventory.barcode.type && item.inventory.barcode.type.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.inventory.barcode && item.inventory.barcode.barcode && item.inventory.barcode.barcode.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.rawRead && item.rawRead.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.mappedValue && item.mappedValue.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.mappedPercent && item.mappedPercent.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.uniqueMappedValue && item.uniqueMappedValue.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.uniquePercent && item.uniquePercent.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.PBC && item.PBC.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.NRF && item.NRF.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.NSC && item.NSC.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.RSC && item.RSC.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.peaks && item.peaks.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.frip && item.frip.toLowerCase().includes(props.searchFilter.toLowerCase()))\n                || (item.techRep && item.techRep.toLowerCase().includes(props.searchFilter.toLowerCase()))\n\n            )\n        )\n\n        return (\n            props.chipSeqList.length > 0 &&\n            <DataTable\n                className=\"table table-bordered table-primary no-footer\"\n                noHeader={true}\n                columns={props.columns}\n                data={props.searchFilter.trim().length > 0 ? filteredItems : props.chipSeqList}\n                highlightOnHover\n                pagination={true}\n                wrap={true}\n                paginationRowsPerPageOptions={[10, 20, 40, 50, 100, 200, 1000]}\n            />\n        )\n    };\n\n    const fetchChipSeq = async () => {\n        try {\n            var res = await axios(url);\n        }\n        catch (error) {\n            if (error.response && error.response.data && error.response.data.message) {\n                console.log(`error: ${error.response.data.message}`);\n            }\n            else {\n                console.log(`error: ${error.message}`);\n            }\n        }\n\n        setChipSeqList(res.data);\n        setShowPreLoader(false);\n    };\n\n    useEffect(() => {\n        fetchChipSeq();\n    }, []);\n\n    return (<>\n        <div id=\"preloader\" style={showPreLoader ? { opacity: \"0.6\" } : { display: \"none\" }}>\n            <div id=\"status\">\n                <FontAwesomeIcon icon={faCog} className=\"fa-spin\" />\n            </div>\n        </div>\n        <div className=\"mainpanel\" style={{ marginLeft: '5px' }}>\n            <div className=\"row\">\n                <div className=\"pageheader\">\n                    <h1 className=\"QC\">Chip-Seq Table</h1>\n                </div>\n            </div>\n            <div className=\"contentpanel\">\n                <div className=\"row\" style={{ margin: '20px 0px 35px 0px' }}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-primary\">\n                            <div className=\"panel-heading\">\n                                <div className=\"panel-title\">\n                                    <div><span></span></div>\n                                </div>\n                            </div>\n                            <div className=\"panel-body\" data-ng-init=\"Show()\">\n                                <form className=\"form-inline\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control\" style={{ marginLeft: '5px' }} placeholder=\"Search\" onKeyUp={(e) => { setFilter(e.target.value) }} />\n                                        <button type=\"button\" className=\"btn btn-default\" onClick={addModal} >Upload CSV</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\" style={{ margin: '10px 0px 35px 0px' }}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-body table-responsive\">\n                                <ChipSeqTable\n                                    columns={columns}\n                                    chipSeqList={chipSeqList}\n                                    searchFilter={filter}\n                                />\n                                <Modal\n                                    isOpen={modalShow}\n                                    style={customStyles}\n                                    contentLabel=\"\"\n                                >\n                                    <div className=\"panel\">\n                                        <button type=\"button\" onClick={closeModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                        <div className=\"panel-heading\">\n                                            <label>Upload File <i>*Only accept csv file</i></label>\n                                        </div>\n                                        <div className=\"panel-body\">\n                                            <div className=\"form-horizontal\">\n                                            { reUpload ? \n                                                    <div className=\"form-group\">\n                                                        <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Replace Ids: </label>\n                                                        <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                            <Select\n                                                                options={existIdList}\n                                                                isMulti\n                                                                value={replaceId}\n                                                                onChange={(e) => {\n                                                                    setReplaceId(e);\n                                                                }}\n                                                            />\n                                                        </div>\n                                                    </div> : null\n                                                }\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"csvFile\" className=\"col-sm-4 control-label\" >File</label>\n                                                    <input type=\"file\" className=\"form-control-file\" accept=\"text/csv\" id=\"csvFile\" onChange={(e) => { setFile(e.target.files[0]); }} />\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"panel-footer\">\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-3 col-lg-offset-9 col-md-4 col-md-offset-8 col-sm-12\">\n                                                    <div className=\"form-group\" style={{ textAlign: \"right\" }}>\n                                                        <button className=\"btn btn-primary\" onClick={upload} >{ reUpload ? \"Re-Upload\" : \"Upload\" }</button>\n                                                        <button type=\"button\" className=\"btn btn-default\" onClick={closeModal} >Cancel</button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Modal>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </>);\n}\n\nexport default React.memo(PageChipSeq)"]},"metadata":{},"sourceType":"module"}