[{"/Users/mengyisong/Documents/cwj/lab/client/src/index.js":"1","/Users/mengyisong/Documents/cwj/lab/client/src/App.js":"2","/Users/mengyisong/Documents/cwj/lab/client/src/style.js":"3","/Users/mengyisong/Documents/cwj/lab/client/src/routes/index.js":"4","/Users/mengyisong/Documents/cwj/lab/client/src/layouts/BasicLayout.js":"5","/Users/mengyisong/Documents/cwj/lab/client/src/views/404.js":"6","/Users/mengyisong/Documents/cwj/lab/client/src/layouts/BlankLayout.js":"7","/Users/mengyisong/Documents/cwj/lab/client/src/basicUI/Placeholder/index.js":"8","/Users/mengyisong/Documents/cwj/lab/client/src/views/Gender/index.js":"9","/Users/mengyisong/Documents/cwj/lab/client/src/views/Home/index.js":"10","/Users/mengyisong/Documents/cwj/lab/client/src/views/AssayType/index.js":"11","/Users/mengyisong/Documents/cwj/lab/client/src/views/Antibody/index.js":"12","/Users/mengyisong/Documents/cwj/lab/client/src/config/nav.js":"13","/Users/mengyisong/Documents/cwj/lab/client/src/config/footer.js":"14","/Users/mengyisong/Documents/cwj/lab/client/src/views/Home/style.js":"15","/Users/mengyisong/Documents/cwj/lab/client/src/components/Exception/index.js":"16","/Users/mengyisong/Documents/cwj/lab/client/src/components/Nav/index.js":"17","/Users/mengyisong/Documents/cwj/lab/client/src/components/Footer/index.js":"18","/Users/mengyisong/Documents/cwj/lab/client/src/components/Exception/type.js":"19","/Users/mengyisong/Documents/cwj/lab/client/src/components/Exception/style.js":"20","/Users/mengyisong/Documents/cwj/lab/client/src/components/Footer/style.js":"21","/Users/mengyisong/Documents/cwj/lab/client/src/config/app.config.js":"22"},{"size":457,"mtime":1628124891553,"results":"23","hashOfConfig":"24"},{"size":403,"mtime":1628126269165,"results":"25","hashOfConfig":"24"},{"size":874,"mtime":1628124891553,"results":"26","hashOfConfig":"24"},{"size":2300,"mtime":1628124891579,"results":"27","hashOfConfig":"24"},{"size":752,"mtime":1628124891579,"results":"28","hashOfConfig":"24"},{"size":185,"mtime":1628124891579,"results":"29","hashOfConfig":"24"},{"size":215,"mtime":1628124891614,"results":"30","hashOfConfig":"24"},{"size":658,"mtime":1628124891603,"results":"31","hashOfConfig":"24"},{"size":7753,"mtime":1628128696416,"results":"32","hashOfConfig":"24"},{"size":493,"mtime":1628124891739,"results":"33","hashOfConfig":"24"},{"size":7392,"mtime":1628124891731,"results":"34","hashOfConfig":"24"},{"size":7363,"mtime":1628124891623,"results":"35","hashOfConfig":"24"},{"size":3912,"mtime":1628124891614,"results":"36","hashOfConfig":"24"},{"size":594,"mtime":1628124891579,"results":"37","hashOfConfig":"24"},{"size":125,"mtime":1628124891743,"results":"38","hashOfConfig":"24"},{"size":890,"mtime":1628127274247,"results":"39","hashOfConfig":"24"},{"size":3015,"mtime":1628124891780,"results":"40","hashOfConfig":"24"},{"size":654,"mtime":1628125637257,"results":"41","hashOfConfig":"24"},{"size":156,"mtime":1628124891732,"results":"42","hashOfConfig":"24"},{"size":878,"mtime":1628124891730,"results":"43","hashOfConfig":"24"},{"size":668,"mtime":1628124891739,"results":"44","hashOfConfig":"24"},{"size":73,"mtime":1628128383606,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1w6sz73",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mengyisong/Documents/cwj/lab/client/src/index.js",[],["94","95"],"/Users/mengyisong/Documents/cwj/lab/client/src/App.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/style.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/routes/index.js",["96"],"import React, { lazy, Suspense } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport BasicLayout from '../layouts/BasicLayout'\nimport BlankLayout from '../layouts/BlankLayout'\nimport CustomPlaceholder from '../basicUI/Placeholder'\n\nconst SuspenseComponent = Component => props => {\n    return(\n        <Suspense fallback={ <CustomPlaceholder />}>\n            <Component {...props}></Component>\n        </Suspense>\n    )\n}\n\nconst PageHome = lazy(() => import('../views/Home'))\nconst Page404 = lazy(() => import('../views/404'))\nconst PageGender = lazy(() => import('../views/Gender'))\nconst PageAntibody = lazy(() => import('../views/Antibody'))\nconst PageAssayType = lazy(() => import('../views/AssayType'))\n\n\n\nexport default [\n    {\n        component: BlankLayout,\n        routes: [\n            {\n                path: '/',\n                component: BasicLayout,\n                routes: [\n                    {\n                        path: '/',\n                        exact: true,\n                        render: () => <Redirect to={ '/Home' } />\n                    },\n                    {\n                        path: '/Home',\n                        exact: true,\n                        component: SuspenseComponent(PageHome)\n                        \n                    },\n                    {\n                        path: '/Gender',\n                        exact: true,\n                        component: SuspenseComponent(PageGender)\n                    },\n                    {\n                        path: '/Antibody',\n                        exact: true,\n                        component: SuspenseComponent(PageAntibody)\n                    },\n                    {\n                        path: '/AssayType',\n                        exact: true,\n                        component: SuspenseComponent(PageAssayType)\n                    },\n                    {\n                        path: '/404',\n                        exact: true,\n                        component: SuspenseComponent(Page404)\n                    },\n                    {\n                        path: '/*',\n                        exact: true,\n                        component: SuspenseComponent(Page404)\n                    },\n                   \n                ]\n            }\n        ]\n    }\n]","/Users/mengyisong/Documents/cwj/lab/client/src/layouts/BasicLayout.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/views/404.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/layouts/BlankLayout.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/basicUI/Placeholder/index.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/views/Gender/index.js",["97","98"],"/Users/mengyisong/Documents/cwj/lab/client/src/views/Home/index.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/views/AssayType/index.js",["99","100"],"import React, { useState, useCallback } from 'react'\nimport DataTable from 'react-data-table-component'\nimport Modal from 'react-modal'\n\nModal.setAppElement('#root')\n\nfunction PageAssayType () {\n    const [AssayTypeList, setAssayTypeList] = useState([{\"AssayType\":\"atawt\",\"ID\":\"1\"},{\"AssayType\":\"awta\",\"ID\":\"2\"}])\n    const [modalShow, setModalShow] = useState(false)\n    const [modal, setModal] = useState({\"AssayType\":\"\",\"ID\":\"\"})\n    const [AssayType, setAssayType] = useState(\"\")\n    const customStyles = {\n        content: {\n            top: '40%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            transform: 'translate(-50%, -50%)',\n            width: '60%'\n        }\n    }\n    const closeModal = () => {\n        setModalShow(false);\n    }\n\n    const addModal = () => {\n        setModalShow(true);\n        setModal({\"AssayType\":\"\",\"ID\":\"\"})\n    }\n\n    const deleteModal = () => {\n        updateTableCallback()\n    }\n\n    const save = () => {\n        updateTableCallback()\n    }\n\n    const columns = [\n        {\n            name: \"AssayType\",\n            selector: 'AssayType'\n        },\n        {\n            name: '',\n            cell: (c) => {\n               return (\n                 <button onClick={() => { \n                    setModalShow(true)\n                    setModal(c)\n                    }}\n                   className=\"btn btn-default\">Edit</button>\n                 )\n              }\n         },\n         {\n            name: '',\n            cell: (c) => {\n               return (\n                 <button onClick={deleteModal\n                    }\n                   className=\"btn btn-default\">Delete</button>\n                 )\n              }\n         }\n    ]\n    const [filter, setFilter] = useState(\"\")\n\n    const updateTableCallback = useCallback( () => {}, [])\n\n    const AssayTypeTable = (props) => {\n        const filteredItems = props.AssayTypeList.filter(item =>\n            (\n                item.AssayType && item.AssayType.toLowerCase().includes(props.searchFilter.toLowerCase())\n            )    \n        )\n\n        return(\n            props.AssayTypeList.length > 0 &&\n            <DataTable \n                className=\"table table-bordered table-primary no-footer\"\n                noHeader={true}\n                columns={props.columns}\n                data={filteredItems}\n                highlightOnHover\n                pagination={true}\n                wrap={true}\n                paginationRowsPerPageOptions={[10, 20, 40, 50, 100, 200, 1000]}\n            />\n        )\n    }\n\n    return (\n        <div className=\"mainpanel\" style={{ marginLeft: '5px' }}>\n            <div className=\"row\">\n                <div className=\"pageheader\">\n                    <h1 className=\"QC\">Assay Type Management</h1>\n                </div>\n            </div>\n            <div className=\"contentpanel\">\n                <div className=\"row\" style={{margin:'20px 0px 35px 0px'}}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-primary\">\n                            <div className=\"panel-heading\">\n                                <div className=\"panel-title\">\n                                    <div><span></span></div>\n                                </div>\n                            </div>\n                            <div className=\"panel-body\" data-ng-init=\"Show()\">\n                                <form className=\"form-inline\">\n                                    <div className=\"form-group\">\n                                        <label>Search</label>\n                                        <input type=\"text\" className=\"form-control\" style={{marginLeft:'5px'}} placeholder=\"Search\" onKeyUp={(e) => {setFilter(e.target.value)}}/>\n                                        <button type=\"button\" className=\"btn btn-default\" onClick={addModal} >Add</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\" style={{margin:'10px 0px 35px 0px'}}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-body table-responsive\">\n                                <AssayTypeTable \n                                    columns={columns}\n                                    AssayTypeList={AssayTypeList}\n                                    searchFilter={filter}\n                                />\n                                <Modal\n                                    isOpen={modalShow}\n                                    style={customStyles}\n                                    contentLabel=\"\"       \n                                >\n                                    <div className=\"panel\">\n                                        <button type=\"button\" onClick={closeModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                        <div className=\"panel-heading\">\n                                        </div>\n                                        <div className=\"panel-body\">\n                                            <div className=\"form-horizontal\">\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Assay Type</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <input type=\"text\" className=\"form-control\" onKeyUp={(e) => { setAssayType(e.target.value); }} placeholder=\"AssayType\" defaultValue={modal.AssayType} />\n                                                    </div>\n                                                </div>  \n                                            \n                                            </div>\n                                        </div>\n                                    \n                                        <div className=\"panel-footer\">\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-2 col-lg-offset-8 col-md-3 col-md-offset-6 col-sm-12\">\n                                                    <button type=\"button\" className=\"btn btn-default\" onClick={closeModal} >Cancel</button>\n                                                </div>\n                                                <div className=\"col-lg-2 col-md-3 col-sm-12\">\n                                                    <button className=\"btn btn-primary\" onClick={save}>Save</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Modal>\n                            </div>\n                        </div>\n                    </div>           \n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default React.memo(PageAssayType)","/Users/mengyisong/Documents/cwj/lab/client/src/views/Antibody/index.js",["101","102"],"import React, { useState, useCallback } from 'react'\nimport DataTable from 'react-data-table-component'\nimport Modal from 'react-modal'\n\nModal.setAppElement('#root')\n\nfunction PageAntibody () {\n    const [antibodyList, setantibodyList] = useState([{\"antibody\":\"bag\",\"ID\":\"1\"},{\"antibody\":\"aaa\",\"ID\":\"2\"}])\n    const [modalShow, setModalShow] = useState(false)\n    const [modal, setModal] = useState({\"antibody\":\"\",\"ID\":\"\"})\n    const [antibody, setantibody] = useState(\"\")\n    const customStyles = {\n        content: {\n            top: '40%',\n            left: '50%',\n            right: 'auto',\n            bottom: 'auto',\n            transform: 'translate(-50%, -50%)',\n            width: '60%'\n        }\n    }\n    const closeModal = () => {\n        setModalShow(false);\n    }\n\n    const addModal = () => {\n        setModalShow(true);\n        setModal({\"antibody\":\"\",\"ID\":\"\"})\n    }\n\n    const deleteModal = () => {\n        updateTableCallback()\n    }\n\n    const save = () => {\n        updateTableCallback()\n    }\n\n\n    const columns = [\n        {\n            name: \"Antibody\",\n            selector: 'antibody'\n        },\n        {\n            name: '',\n            cell: (c) => {\n               return (\n                 <button onClick={() => { \n                    setModalShow(true)\n                    setModal(c)\n                    }}\n                   className=\"btn btn-default\">Edit</button>\n                 )\n              }\n         },\n         {\n            name: '',\n            cell: (c) => {\n               return (\n                 <button onClick={deleteModal\n                    }\n                   className=\"btn btn-default\">Delete</button>\n                 )\n              }\n         }\n    ]\n    const [filter, setFilter] = useState(\"\")\n\n    const updateTableCallback = useCallback( () => {}, [])\n\n    const AntibodyTable = (props) => {\n        const filteredItems = props.antibodyList.filter(item =>\n            (\n                item.antibody && item.antibody.toLowerCase().includes(props.searchFilter.toLowerCase())\n            )    \n        )\n\n        return(\n            props.antibodyList.length > 0 &&\n            <DataTable \n                className=\"table table-bordered table-primary no-footer\"\n                noHeader={true}\n                columns={props.columns}\n                data={filteredItems}\n                highlightOnHover\n                pagination={true}\n                wrap={true}\n                paginationRowsPerPageOptions={[10, 20, 40, 50, 100, 200, 1000]}\n            />\n        )\n    }\n\n    return (\n        <div className=\"mainpanel\" style={{ marginLeft: '5px' }}>\n            <div className=\"row\">\n                <div className=\"pageheader\">\n                    <h1 className=\"QC\">Antibody Management</h1>\n                </div>\n            </div>\n            <div className=\"contentpanel\">\n                <div className=\"row\" style={{margin:'10px 0px 35px 0px'}}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-primary\">\n                            <div className=\"panel-heading\">\n                                <div className=\"panel-title\">\n                                    <div><span></span></div>\n                                </div>\n                            </div>\n                            <div className=\"panel-body\" data-ng-init=\"Show()\">\n                                <form className=\"form-inline\">\n                                    <div className=\"form-group\">\n                                        <label>Search</label>\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search\" onKeyUp={(e) => {setFilter(e.target.value)}}/>\n                                        <button type=\"button\" className=\"btn btn-default\" style={{marginLeft:'5px'}} onClick={addModal} >Add</button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\" style={{margin:'10px 0px 35px 0px'}}>\n                    <div className=\"col-md-12\">\n                        <div className=\"panel panel-default\">\n                            <div className=\"panel-body table-responsive\">\n                                <AntibodyTable \n                                    columns={columns}\n                                    antibodyList={antibodyList}\n                                    searchFilter={filter}\n                                />\n                                <Modal\n                                    isOpen={modalShow}\n                                    style={customStyles}\n                                    contentLabel=\"\"       \n                                >\n                                    <div className=\"panel\">\n                                        <button type=\"button\" onClick={closeModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                            <span aria-hidden=\"true\">&times;</span>\n                                        </button>\n                                        <div className=\"panel-heading\">\n                                        </div>\n                                        <div className=\"panel-body\">\n                                            <div className=\"form-horizontal\">\n                                                <div className=\"form-group\">\n                                                    <label htmlFor=\"status\" className=\"col-sm-4 control-label\">Antibody</label>\n                                                    <div className=\"col-lg-8 col-md-8 col-sm-8\">\n                                                        <input type=\"text\" className=\"form-control\" onKeyUp={(e) => { setantibody(e.target.value); }} placeholder=\"antibody\" defaultValue={modal.antibody} />\n                                                    </div>\n                                                </div>  \n                                            \n                                            </div>\n                                        </div>\n                                    \n                                        <div className=\"panel-footer\">\n                                            <div className=\"row\">\n                                                <div className=\"col-lg-2 col-lg-offset-8 col-md-3 col-md-offset-6 col-sm-12\">\n                                                    <button type=\"button\" className=\"btn btn-default\" onClick={closeModal} >Cancel</button>\n                                                </div>\n                                                <div className=\"col-lg-2 col-md-3 col-sm-12\">\n                                                    <button className=\"btn btn-primary\" onClick={save}>Save</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Modal>\n                            </div>\n                        </div>\n                    </div>           \n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default React.memo(PageAntibody)","/Users/mengyisong/Documents/cwj/lab/client/src/config/nav.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/config/footer.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/views/Home/style.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/components/Exception/index.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/components/Nav/index.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/components/Footer/index.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/components/Exception/type.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/components/Exception/style.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/components/Footer/style.js",[],"/Users/mengyisong/Documents/cwj/lab/client/src/config/app.config.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":23,"column":1,"nodeType":"109","endLine":72,"endColumn":2},{"ruleId":"110","severity":1,"message":"111","line":13,"column":12,"nodeType":"112","messageId":"113","endLine":13,"endColumn":18},{"ruleId":"114","severity":2,"message":"115","line":101,"column":9,"nodeType":"112","messageId":"116","endLine":101,"endColumn":10},{"ruleId":"110","severity":1,"message":"117","line":8,"column":27,"nodeType":"112","messageId":"113","endLine":8,"endColumn":43},{"ruleId":"110","severity":1,"message":"118","line":11,"column":12,"nodeType":"112","messageId":"113","endLine":11,"endColumn":21},{"ruleId":"110","severity":1,"message":"119","line":8,"column":26,"nodeType":"112","messageId":"113","endLine":8,"endColumn":41},{"ruleId":"110","severity":1,"message":"120","line":11,"column":12,"nodeType":"112","messageId":"113","endLine":11,"endColumn":20},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'gender' is assigned a value but never used.","Identifier","unusedVar","no-undef","'$' is not defined.","undef","'setAssayTypeList' is assigned a value but never used.","'AssayType' is assigned a value but never used.","'setantibodyList' is assigned a value but never used.","'antibody' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]